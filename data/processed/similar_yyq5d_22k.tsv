q_file	user_input	similarity	q_id	q_title	tags	accepted_answer_id	a_body	a_body	a_cleaned_body
new_qs_22k.csv	Is there a way to visualize the distribution of my data?	0.99999595	10944621	Dynamically updating plot in matplotlib	pythonmatplotlibtkinter	10944967	"<blockquote>
  <p><em>Is there a way in which I can update the plot just by adding more point[s] to it...</em></p>
</blockquote>

<p>There are a number of ways of animating data in matplotlib, depending on the version you have. Have you seen the <a href=""http://www.scipy.org/Cookbook/Matplotlib/Animations"">matplotlib cookbook</a> examples? Also, check out the more modern <a href=""http://matplotlib.sourceforge.net/examples/animation/index.html"">animation examples</a> in the matplotlib documentation. Finally, the <a href=""http://matplotlib.sourceforge.net/api/animation_api.html"">animation API</a> defines a function <a href=""http://matplotlib.sourceforge.net/api/animation_api.html#matplotlib.animation.FuncAnimation"">FuncAnimation</a> which animates a function in time. This function could just be the function you use to acquire your data.</p>

<p>Each method basically sets the <code>data</code> property of the object being drawn, so doesn't require clearing the screen or figure. The <code>data</code> property can simply be extended, so you can keep the previous points and just keep adding to your line (or image or whatever you are drawing).</p>

<p>Given that you say that your data arrival time is uncertain your best bet is probably just to do something like:</p>

<pre><code>import matplotlib.pyplot as plt
import numpy

hl, = plt.plot([], [])

def update_line(hl, new_data):
    hl.set_xdata(numpy.append(hl.get_xdata(), new_data))
    hl.set_ydata(numpy.append(hl.get_ydata(), new_data))
    plt.draw()
</code></pre>

<p>Then when you receive data from the serial port just call <code>update_line</code>.</p>"	"<blockquote>
  <p><em>Is there a way in which I can update the plot just by adding more point[s] to it...</em></p>
</blockquote>

<p>There are a number of ways of animating data in matplotlib, depending on the version you have. Have you seen the <a href=""http://www.scipy.org/Cookbook/Matplotlib/Animations"">matplotlib cookbook</a> examples? Also, check out the more modern <a href=""http://matplotlib.sourceforge.net/examples/animation/index.html"">animation examples</a> in the matplotlib documentation. Finally, the <a href=""http://matplotlib.sourceforge.net/api/animation_api.html"">animation API</a> defines a function <a href=""http://matplotlib.sourceforge.net/api/animation_api.html#matplotlib.animation.FuncAnimation"">FuncAnimation</a> which animates a function in time. This function could just be the function you use to acquire your data.</p>

<p>Each method basically sets the <code>data</code> property of the object being drawn, so doesn't require clearing the screen or figure. The <code>data</code> property can simply be extended, so you can keep the previous points and just keep adding to your line (or image or whatever you are drawing).</p>

<p>Given that you say that your data arrival time is uncertain your best bet is probably just to do something like:</p>

<pre><code>import matplotlib.pyplot as plt
import numpy

hl, = plt.plot([], [])

def update_line(hl, new_data):
    hl.set_xdata(numpy.append(hl.get_xdata(), new_data))
    hl.set_ydata(numpy.append(hl.get_ydata(), new_data))
    plt.draw()
</code></pre>

<p>Then when you receive data from the serial port just call <code>update_line</code>.</p>"	 Is there a way in which I can update the plot just by adding more point[s] to it... There are a number of ways of animating data in matplotlib, depending on the version you have. Have you seen the matplotlib cookbook examples? Also, check out the more modern animation examples in the matplotlib documentation. Finally, the animation API defines a function FuncAnimation which animates a function in time. This function could just be the function you use to acquire your data. Each method basically sets the property of the object being drawn, so doesn't require clearing the screen or figure. The property can simply be extended, so you can keep the previous points and just keep adding to your line (or image or whatever you are drawing). Given that you say that your data arrival time is uncertain your best bet is probably just to do something like: Then when you receive data from the serial port just call .
new_qs_22k.csv	Is there a way to visualize the distribution of my data?	0.9999957	7688275	save yaxis legends as a separate grob?	rggplot2	15642634	"<p>This question has been sitting long enough, that it is time to document an answer for posterity.</p>

<p>The short answer is that highly-customized data visualizations cannot be done using function wrappers from the 'lattice' and 'ggplot2' packages.  The purpose of a function wrapper is to take some of the decisions out of your hands, so you will always be limited to the decisions originally envisioned by the function coder.  I highly recommend everyone learn the 'lattice' or 'ggplot2' packages, but these packages are more useful for data exploration than for being creative with data visualizations.</p>

<p><strong>This answer is for those who want to create a customized visual.</strong>  The following process may take half a day, but that is significantly less time than it would take to hack the 'lattice' or 'ggplot2' packages into the shape you want.  This isn't a criticism of either of those packages; it's just a byproduct of their purpose.  When you need a creative visual for a publication or client, 4 or 5 hours of your day is nothing compared to the payoff.</p>

<p>The work to make a customized visual is pretty simple with the 'grid' package, but that doesn't mean the math behind it is always simple.  Most of the work in this example is actually the math and not the graphic.</p>

<p><strong>Preface</strong>: There are some things you should know before you being working with the base 'grid' package for your visuals.  The first is that 'grid' works off the idea of viewports.  These are plotting spaces that allow you to reference from within that space, ignoring the rest of the graphic.  This is important, because it allows you to make graphics without having to scale your work into fractions of the entire space.  It's a lot like the layout options in the base plotting functions, except that they can overlap, be rotated, and made transparent.</p>

<p>Units are another thing to know.  The viewports each have a variety of units that you can use to indicate positions and sizes.  You can see the whole list in the 'grid' documentation, but there are only a few that I use very often: npc, native, strwidth, and lines.  Npc units start at (0,0) in the bottom left and go to c(1,1) in the upper right.  Native units use an 'xscale' and 'yscale' to create what is essentially a plotting space for data.  Strwidth units tell you how wide a certain string of text would be once printed on the graphic.  Lines units tell you how tall a line of text would be once printed on the graphic.  Since multiple types of units are always available, you should get in the habit of always either explicitly defining a number with a 'unit' function or specifying the 'default.units' argument from within your drawing functions.</p>

<p>Finally, you have the ability to specify justifications for all your objects' locations.  This is HUGE.  It means you can specify the location of a shape and then say how you want that shape horizontally and vertically justified (center, left, right, bottom, top).  You can line up things perfectly this way by referencing the location of other objects.</p>

<hr>

<p><strong>This is what we are making</strong>:  This isn't a perfect graphic, since I'm having to guess what the OP wants, but it is enough to get us on our way to a perfect graphic.</p>

<p><img src=""https://i.stack.imgur.com/Op7l1.png"" alt=""demo graph""></p>

<hr>

<p><strong>Step 1</strong>: Load up some libraries to work with.  When you want to do highly-customized visuals, use the 'grid' package.  It's the base set of functions that wrappers like 'lattice' and 'ggplot2' are calling.  When you want to work with dates, use the 'lubridate' package, because IT MAKES YOUR LIFE BETTER.  This last one is a personal preference: when I'm going to doing any sort of data summary work, I like to use the 'plyr' package.  It allows me to quickly shape my data into aggregate forms.</p>

<pre><code>library(grid)
library(lubridate)
library(plyr)
</code></pre>

<p><strong>Sample data generation</strong>: This isn't necessary if you already have your data, but for this example, I'm creating a set of sample data.  You can play around with it by changing the user settings for the data generation.  The script is flexible and will adapt to the data generated.  Feel free to add more websites and play around with the lambda values.</p>

<pre><code>    set.seed(1)

#############################################
# User settings for the data generation.    #
#############################################

# Set number of hours to generate data for.
time_Periods &lt;- 100

# Set starting datetime in m/d/yyyy hh:mm format.
start_Datetime &lt;- ""2/24/2013 00:00""

# Specify a list of websites along with a
# Poisson lambda to represent the average
# number of hits in a given time period.
df_Websites &lt;- read.table(text=""
url lambda
http://www.asitenoonereallyvisits.com 1
http://www.asitesomepeoplevisit.com 10
http://www.asitesomemorepeoplevisit.com 20
http://www.asiteevenmorepeoplevisit.com 40
http://www.asiteeveryonevisits.com 80
"", header=TRUE, sep="" "")

#############################################
# Generate the data.                        #
#############################################

# Initialize lists to hold hit data and
# website names.
hits &lt;- list()
websites &lt;- list()

# For each time period and for each website,
# flip a coin to see if any visitors come.  If
# visitors come, use a Poisson distribution to
# see how many come.
# Also initialize the list of website names.
for (i in 1:nrow(df_Websites)){
    hits[[i]] &lt;- rbinom(time_Periods, 1, 0.5) * rpois(time_Periods, df_Websites$lambda[i])
    websites[[i]] &lt;- rep(df_Websites$url[i], time_Periods)
}

# Initialize list of time periods.
datetimes &lt;- mdy_hm(start_Datetime) + hours(1:time_Periods)

# Tie the data into a data frame and erase rows with no hits.
# This is what the real data is more likely to look like
# after import and cleaning.
df_Hits &lt;- data.frame(datetime=rep(datetimes, nrow(df_Websites)), hits=unlist(hits), website=unlist(websites))
df_Hits &lt;- df_Hits[df_Hits$hits &gt; 0,]

# Clean up data-generation variables.
rm(list=ls()[ls()!=""df_Hits""])
</code></pre>

<p><strong>Step 2</strong>: Now, we need to decide how we want our graphic to work.  It's useful to separate things like sizes and colors into a different section of your code, so you can quickly make changes.  Here, I've chosen some basic settings that should produce a decent graphic.  You'll notice that a few of the size settings are using the 'unit' function.  This is one of the amazing things about the 'grid' package.  You can use various units to describe space on your graphic.  For instance, <code>unit(1, ""lines"")</code> is the height of one line of text.  This makes laying out a graphic significantly easier.</p>

<pre><code>#############################################
# User settings for the graphic.            #
#############################################

# Specify the window width and height and
# pixels per inch.
device_Width=12
device_Height=4.5
pixels_Per_Inch &lt;- 100

# Specify the bin width (in hours) of the
# upper histogram.
bin_Width &lt;- 2

# Specify a padding size for separating text
# from other plot elements.
padding &lt;- unit(1, ""strwidth"", ""W"")

# Specify the bin cut-off values for the hit
# counts and the corresponding colors.  The
# cutoff should be the maximum value to be
# contained in the bin.
bin_Settings &lt;- read.table(text=""
cutoff color
10 'darkblue'
20 'deepskyblue'
40 'purple'
80 'magenta'
160 'red'
"", header=TRUE, sep="" "")

# Specify the size of the histogram plots 
# in 'grid' units.  Override only if necessary.
# histogram_Size &lt;- unit(6, ""lines"")
histogram_Size &lt;- unit(nrow(bin_Settings) + 1, ""lines"")

# Set the background color for distinguishing
# between rows of data.
row_Background &lt;- ""gray90""

# Set the color for the date lines.
date_Color &lt;- ""gray40""

# Set the color for marker lines on histograms.
marker_Color &lt;- ""gray80""

# Set the fontsize for labels.
label_Size &lt;- 10
</code></pre>

<p><strong>Step 3</strong>: It's time to make the graphic.  I have limited space for explanations in an SO answer, so I will summarize and then leave the code comments to explain the details.  In a nutshell, I'm calculating how big everything will be and then making the plots one at a time.  For each plot, I format my data first, so I can specify the viewport appropriately.  Then I lay down labels that need to be behind the data, and then I plot the data.  At the end, I ""pop"" the viewport to finalize it.</p>

<pre><code>    #############################################
# Make the graphic.                         #
#############################################

# Make sure bin cutoffs are in increasing order.
# This way, we can make assumptions later.
bin_Settings &lt;- bin_Settings[order(bin_Settings$cutoff),]

# Initialize plot window.
# Make sure you always specify the pixels per
# inch, so you have an appropriately scaled
# graphic for output.
windows(
    width=device_Width,
    height=device_Height,
    xpinch=pixels_Per_Inch,
    ypinch=pixels_Per_Inch)
grid.newpage()

# Push an initial viewport, so we can set the
# font size to use in calculating label widths.
pushViewport(viewport(gp=gpar(fontsize=label_Size)))

# Find the list of websites in the data.
unique_Urls &lt;- as.character(unique(df_Hits$website))

# Calculate the width of the website
# urls once printed on the screen.
label_Width &lt;- list()
for (i in 1:length(unique_Urls)){
    label_Width[[i]] &lt;- convertWidth(unit(1, ""strwidth"", unique_Urls[i]), ""npc"")
}
# Use the maximum url width plus two padding.
x_Label_Margin &lt;- unit(max(unlist(label_Width)), ""npc"") + padding * 2

# Calculate a height for the date labels plus two padding.
y_Label_Margin &lt;- unit(1, ""strwidth"", ""99/99/9999"") + padding * 2

# Calculate size of main plot after making
# room for histogram and label margins.
main_Width &lt;- unit(1, ""npc"") - histogram_Size - x_Label_Margin
main_Height &lt;- unit(1, ""npc"") - histogram_Size - y_Label_Margin

# Calculate x values, using the minimum datetime
# as zero, and counting the hours between each
# datetime and the minimum.
x_Values &lt;- as.integer((df_Hits$datetime - min(df_Hits$datetime)))/60^2

# Initialize main plotting area
pushViewport(viewport(
    x=x_Label_Margin,
    y=y_Label_Margin,
    width=main_Width,
    height=main_Height,
    xscale=c(-1, max(x_Values) + 1),
    yscale=c(0, length(unique_Urls) + 1),
    just=c(""left"", ""bottom""),
    gp=gpar(fontsize=label_Size)))

# Put grey background behind every other website
# to make data easier to read, and write urls as
# y-labels.
for (i in 1:length(unique_Urls)){
    if (i%%2==0){
        grid.rect(
            x=unit(-1, ""npc""),
            y=i,
            width=unit(2, ""npc""),
            height=1,
            default.units=""native"",
            just=c(""left"", ""center""),
            gp=gpar(col=row_Background, fill=row_Background))
    }

    grid.text(
        unique_Urls[i],
        x=unit(0, ""npc"") - padding,
        y=i,
        default.units=""native"",
        just=c(""right"", ""center""))
}

# Find the hour offset of the minimum date value.
time_Offset &lt;- as.integer(format(min(df_Hits$datetime), ""%H""))

# Find the dates in the data.
x_Labels &lt;- unique(format(df_Hits$datetime, ""%m/%d/%Y""))

# Find where the days begin in the data.
midnight_Locations &lt;- (0:max(x_Values))[(0:max(x_Values)+time_Offset)%%24==0]

# Write the appropriate date labels on the x-axis
# where the days begin.
grid.text(
    x_Labels,
    x=midnight_Locations,
    y=unit(0, ""npc"") - padding,
    default.units=""native"",
    just=c(""right"", ""center""),
    rot=90)

# Draw lines to vertically mark when days begin.
grid.polyline(
    x=c(midnight_Locations, midnight_Locations),
    y=unit(c(rep(0, length(midnight_Locations)), rep(1, length(midnight_Locations))), ""npc""),
    default.units=""native"",
    id=rep(midnight_Locations, 2),
    gp=gpar(lty=2, col=date_Color))

# Initialize bin assignment variable.
bin_Assignment &lt;- 1

# Calculate which bin each hit value belongs in.
for (i in 1:nrow(bin_Settings)){
    bin_Assignment &lt;- bin_Assignment + ifelse(df_Hits$hits&gt;bin_Settings$cutoff[i], 1, 0)
}

# Draw points, coloring according to the bin settings.
grid.points(
    x=x_Values,
    y=match(df_Hits$website, unique_Urls),
    pch=19,
    size=unit(1, ""native""),
    gp=gpar(col=as.character(bin_Settings$color[bin_Assignment]), alpha=0.5))

# Finalize the main plotting area.
popViewport()

# Create the bins for the upper histogram.
bins &lt;- ddply(
    data.frame(df_Hits, bin_Assignment, mid=floor(x_Values/bin_Width)*bin_Width+bin_Width/2),
    .(bin_Assignment, mid),
    summarize,
    freq=length(hits))

# Initialize upper histogram area
pushViewport(viewport(
    x=x_Label_Margin,
    y=y_Label_Margin + main_Height,
    width=main_Width,
    height=histogram_Size,
    xscale=c(-1, max(x_Values) + 1),
    yscale=c(0, max(bins$freq) * 1.05),
    just=c(""left"", ""bottom""),
    gp=gpar(fontsize=label_Size)))


# Calculate where to put four value markers.
marker_Interval &lt;- floor(max(bins$freq)/4)
digits &lt;- nchar(marker_Interval)
marker_Interval &lt;- round(marker_Interval, -digits+1)

# Draw horizontal lines to mark values.
grid.polyline(
    x=unit(c(rep(0,4), rep(1,4)), ""npc""),
    y=c(1:4 * marker_Interval, 1:4 * marker_Interval),
    default.units=""native"",
    id=rep(1:4, 2),
    gp=gpar(lty=2, col=marker_Color))

# Write value labels for each marker.
grid.text(
    1:4 * marker_Interval,
    x=unit(0, ""npc"") - padding,
    y=1:4 * marker_Interval,
    default.units=""native"",
    just=c(""right"", ""center""))

# Finalize upper histogram area, so we
# can turn it back on but with clipping.
popViewport()

# Initialize upper histogram area again,
# but with clipping turned on.
pushViewport(viewport(
    x=x_Label_Margin,
    y=y_Label_Margin + main_Height,
    width=main_Width,
    height=histogram_Size,
    xscale=c(-1, max(x_Values) + 1),
    yscale=c(0, max(bins$freq) * 1.05),
    just=c(""left"", ""bottom""),
    gp=gpar(fontsize=label_Size),
    clip=""on""))

# Draw bars for each bin.
for (i in 1:nrow(bin_Settings)){
    active_Bin &lt;- bins[bins$bin_Assignment==i,]
    if (nrow(active_Bin)&gt;0){
        for (j in 1:nrow(active_Bin)){
            grid.rect(
                x=active_Bin$mid[j],
                y=0,
                width=bin_Width,
                height=active_Bin$freq[j],
                default.units=""native"",
                just=c(""center"",""bottom""),
                gp=gpar(col=as.character(bin_Settings$color[i]), fill=as.character(bin_Settings$color[i]), alpha=1/nrow(bin_Settings)))
        }
    }
}

# Draw x-axis.
grid.lines(x=unit(c(0, 1), ""npc""), y=0, default.units=""native"")

# Finalize upper histogram area.
popViewport()

# Calculate the frequencies for each website and bin.
freq_Data &lt;- ddply(
    data.frame(df_Hits, bin_Assignment),
    .(website, bin_Assignment),
    summarize,
    freq=length(hits))

# Create the line data for the side histogram.
line_Data &lt;- matrix(0, nrow=length(unique_Urls)+2, ncol=nrow(bin_Settings))
for (i in 1:nrow(freq_Data)){
    line_Data[match(freq_Data$website[i], unique_Urls)+1,freq_Data$bin_Assignment[i]] &lt;- freq_Data$freq[i]
}


# Initialize side histogram area
pushViewport(viewport(
    x=x_Label_Margin + main_Width,
    y=y_Label_Margin,
    width=histogram_Size,
    height=main_Height,
    xscale=c(0, max(line_Data) * 1.05),
    yscale=c(0, length(unique_Urls) + 1),
    just=c(""left"", ""bottom""),
    gp=gpar(fontsize=label_Size)))

# Calculate where to put four value markers.
marker_Interval &lt;- floor(max(line_Data)/4)
digits &lt;- nchar(marker_Interval)
marker_Interval &lt;- round(marker_Interval, -digits+1)

# Draw vertical lines to mark values.
grid.polyline(
    x=c(1:4 * marker_Interval, 1:4 * marker_Interval),
    y=unit(c(rep(0,4), rep(1,4)), ""npc""),
    default.units=""native"",
    id=rep(1:4, 2),
    gp=gpar(lty=2, col=marker_Color))

# Write value labels for each marker.
grid.text(
    1:4 * marker_Interval,
    x=1:4 * marker_Interval,
    y=unit(0, ""npc"") - padding,
    default.units=""native"",
    just=c(""center"", ""top""))

# Draw lines for each bin setting.
grid.polyline(
    x=array(line_Data),
    y=rep(0:(length(unique_Urls)+1), nrow(bin_Settings)),
    default.units=""native"",
    id=array(t(matrix(1:nrow(bin_Settings), nrow=nrow(bin_Settings), ncol=length(unique_Urls)+2))),
    gp=gpar(col=as.character(bin_Settings$color)))

# Draw vertical line for the y-axis.
grid.lines(x=0, y=c(0, length(unique_Urls)+1), default.units=""native"")

# Finalize side histogram area.
popViewport()

# Draw legend.
# Draw box behind legend headers.
grid.rect(
    x=0,
    y=1,
    width=unit(1, ""strwidth"", names(bin_Settings)[1]) + unit(1, ""strwidth"", names(bin_Settings)[2]) + 3 * padding,
    height=unit(1, ""lines""),
    default.units=""npc"",
    just=c(""left"",""top""),
    gp=gpar(col=row_Background, fill=row_Background))

# Draw legend headers from bin_Settings variable.
grid.text(
    names(bin_Settings)[1],
    x=padding,
    y=1,
    default.units=""npc"",
    just=c(""left"",""top""))

grid.text(
    names(bin_Settings)[2],
    x=unit(1, ""strwidth"", names(bin_Settings)[1]) + 2 * padding,
    y=1,
    default.units=""npc"",
    just=c(""left"",""top""))

# For each row in the bin_Settings variable,
# write the cutoff values and the color associated.
# Write the color name in the color it specifies.
for (i in 1:nrow(bin_Settings)){
    grid.text(
        bin_Settings$cutoff[i],
        x=unit(1, ""strwidth"", names(bin_Settings)[1]) + padding,
        y=unit(1, ""npc"") - i * unit(1, ""lines""),
        default.units=""npc"",
        just=c(""right"",""top""))

    grid.text(
        bin_Settings$color[i],
        x=unit(1, ""strwidth"", names(bin_Settings)[1]) + 2 * padding,
        y=unit(1, ""npc"") - i * unit(1, ""lines""),
        default.units=""npc"",
        just=c(""left"",""top""),
        gp=gpar(col=as.character(bin_Settings$color[i])))
}
</code></pre>"	"<p>This question has been sitting long enough, that it is time to document an answer for posterity.</p>

<p>The short answer is that highly-customized data visualizations cannot be done using function wrappers from the 'lattice' and 'ggplot2' packages.  The purpose of a function wrapper is to take some of the decisions out of your hands, so you will always be limited to the decisions originally envisioned by the function coder.  I highly recommend everyone learn the 'lattice' or 'ggplot2' packages, but these packages are more useful for data exploration than for being creative with data visualizations.</p>

<p><strong>This answer is for those who want to create a customized visual.</strong>  The following process may take half a day, but that is significantly less time than it would take to hack the 'lattice' or 'ggplot2' packages into the shape you want.  This isn't a criticism of either of those packages; it's just a byproduct of their purpose.  When you need a creative visual for a publication or client, 4 or 5 hours of your day is nothing compared to the payoff.</p>

<p>The work to make a customized visual is pretty simple with the 'grid' package, but that doesn't mean the math behind it is always simple.  Most of the work in this example is actually the math and not the graphic.</p>

<p><strong>Preface</strong>: There are some things you should know before you being working with the base 'grid' package for your visuals.  The first is that 'grid' works off the idea of viewports.  These are plotting spaces that allow you to reference from within that space, ignoring the rest of the graphic.  This is important, because it allows you to make graphics without having to scale your work into fractions of the entire space.  It's a lot like the layout options in the base plotting functions, except that they can overlap, be rotated, and made transparent.</p>

<p>Units are another thing to know.  The viewports each have a variety of units that you can use to indicate positions and sizes.  You can see the whole list in the 'grid' documentation, but there are only a few that I use very often: npc, native, strwidth, and lines.  Npc units start at (0,0) in the bottom left and go to c(1,1) in the upper right.  Native units use an 'xscale' and 'yscale' to create what is essentially a plotting space for data.  Strwidth units tell you how wide a certain string of text would be once printed on the graphic.  Lines units tell you how tall a line of text would be once printed on the graphic.  Since multiple types of units are always available, you should get in the habit of always either explicitly defining a number with a 'unit' function or specifying the 'default.units' argument from within your drawing functions.</p>

<p>Finally, you have the ability to specify justifications for all your objects' locations.  This is HUGE.  It means you can specify the location of a shape and then say how you want that shape horizontally and vertically justified (center, left, right, bottom, top).  You can line up things perfectly this way by referencing the location of other objects.</p>

<hr>

<p><strong>This is what we are making</strong>:  This isn't a perfect graphic, since I'm having to guess what the OP wants, but it is enough to get us on our way to a perfect graphic.</p>

<p><img src=""https://i.stack.imgur.com/Op7l1.png"" alt=""demo graph""></p>

<hr>

<p><strong>Step 1</strong>: Load up some libraries to work with.  When you want to do highly-customized visuals, use the 'grid' package.  It's the base set of functions that wrappers like 'lattice' and 'ggplot2' are calling.  When you want to work with dates, use the 'lubridate' package, because IT MAKES YOUR LIFE BETTER.  This last one is a personal preference: when I'm going to doing any sort of data summary work, I like to use the 'plyr' package.  It allows me to quickly shape my data into aggregate forms.</p>

<pre><code>library(grid)
library(lubridate)
library(plyr)
</code></pre>

<p><strong>Sample data generation</strong>: This isn't necessary if you already have your data, but for this example, I'm creating a set of sample data.  You can play around with it by changing the user settings for the data generation.  The script is flexible and will adapt to the data generated.  Feel free to add more websites and play around with the lambda values.</p>

<pre><code>    set.seed(1)

#############################################
# User settings for the data generation.    #
#############################################

# Set number of hours to generate data for.
time_Periods &lt;- 100

# Set starting datetime in m/d/yyyy hh:mm format.
start_Datetime &lt;- ""2/24/2013 00:00""

# Specify a list of websites along with a
# Poisson lambda to represent the average
# number of hits in a given time period.
df_Websites &lt;- read.table(text=""
url lambda
http://www.asitenoonereallyvisits.com 1
http://www.asitesomepeoplevisit.com 10
http://www.asitesomemorepeoplevisit.com 20
http://www.asiteevenmorepeoplevisit.com 40
http://www.asiteeveryonevisits.com 80
"", header=TRUE, sep="" "")

#############################################
# Generate the data.                        #
#############################################

# Initialize lists to hold hit data and
# website names.
hits &lt;- list()
websites &lt;- list()

# For each time period and for each website,
# flip a coin to see if any visitors come.  If
# visitors come, use a Poisson distribution to
# see how many come.
# Also initialize the list of website names.
for (i in 1:nrow(df_Websites)){
    hits[[i]] &lt;- rbinom(time_Periods, 1, 0.5) * rpois(time_Periods, df_Websites$lambda[i])
    websites[[i]] &lt;- rep(df_Websites$url[i], time_Periods)
}

# Initialize list of time periods.
datetimes &lt;- mdy_hm(start_Datetime) + hours(1:time_Periods)

# Tie the data into a data frame and erase rows with no hits.
# This is what the real data is more likely to look like
# after import and cleaning.
df_Hits &lt;- data.frame(datetime=rep(datetimes, nrow(df_Websites)), hits=unlist(hits), website=unlist(websites))
df_Hits &lt;- df_Hits[df_Hits$hits &gt; 0,]

# Clean up data-generation variables.
rm(list=ls()[ls()!=""df_Hits""])
</code></pre>

<p><strong>Step 2</strong>: Now, we need to decide how we want our graphic to work.  It's useful to separate things like sizes and colors into a different section of your code, so you can quickly make changes.  Here, I've chosen some basic settings that should produce a decent graphic.  You'll notice that a few of the size settings are using the 'unit' function.  This is one of the amazing things about the 'grid' package.  You can use various units to describe space on your graphic.  For instance, <code>unit(1, ""lines"")</code> is the height of one line of text.  This makes laying out a graphic significantly easier.</p>

<pre><code>#############################################
# User settings for the graphic.            #
#############################################

# Specify the window width and height and
# pixels per inch.
device_Width=12
device_Height=4.5
pixels_Per_Inch &lt;- 100

# Specify the bin width (in hours) of the
# upper histogram.
bin_Width &lt;- 2

# Specify a padding size for separating text
# from other plot elements.
padding &lt;- unit(1, ""strwidth"", ""W"")

# Specify the bin cut-off values for the hit
# counts and the corresponding colors.  The
# cutoff should be the maximum value to be
# contained in the bin.
bin_Settings &lt;- read.table(text=""
cutoff color
10 'darkblue'
20 'deepskyblue'
40 'purple'
80 'magenta'
160 'red'
"", header=TRUE, sep="" "")

# Specify the size of the histogram plots 
# in 'grid' units.  Override only if necessary.
# histogram_Size &lt;- unit(6, ""lines"")
histogram_Size &lt;- unit(nrow(bin_Settings) + 1, ""lines"")

# Set the background color for distinguishing
# between rows of data.
row_Background &lt;- ""gray90""

# Set the color for the date lines.
date_Color &lt;- ""gray40""

# Set the color for marker lines on histograms.
marker_Color &lt;- ""gray80""

# Set the fontsize for labels.
label_Size &lt;- 10
</code></pre>

<p><strong>Step 3</strong>: It's time to make the graphic.  I have limited space for explanations in an SO answer, so I will summarize and then leave the code comments to explain the details.  In a nutshell, I'm calculating how big everything will be and then making the plots one at a time.  For each plot, I format my data first, so I can specify the viewport appropriately.  Then I lay down labels that need to be behind the data, and then I plot the data.  At the end, I ""pop"" the viewport to finalize it.</p>

<pre><code>    #############################################
# Make the graphic.                         #
#############################################

# Make sure bin cutoffs are in increasing order.
# This way, we can make assumptions later.
bin_Settings &lt;- bin_Settings[order(bin_Settings$cutoff),]

# Initialize plot window.
# Make sure you always specify the pixels per
# inch, so you have an appropriately scaled
# graphic for output.
windows(
    width=device_Width,
    height=device_Height,
    xpinch=pixels_Per_Inch,
    ypinch=pixels_Per_Inch)
grid.newpage()

# Push an initial viewport, so we can set the
# font size to use in calculating label widths.
pushViewport(viewport(gp=gpar(fontsize=label_Size)))

# Find the list of websites in the data.
unique_Urls &lt;- as.character(unique(df_Hits$website))

# Calculate the width of the website
# urls once printed on the screen.
label_Width &lt;- list()
for (i in 1:length(unique_Urls)){
    label_Width[[i]] &lt;- convertWidth(unit(1, ""strwidth"", unique_Urls[i]), ""npc"")
}
# Use the maximum url width plus two padding.
x_Label_Margin &lt;- unit(max(unlist(label_Width)), ""npc"") + padding * 2

# Calculate a height for the date labels plus two padding.
y_Label_Margin &lt;- unit(1, ""strwidth"", ""99/99/9999"") + padding * 2

# Calculate size of main plot after making
# room for histogram and label margins.
main_Width &lt;- unit(1, ""npc"") - histogram_Size - x_Label_Margin
main_Height &lt;- unit(1, ""npc"") - histogram_Size - y_Label_Margin

# Calculate x values, using the minimum datetime
# as zero, and counting the hours between each
# datetime and the minimum.
x_Values &lt;- as.integer((df_Hits$datetime - min(df_Hits$datetime)))/60^2

# Initialize main plotting area
pushViewport(viewport(
    x=x_Label_Margin,
    y=y_Label_Margin,
    width=main_Width,
    height=main_Height,
    xscale=c(-1, max(x_Values) + 1),
    yscale=c(0, length(unique_Urls) + 1),
    just=c(""left"", ""bottom""),
    gp=gpar(fontsize=label_Size)))

# Put grey background behind every other website
# to make data easier to read, and write urls as
# y-labels.
for (i in 1:length(unique_Urls)){
    if (i%%2==0){
        grid.rect(
            x=unit(-1, ""npc""),
            y=i,
            width=unit(2, ""npc""),
            height=1,
            default.units=""native"",
            just=c(""left"", ""center""),
            gp=gpar(col=row_Background, fill=row_Background))
    }

    grid.text(
        unique_Urls[i],
        x=unit(0, ""npc"") - padding,
        y=i,
        default.units=""native"",
        just=c(""right"", ""center""))
}

# Find the hour offset of the minimum date value.
time_Offset &lt;- as.integer(format(min(df_Hits$datetime), ""%H""))

# Find the dates in the data.
x_Labels &lt;- unique(format(df_Hits$datetime, ""%m/%d/%Y""))

# Find where the days begin in the data.
midnight_Locations &lt;- (0:max(x_Values))[(0:max(x_Values)+time_Offset)%%24==0]

# Write the appropriate date labels on the x-axis
# where the days begin.
grid.text(
    x_Labels,
    x=midnight_Locations,
    y=unit(0, ""npc"") - padding,
    default.units=""native"",
    just=c(""right"", ""center""),
    rot=90)

# Draw lines to vertically mark when days begin.
grid.polyline(
    x=c(midnight_Locations, midnight_Locations),
    y=unit(c(rep(0, length(midnight_Locations)), rep(1, length(midnight_Locations))), ""npc""),
    default.units=""native"",
    id=rep(midnight_Locations, 2),
    gp=gpar(lty=2, col=date_Color))

# Initialize bin assignment variable.
bin_Assignment &lt;- 1

# Calculate which bin each hit value belongs in.
for (i in 1:nrow(bin_Settings)){
    bin_Assignment &lt;- bin_Assignment + ifelse(df_Hits$hits&gt;bin_Settings$cutoff[i], 1, 0)
}

# Draw points, coloring according to the bin settings.
grid.points(
    x=x_Values,
    y=match(df_Hits$website, unique_Urls),
    pch=19,
    size=unit(1, ""native""),
    gp=gpar(col=as.character(bin_Settings$color[bin_Assignment]), alpha=0.5))

# Finalize the main plotting area.
popViewport()

# Create the bins for the upper histogram.
bins &lt;- ddply(
    data.frame(df_Hits, bin_Assignment, mid=floor(x_Values/bin_Width)*bin_Width+bin_Width/2),
    .(bin_Assignment, mid),
    summarize,
    freq=length(hits))

# Initialize upper histogram area
pushViewport(viewport(
    x=x_Label_Margin,
    y=y_Label_Margin + main_Height,
    width=main_Width,
    height=histogram_Size,
    xscale=c(-1, max(x_Values) + 1),
    yscale=c(0, max(bins$freq) * 1.05),
    just=c(""left"", ""bottom""),
    gp=gpar(fontsize=label_Size)))


# Calculate where to put four value markers.
marker_Interval &lt;- floor(max(bins$freq)/4)
digits &lt;- nchar(marker_Interval)
marker_Interval &lt;- round(marker_Interval, -digits+1)

# Draw horizontal lines to mark values.
grid.polyline(
    x=unit(c(rep(0,4), rep(1,4)), ""npc""),
    y=c(1:4 * marker_Interval, 1:4 * marker_Interval),
    default.units=""native"",
    id=rep(1:4, 2),
    gp=gpar(lty=2, col=marker_Color))

# Write value labels for each marker.
grid.text(
    1:4 * marker_Interval,
    x=unit(0, ""npc"") - padding,
    y=1:4 * marker_Interval,
    default.units=""native"",
    just=c(""right"", ""center""))

# Finalize upper histogram area, so we
# can turn it back on but with clipping.
popViewport()

# Initialize upper histogram area again,
# but with clipping turned on.
pushViewport(viewport(
    x=x_Label_Margin,
    y=y_Label_Margin + main_Height,
    width=main_Width,
    height=histogram_Size,
    xscale=c(-1, max(x_Values) + 1),
    yscale=c(0, max(bins$freq) * 1.05),
    just=c(""left"", ""bottom""),
    gp=gpar(fontsize=label_Size),
    clip=""on""))

# Draw bars for each bin.
for (i in 1:nrow(bin_Settings)){
    active_Bin &lt;- bins[bins$bin_Assignment==i,]
    if (nrow(active_Bin)&gt;0){
        for (j in 1:nrow(active_Bin)){
            grid.rect(
                x=active_Bin$mid[j],
                y=0,
                width=bin_Width,
                height=active_Bin$freq[j],
                default.units=""native"",
                just=c(""center"",""bottom""),
                gp=gpar(col=as.character(bin_Settings$color[i]), fill=as.character(bin_Settings$color[i]), alpha=1/nrow(bin_Settings)))
        }
    }
}

# Draw x-axis.
grid.lines(x=unit(c(0, 1), ""npc""), y=0, default.units=""native"")

# Finalize upper histogram area.
popViewport()

# Calculate the frequencies for each website and bin.
freq_Data &lt;- ddply(
    data.frame(df_Hits, bin_Assignment),
    .(website, bin_Assignment),
    summarize,
    freq=length(hits))

# Create the line data for the side histogram.
line_Data &lt;- matrix(0, nrow=length(unique_Urls)+2, ncol=nrow(bin_Settings))
for (i in 1:nrow(freq_Data)){
    line_Data[match(freq_Data$website[i], unique_Urls)+1,freq_Data$bin_Assignment[i]] &lt;- freq_Data$freq[i]
}


# Initialize side histogram area
pushViewport(viewport(
    x=x_Label_Margin + main_Width,
    y=y_Label_Margin,
    width=histogram_Size,
    height=main_Height,
    xscale=c(0, max(line_Data) * 1.05),
    yscale=c(0, length(unique_Urls) + 1),
    just=c(""left"", ""bottom""),
    gp=gpar(fontsize=label_Size)))

# Calculate where to put four value markers.
marker_Interval &lt;- floor(max(line_Data)/4)
digits &lt;- nchar(marker_Interval)
marker_Interval &lt;- round(marker_Interval, -digits+1)

# Draw vertical lines to mark values.
grid.polyline(
    x=c(1:4 * marker_Interval, 1:4 * marker_Interval),
    y=unit(c(rep(0,4), rep(1,4)), ""npc""),
    default.units=""native"",
    id=rep(1:4, 2),
    gp=gpar(lty=2, col=marker_Color))

# Write value labels for each marker.
grid.text(
    1:4 * marker_Interval,
    x=1:4 * marker_Interval,
    y=unit(0, ""npc"") - padding,
    default.units=""native"",
    just=c(""center"", ""top""))

# Draw lines for each bin setting.
grid.polyline(
    x=array(line_Data),
    y=rep(0:(length(unique_Urls)+1), nrow(bin_Settings)),
    default.units=""native"",
    id=array(t(matrix(1:nrow(bin_Settings), nrow=nrow(bin_Settings), ncol=length(unique_Urls)+2))),
    gp=gpar(col=as.character(bin_Settings$color)))

# Draw vertical line for the y-axis.
grid.lines(x=0, y=c(0, length(unique_Urls)+1), default.units=""native"")

# Finalize side histogram area.
popViewport()

# Draw legend.
# Draw box behind legend headers.
grid.rect(
    x=0,
    y=1,
    width=unit(1, ""strwidth"", names(bin_Settings)[1]) + unit(1, ""strwidth"", names(bin_Settings)[2]) + 3 * padding,
    height=unit(1, ""lines""),
    default.units=""npc"",
    just=c(""left"",""top""),
    gp=gpar(col=row_Background, fill=row_Background))

# Draw legend headers from bin_Settings variable.
grid.text(
    names(bin_Settings)[1],
    x=padding,
    y=1,
    default.units=""npc"",
    just=c(""left"",""top""))

grid.text(
    names(bin_Settings)[2],
    x=unit(1, ""strwidth"", names(bin_Settings)[1]) + 2 * padding,
    y=1,
    default.units=""npc"",
    just=c(""left"",""top""))

# For each row in the bin_Settings variable,
# write the cutoff values and the color associated.
# Write the color name in the color it specifies.
for (i in 1:nrow(bin_Settings)){
    grid.text(
        bin_Settings$cutoff[i],
        x=unit(1, ""strwidth"", names(bin_Settings)[1]) + padding,
        y=unit(1, ""npc"") - i * unit(1, ""lines""),
        default.units=""npc"",
        just=c(""right"",""top""))

    grid.text(
        bin_Settings$color[i],
        x=unit(1, ""strwidth"", names(bin_Settings)[1]) + 2 * padding,
        y=unit(1, ""npc"") - i * unit(1, ""lines""),
        default.units=""npc"",
        just=c(""left"",""top""),
        gp=gpar(col=as.character(bin_Settings$color[i])))
}
</code></pre>"	" This question has been sitting long enough, that it is time to document an answer for posterity. The short answer is that highly-customized data visualizations cannot be done using function wrappers from the 'lattice' and 'ggplot2' packages.  The purpose of a function wrapper is to take some of the decisions out of your hands, so you will always be limited to the decisions originally envisioned by the function coder.  I highly recommend everyone learn the 'lattice' or 'ggplot2' packages, but these packages are more useful for data exploration than for being creative with data visualizations. This answer is for those who want to create a customized visual. The following process may take half a day, but that is significantly less time than it would take to hack the 'lattice' or 'ggplot2' packages into the shape you want.  This isn't a criticism of either of those packages; it's just a byproduct of their purpose.  When you need a creative visual for a publication or client, 4 or 5 hours of your day is nothing compared to the payoff. The work to make a customized visual is pretty simple with the 'grid' package, but that doesn't mean the math behind it is always simple.  Most of the work in this example is actually the math and not the graphic. Preface : There are some things you should know before you being working with the base 'grid' package for your visuals.  The first is that 'grid' works off the idea of viewports.  These are plotting spaces that allow you to reference from within that space, ignoring the rest of the graphic.  This is important, because it allows you to make graphics without having to scale your work into fractions of the entire space.  It's a lot like the layout options in the base plotting functions, except that they can overlap, be rotated, and made transparent. Units are another thing to know.  The viewports each have a variety of units that you can use to indicate positions and sizes.  You can see the whole list in the 'grid' documentation, but there are only a few that I use very often: npc, native, strwidth, and lines.  Npc units start at (0,0) in the bottom left and go to c(1,1) in the upper right.  Native units use an 'xscale' and 'yscale' to create what is essentially a plotting space for data.  Strwidth units tell you how wide a certain string of text would be once printed on the graphic.  Lines units tell you how tall a line of text would be once printed on the graphic.  Since multiple types of units are always available, you should get in the habit of always either explicitly defining a number with a 'unit' function or specifying the 'default.units' argument from within your drawing functions. Finally, you have the ability to specify justifications for all your objects' locations.  This is HUGE.  It means you can specify the location of a shape and then say how you want that shape horizontally and vertically justified (center, left, right, bottom, top).  You can line up things perfectly this way by referencing the location of other objects. This is what we are making :  This isn't a perfect graphic, since I'm having to guess what the OP wants, but it is enough to get us on our way to a perfect graphic. Step 1 : Load up some libraries to work with.  When you want to do highly-customized visuals, use the 'grid' package.  It's the base set of functions that wrappers like 'lattice' and 'ggplot2' are calling.  When you want to work with dates, use the 'lubridate' package, because IT MAKES YOUR LIFE BETTER.  This last one is a personal preference: when I'm going to doing any sort of data summary work, I like to use the 'plyr' package.  It allows me to quickly shape my data into aggregate forms. Sample data generation : This isn't necessary if you already have your data, but for this example, I'm creating a set of sample data.  You can play around with it by changing the user settings for the data generation.  The script is flexible and will adapt to the data generated.  Feel free to add more websites and play around with the lambda values. Step 2 : Now, we need to decide how we want our graphic to work.  It's useful to separate things like sizes and colors into a different section of your code, so you can quickly make changes.  Here, I've chosen some basic settings that should produce a decent graphic.  You'll notice that a few of the size settings are using the 'unit' function.  This is one of the amazing things about the 'grid' package.  You can use various units to describe space on your graphic.  For instance, is the height of one line of text.  This makes laying out a graphic significantly easier. Step 3 : It's time to make the graphic.  I have limited space for explanations in an SO answer, so I will summarize and then leave the code comments to explain the details.  In a nutshell, I'm calculating how big everything will be and then making the plots one at a time.  For each plot, I format my data first, so I can specify the viewport appropriately.  Then I lay down labels that need to be behind the data, and then I plot the data.  At the end, I ""pop"" the viewport to finalize it."
new_qs_22k.csv	Is there a way to visualize the distribution of my data?	0.9999956	8112791	Multiple density graphs different groups (based on factor level) using plyr	rloopsgraphicsplyr	8113154	"<p>I see that @Andrie just beat me to most of this. I'm still going to post my answer, since filling only certain quantiles of the distribution requires a slightly different approach. </p>

<pre><code>set.seed(1234)
Aa = c(rnorm(40000, 50, 10))
Bb = c(rnorm(4000, 70, 10))
Cc = c(rnorm(400, 75, 10))
Dd = c(rnorm(40, 80, 10))
yvar = c(Aa, Bb, Cc, Dd)
gen &lt;- c(rep(""Aa"", length(Aa)),rep(""Bb"", length(Bb)), rep(""Cc"", length(Cc)),
            rep(""Dd"", length(Dd)))
mydf &lt;- data.frame(grp = gen,x = c(Aa,Bb,Cc,Dd))

#Calculate the densities and an indicator for the desire quantile
# for later use in subsetting
mydf &lt;- ddply(mydf,.(grp),.fun = function(x){
    tmp &lt;- density(x$x)
    x1 &lt;- tmp$x
    y1 &lt;- tmp$y
    q80 &lt;- x1 &gt;= quantile(x$x,0.8)
    data.frame(x=x1,y=y1,q80=q80)
})

#Separate data frame for the means
mydfMean &lt;- ddply(mydf,.(grp),summarise,mn = mean(x))

ggplot(mydf,aes(x = x)) + 
    facet_wrap(~grp) +
    geom_line(aes(y = y)) + 
    geom_ribbon(data = subset(mydf,q80),aes(ymax = y),ymin = 0, fill = ""black"") +
    geom_vline(data = mydfMean,aes(xintercept = mn),colour = ""black"")
</code></pre>

<p><img src=""https://i.stack.imgur.com/SReXF.png"" alt=""enter image description here""></p>"	"<p>I see that @Andrie just beat me to most of this. I'm still going to post my answer, since filling only certain quantiles of the distribution requires a slightly different approach. </p>

<pre><code>set.seed(1234)
Aa = c(rnorm(40000, 50, 10))
Bb = c(rnorm(4000, 70, 10))
Cc = c(rnorm(400, 75, 10))
Dd = c(rnorm(40, 80, 10))
yvar = c(Aa, Bb, Cc, Dd)
gen &lt;- c(rep(""Aa"", length(Aa)),rep(""Bb"", length(Bb)), rep(""Cc"", length(Cc)),
            rep(""Dd"", length(Dd)))
mydf &lt;- data.frame(grp = gen,x = c(Aa,Bb,Cc,Dd))

#Calculate the densities and an indicator for the desire quantile
# for later use in subsetting
mydf &lt;- ddply(mydf,.(grp),.fun = function(x){
    tmp &lt;- density(x$x)
    x1 &lt;- tmp$x
    y1 &lt;- tmp$y
    q80 &lt;- x1 &gt;= quantile(x$x,0.8)
    data.frame(x=x1,y=y1,q80=q80)
})

#Separate data frame for the means
mydfMean &lt;- ddply(mydf,.(grp),summarise,mn = mean(x))

ggplot(mydf,aes(x = x)) + 
    facet_wrap(~grp) +
    geom_line(aes(y = y)) + 
    geom_ribbon(data = subset(mydf,q80),aes(ymax = y),ymin = 0, fill = ""black"") +
    geom_vline(data = mydfMean,aes(xintercept = mn),colour = ""black"")
</code></pre>

<p><img src=""https://i.stack.imgur.com/SReXF.png"" alt=""enter image description here""></p>"	 I see that @Andrie just beat me to most of this. I'm still going to post my answer, since filling only certain quantiles of the distribution requires a slightly different approach.
new_qs_22k.csv	Is there a way to visualize the distribution of my data?	0.9999956	9980992	Generate dynamic graph from MySQL data	phpimagegraph	9981055	"<p>Great question one awesome solution that i have done is to use: <a href=""http://code.google.com/apis/chart/"">http://code.google.com/apis/chart/</a> The Google Chart has lots of great graphs etc.. you can use. What i did was look at the examples see how the data was formatted, then I wrote my query to match it.</p>"	"<p>Great question one awesome solution that i have done is to use: <a href=""http://code.google.com/apis/chart/"">http://code.google.com/apis/chart/</a> The Google Chart has lots of great graphs etc.. you can use. What i did was look at the examples see how the data was formatted, then I wrote my query to match it.</p>"	 Great question one awesome solution that i have done is to use: http://code.google.com/apis/chart/ The Google Chart has lots of great graphs etc.. you can use. What i did was look at the examples see how the data was formatted, then I wrote my query to match it.
new_qs_22k.csv	Is there a way to visualize the distribution of my data?	0.9999956	46308002	skip legend in for loop plot	matlabfor-loopplotlegend	46308441	"<p>Please try this,</p>

<pre><code>figure(4);
for i=1:300  
hold on
h(i)=plot(MC_Time{:,i},MC_LAMBDT{:,i},MC_Time{:,i},MC_LAMBDD{:,i})     
end
title('$$\dot{\lambda_{T}}(t)$$ and $$\dot{\lambda_{D}}(t)$$ vs Time','interpreter','latex')
ylabel('$$\dot{\lambda_{T}}(t)$$ and $$\dot{\lambda_{D}}(t)$$[rad/s]','interpreter','latex')
xlabel('Time [s]','interpreter','latex')
legend([h(299) h(300)],{'$$\dot{\lambda_{T}}(t)$$','$$\dot{\lambda_{D}}(t)$$'},'interpreter','latex')
grid on
hold off
</code></pre>

<p>I don't have data to plot but I tried for you a simple example to visualize how the code works. If you run simple code like,(note only legend for lines 1 and 3 are presented)</p>

<pre><code>figure(4);
x=1:5
for i=1:4    
h(i)=plot(x,x+i)
hold on
end
legend([h(1) h(3)],{'first','third'});
</code></pre>

<p>You get something<a href=""https://i.stack.imgur.com/ONp2A.jpg"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/ONp2A.jpg"" alt=""enter image description here""></a> </p>"	"<p>Please try this,</p>

<pre><code>figure(4);
for i=1:300  
hold on
h(i)=plot(MC_Time{:,i},MC_LAMBDT{:,i},MC_Time{:,i},MC_LAMBDD{:,i})     
end
title('$$\dot{\lambda_{T}}(t)$$ and $$\dot{\lambda_{D}}(t)$$ vs Time','interpreter','latex')
ylabel('$$\dot{\lambda_{T}}(t)$$ and $$\dot{\lambda_{D}}(t)$$[rad/s]','interpreter','latex')
xlabel('Time [s]','interpreter','latex')
legend([h(299) h(300)],{'$$\dot{\lambda_{T}}(t)$$','$$\dot{\lambda_{D}}(t)$$'},'interpreter','latex')
grid on
hold off
</code></pre>

<p>I don't have data to plot but I tried for you a simple example to visualize how the code works. If you run simple code like,(note only legend for lines 1 and 3 are presented)</p>

<pre><code>figure(4);
x=1:5
for i=1:4    
h(i)=plot(x,x+i)
hold on
end
legend([h(1) h(3)],{'first','third'});
</code></pre>

<p>You get something<a href=""https://i.stack.imgur.com/ONp2A.jpg"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/ONp2A.jpg"" alt=""enter image description here""></a> </p>"	 Please try this, I don't have data to plot but I tried for you a simple example to visualize how the code works. If you run simple code like,(note only legend for lines 1 and 3 are presented) You get something
new_qs_22k.csv	How do I show data on a map?	0.9999963	9441778	Improve centering county names ggplot & maps	rggplot2geocoding	9450588	"<p>As I worked this out last night over at Talk Stats (<a href=""http://www.talkstats.com/showthread.php/23324-An-R-learning-project-%28feel-free-to-learn-with-me%29?p=77869&amp;viewfull=1#post77869"">link</a>), it's actually pretty easy (as a product of the hours I spent into the early morning!) if you use the R spatial package (<em>sp</em>). I tested some of their other functions to create a <em>SpatialPolygons</em> object that you can use <em>coordinates</em> on to return a polygon centroid. I only did it for one county, but the <em>label point</em> of a <em>Polygon</em> (S4) object matched the centroid. Assuming this is true, then label points of Polygon objects are centroids. I use this little process to create a data frame of centroids and use them to plot on a map. </p>

<pre><code>library(ggplot2)  # For map_data. It's just a wrapper; should just use maps.
library(sp)
library(maps)
getLabelPoint &lt;- # Returns a county-named list of label points
function(county) {Polygon(county[c('long', 'lat')])@labpt}

df &lt;- map_data('county', 'new york')                 # NY region county data
centroids &lt;- by(df, df$subregion, getLabelPoint)     # Returns list
centroids &lt;- do.call(""rbind.data.frame"", centroids)  # Convert to Data Frame
names(centroids) &lt;- c('long', 'lat')                 # Appropriate Header

map('county', 'new york')
text(centroids$long, centroids$lat, rownames(centroids), offset=0, cex=0.4)
</code></pre>

<p>This will not work well for every polygon. Very often the process of labeling and annotation in GIS requires that you adjust labels and annotation for those peculiar cases that do not fit the automatic (systematic) approach you want to use. The code-look-recode approach we would take to this is not apt. Better to include a check that a label of a given size for the given plot will fit within the polygon; if not, remove it from the record of text labels and manually insert it later to fit the situation--e.g., add a leader line and annotate to the side of the polygon or turn the label sideways as was displayed elsewhere. </p>"	"<p>As I worked this out last night over at Talk Stats (<a href=""http://www.talkstats.com/showthread.php/23324-An-R-learning-project-%28feel-free-to-learn-with-me%29?p=77869&amp;viewfull=1#post77869"">link</a>), it's actually pretty easy (as a product of the hours I spent into the early morning!) if you use the R spatial package (<em>sp</em>). I tested some of their other functions to create a <em>SpatialPolygons</em> object that you can use <em>coordinates</em> on to return a polygon centroid. I only did it for one county, but the <em>label point</em> of a <em>Polygon</em> (S4) object matched the centroid. Assuming this is true, then label points of Polygon objects are centroids. I use this little process to create a data frame of centroids and use them to plot on a map. </p>

<pre><code>library(ggplot2)  # For map_data. It's just a wrapper; should just use maps.
library(sp)
library(maps)
getLabelPoint &lt;- # Returns a county-named list of label points
function(county) {Polygon(county[c('long', 'lat')])@labpt}

df &lt;- map_data('county', 'new york')                 # NY region county data
centroids &lt;- by(df, df$subregion, getLabelPoint)     # Returns list
centroids &lt;- do.call(""rbind.data.frame"", centroids)  # Convert to Data Frame
names(centroids) &lt;- c('long', 'lat')                 # Appropriate Header

map('county', 'new york')
text(centroids$long, centroids$lat, rownames(centroids), offset=0, cex=0.4)
</code></pre>

<p>This will not work well for every polygon. Very often the process of labeling and annotation in GIS requires that you adjust labels and annotation for those peculiar cases that do not fit the automatic (systematic) approach you want to use. The code-look-recode approach we would take to this is not apt. Better to include a check that a label of a given size for the given plot will fit within the polygon; if not, remove it from the record of text labels and manually insert it later to fit the situation--e.g., add a leader line and annotate to the side of the polygon or turn the label sideways as was displayed elsewhere. </p>"	 As I worked this out last night over at Talk Stats ( link ), it's actually pretty easy (as a product of the hours I spent into the early morning!) if you use the R spatial package ( sp ). I tested some of their other functions to create a SpatialPolygons object that you can use coordinates on to return a polygon centroid. I only did it for one county, but the label point of a Polygon (S4) object matched the centroid. Assuming this is true, then label points of Polygon objects are centroids. I use this little process to create a data frame of centroids and use them to plot on a map. This will not work well for every polygon. Very often the process of labeling and annotation in GIS requires that you adjust labels and annotation for those peculiar cases that do not fit the automatic (systematic) approach you want to use. The code-look-recode approach we would take to this is not apt. Better to include a check that a label of a given size for the given plot will fit within the polygon; if not, remove it from the record of text labels and manually insert it later to fit the situation--e.g., add a leader line and annotate to the side of the polygon or turn the label sideways as was displayed elsewhere.
new_qs_22k.csv	How do I show data on a map?	0.99999595	16018210	c# wpf multiple line drawing on canvas with kinect sensor	c#wpfdrawkinectlines	16021276	"<blockquote>
  <p>How do I keep my lines?</p>
</blockquote>

<p>You would have to either use a <a href=""http://msdn.microsoft.com/en-us/library/system.windows.shapes.polyline.aspx"" rel=""nofollow"">Polyline</a> or draw a <a href=""http://msdn.microsoft.com/en-us/library/system.windows.media.pathgeometry.aspx"" rel=""nofollow"">PathGeometry</a> or a <a href=""http://msdn.microsoft.com/en-us/library/system.windows.media.streamgeometry.aspx"" rel=""nofollow"">StreamGeometry</a> into a DrawingContext by <a href=""http://msdn.microsoft.com/en-us/library/system.windows.media.drawingcontext.drawgeometry.aspx"" rel=""nofollow"">DrawGeometry</a>. The geometry would have to contain one or more polyline segments.</p>"	"<blockquote>
  <p>How do I keep my lines?</p>
</blockquote>

<p>You would have to either use a <a href=""http://msdn.microsoft.com/en-us/library/system.windows.shapes.polyline.aspx"" rel=""nofollow"">Polyline</a> or draw a <a href=""http://msdn.microsoft.com/en-us/library/system.windows.media.pathgeometry.aspx"" rel=""nofollow"">PathGeometry</a> or a <a href=""http://msdn.microsoft.com/en-us/library/system.windows.media.streamgeometry.aspx"" rel=""nofollow"">StreamGeometry</a> into a DrawingContext by <a href=""http://msdn.microsoft.com/en-us/library/system.windows.media.drawingcontext.drawgeometry.aspx"" rel=""nofollow"">DrawGeometry</a>. The geometry would have to contain one or more polyline segments.</p>"	 How do I keep my lines? You would have to either use a Polyline or draw a PathGeometry or a StreamGeometry into a DrawingContext by DrawGeometry . The geometry would have to contain one or more polyline segments.
new_qs_22k.csv	How do I show data on a map?	0.9999957	21269098	Create an inset map within a larger map in R	rplotggplot2maps	41405249	"<p>This question has been abandoned for nearly three years. But, I believe it is worth providing an answer since there has not been enough information on how to draw inset maps on stack overflow.</p>

<p>I chose ggplot2 to handle this task. First, I downloaded a SpatialPolygonsDataFrame using <code>getData()</code> in the <code>raster</code> package. I converted the data to a regular data frame, which is require for ggplot. Then, I drew the main map (i.e., <code>g1</code>). I used <code>geom_blank()</code> in order to provide longitude and latitude for ggplot. It used to be the case that we could add long and lat in <code>geom_map()</code>, but the current version of ggplot does not accept long and lat as x and y, respectively. I trimmed the map using <code>scale_x_continuous()</code> and <code>scale_y_continuous()</code>. Then, I drew the inset map (i.e., <code>g2</code>). Since I needed to draw a rectangular, I created a data frame called <code>temp</code>. I drew the map in a similar way. Make sure that you treat the inset map as a brow object; you need to use <code>ggplotGrob()</code>. The last step is to add the inset map in the main map. You need to identify the best location. You want to play with long and lat values.</p>

<pre><code>library(raster)
library(ggplot2)
library(ggthemes)

mydata &lt;- getData(""GADM"", country = ""canada"", level = 1)
mymap &lt;- fortify(mydata)

g1 &lt;-  ggplot() +
       geom_blank(data = mymap, aes(x = long, y = lat)) +
       geom_map(data = mymap, map = mymap,
                 aes(group = group, map_id = id),
                 fill = ""#b2b2b2"", color = ""black"", size = 0.3) +
       scale_x_continuous(limits = c(-65.5, -64), expand = c(0, 0)) +
       scale_y_continuous(limits = c(45.5, 46.35), expand = c(0, 0)) +
       theme_map()


temp &lt;- data.frame(long = c(-65.5, -65.5, -64, -64, -65.5),
                   lat = c(45.5, 46.35, 46.35, 45.5, 45.5))

g2 &lt;- ggplotGrob(
      ggplot() +
      geom_blank(data = mymap, aes(x = long, y = lat)) +
      geom_map(data = mymap, map = mymap,
               aes(group = group, map_id = id),
               fill = ""#b2b2b2"", color = ""black"", size = 0.3) +
      geom_path(data = temp, aes(x = long, y = lat), size = 0.3) +
      scale_x_continuous(limits = c(-68, -59.9), expand = c(0, 0)) +
      scale_y_continuous(limits = c(43.5, 48), expand = c(0, 0)) +
      coord_map(""polyconic"") +
      theme_map() +
      theme(panel.background = element_rect(fill = NULL))
      )

g3 &lt;- g1 +
      annotation_custom(grob = g2, xmin = -65.49, xmax = -65.1,
                        ymin = 46.05, ymax = 46.34) 
</code></pre>

<p><a href=""https://i.stack.imgur.com/61z0U.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/61z0U.png"" alt=""enter image description here""></a></p>"	"<p>This question has been abandoned for nearly three years. But, I believe it is worth providing an answer since there has not been enough information on how to draw inset maps on stack overflow.</p>

<p>I chose ggplot2 to handle this task. First, I downloaded a SpatialPolygonsDataFrame using <code>getData()</code> in the <code>raster</code> package. I converted the data to a regular data frame, which is require for ggplot. Then, I drew the main map (i.e., <code>g1</code>). I used <code>geom_blank()</code> in order to provide longitude and latitude for ggplot. It used to be the case that we could add long and lat in <code>geom_map()</code>, but the current version of ggplot does not accept long and lat as x and y, respectively. I trimmed the map using <code>scale_x_continuous()</code> and <code>scale_y_continuous()</code>. Then, I drew the inset map (i.e., <code>g2</code>). Since I needed to draw a rectangular, I created a data frame called <code>temp</code>. I drew the map in a similar way. Make sure that you treat the inset map as a brow object; you need to use <code>ggplotGrob()</code>. The last step is to add the inset map in the main map. You need to identify the best location. You want to play with long and lat values.</p>

<pre><code>library(raster)
library(ggplot2)
library(ggthemes)

mydata &lt;- getData(""GADM"", country = ""canada"", level = 1)
mymap &lt;- fortify(mydata)

g1 &lt;-  ggplot() +
       geom_blank(data = mymap, aes(x = long, y = lat)) +
       geom_map(data = mymap, map = mymap,
                 aes(group = group, map_id = id),
                 fill = ""#b2b2b2"", color = ""black"", size = 0.3) +
       scale_x_continuous(limits = c(-65.5, -64), expand = c(0, 0)) +
       scale_y_continuous(limits = c(45.5, 46.35), expand = c(0, 0)) +
       theme_map()


temp &lt;- data.frame(long = c(-65.5, -65.5, -64, -64, -65.5),
                   lat = c(45.5, 46.35, 46.35, 45.5, 45.5))

g2 &lt;- ggplotGrob(
      ggplot() +
      geom_blank(data = mymap, aes(x = long, y = lat)) +
      geom_map(data = mymap, map = mymap,
               aes(group = group, map_id = id),
               fill = ""#b2b2b2"", color = ""black"", size = 0.3) +
      geom_path(data = temp, aes(x = long, y = lat), size = 0.3) +
      scale_x_continuous(limits = c(-68, -59.9), expand = c(0, 0)) +
      scale_y_continuous(limits = c(43.5, 48), expand = c(0, 0)) +
      coord_map(""polyconic"") +
      theme_map() +
      theme(panel.background = element_rect(fill = NULL))
      )

g3 &lt;- g1 +
      annotation_custom(grob = g2, xmin = -65.49, xmax = -65.1,
                        ymin = 46.05, ymax = 46.34) 
</code></pre>

<p><a href=""https://i.stack.imgur.com/61z0U.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/61z0U.png"" alt=""enter image description here""></a></p>"	 This question has been abandoned for nearly three years. But, I believe it is worth providing an answer since there has not been enough information on how to draw inset maps on stack overflow. I chose ggplot2 to handle this task. First, I downloaded a SpatialPolygonsDataFrame using in the package. I converted the data to a regular data frame, which is require for ggplot. Then, I drew the main map (i.e., ). I used in order to provide longitude and latitude for ggplot. It used to be the case that we could add long and lat in , but the current version of ggplot does not accept long and lat as x and y, respectively. I trimmed the map using and . Then, I drew the inset map (i.e., ). Since I needed to draw a rectangular, I created a data frame called . I drew the map in a similar way. Make sure that you treat the inset map as a brow object; you need to use . The last step is to add the inset map in the main map. You need to identify the best location. You want to play with long and lat values.
new_qs_22k.csv	How do I show data on a map?	0.9999956	21153852	plotting graphs in numpy, scipy	pythonnumpyscipymplot3d	21154818	"<p>Based on your comment:</p>

<blockquote>
  <p>I have created 3 plots for every coordinates for A and B. I want to show x, y and z coordinates in one graph only for A and B. how can I show that?</p>
</blockquote>

<p>I believe what you are looking for is this:</p>

<pre><code>A = [[44.254, 44.114, 44.353, 44.899, 45.082],[-0.934, 0.506, 1.389, 0.938, 0.881],[44.864, 45.225, 44.005, 42.981, 46.356]]
t1 = [0, 1.4911475447, 1.5248639284, 1.2450273089, 3.3804382852]
B = [[44.254, 48.4877582254, 43.0268091866,  47.3166368948,  47.7110371397], [-0.934, 1.0837036817, 4.8307913511, 6.2772868228, 9.6580229826],  [44.864,  47.1020391758,  43.0633715949,  42.1564814645,  42.0223003717]]
t2 = [0, 0.00392157, 0.00784314, 0.01176471, 0.01568627 ]

for i in range(len(A)):
    figure(1)
    plot(t1,A[i],'o')
    #figure(2)
    plot(t2,B[i],'o')
show()
</code></pre>

<p>Note that <code>figure(x)</code> sets the current figure to <code>x</code> or creates it if it doesn't exist.
The <code>plot</code> function takes the form <code>plot(x,y,'marker_style')</code> where <code>'marker_style'</code> is a string as defined <a href=""http://matplotlib.org/api/pyplot_api.html#matplotlib.pyplot.plot"" rel=""nofollow"">here</a></p>"	"<p>Based on your comment:</p>

<blockquote>
  <p>I have created 3 plots for every coordinates for A and B. I want to show x, y and z coordinates in one graph only for A and B. how can I show that?</p>
</blockquote>

<p>I believe what you are looking for is this:</p>

<pre><code>A = [[44.254, 44.114, 44.353, 44.899, 45.082],[-0.934, 0.506, 1.389, 0.938, 0.881],[44.864, 45.225, 44.005, 42.981, 46.356]]
t1 = [0, 1.4911475447, 1.5248639284, 1.2450273089, 3.3804382852]
B = [[44.254, 48.4877582254, 43.0268091866,  47.3166368948,  47.7110371397], [-0.934, 1.0837036817, 4.8307913511, 6.2772868228, 9.6580229826],  [44.864,  47.1020391758,  43.0633715949,  42.1564814645,  42.0223003717]]
t2 = [0, 0.00392157, 0.00784314, 0.01176471, 0.01568627 ]

for i in range(len(A)):
    figure(1)
    plot(t1,A[i],'o')
    #figure(2)
    plot(t2,B[i],'o')
show()
</code></pre>

<p>Note that <code>figure(x)</code> sets the current figure to <code>x</code> or creates it if it doesn't exist.
The <code>plot</code> function takes the form <code>plot(x,y,'marker_style')</code> where <code>'marker_style'</code> is a string as defined <a href=""http://matplotlib.org/api/pyplot_api.html#matplotlib.pyplot.plot"" rel=""nofollow"">here</a></p>"	" Based on your comment: I have created 3 plots for every coordinates for A and B. I want to show x, y and z coordinates in one graph only for A and B. how can I show that? I believe what you are looking for is this: Note that sets the current figure to or creates it if it doesn't exist.
The function takes the form where is a string as defined here"
new_qs_22k.csv	How do I show data on a map?	0.9999956	57502763	How to plot horizontal stack of heatmaps or a stack of grid?	pythonmatplotlibdata-visualization	57549690	"<p>How about making a series of 3d surface plots, with the data your wish to present in contour plotted as facecolor? </p>

<pre><code>from mpl_toolkits.mplot3d import Axes3D
import matplotlib.pyplot as plt
from matplotlib import cm
from matplotlib.ticker import LinearLocator
import numpy as np


fig = plt.figure()
ax = fig.gca(projection='3d')

X = np.arange(-5, 5, 0.25)
Z = np.arange(-5, 5, 0.25)
X, Z = np.meshgrid(X, Z)
C = np.random.random(size=40*40*3).reshape((40, 40, 3))
ax.plot_surface(X, np.ones(shape=X.shape)-1, Z, facecolors=C, linewidth=0)
ax.plot_surface(X, np.ones(shape=X.shape), Z, facecolors=C, linewidth=0)
ax.plot_surface(X, np.ones(shape=X.shape)+1, Z, facecolors=C, linewidth=0)
</code></pre>

<p><a href=""https://i.stack.imgur.com/Trhrl.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/Trhrl.png"" alt=""enter image description here""></a></p>"	"<p>How about making a series of 3d surface plots, with the data your wish to present in contour plotted as facecolor? </p>

<pre><code>from mpl_toolkits.mplot3d import Axes3D
import matplotlib.pyplot as plt
from matplotlib import cm
from matplotlib.ticker import LinearLocator
import numpy as np


fig = plt.figure()
ax = fig.gca(projection='3d')

X = np.arange(-5, 5, 0.25)
Z = np.arange(-5, 5, 0.25)
X, Z = np.meshgrid(X, Z)
C = np.random.random(size=40*40*3).reshape((40, 40, 3))
ax.plot_surface(X, np.ones(shape=X.shape)-1, Z, facecolors=C, linewidth=0)
ax.plot_surface(X, np.ones(shape=X.shape), Z, facecolors=C, linewidth=0)
ax.plot_surface(X, np.ones(shape=X.shape)+1, Z, facecolors=C, linewidth=0)
</code></pre>

<p><a href=""https://i.stack.imgur.com/Trhrl.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/Trhrl.png"" alt=""enter image description here""></a></p>"	 How about making a series of 3d surface plots, with the data your wish to present in contour plotted as facecolor?
new_qs_22k.csv	How can I illustrate changes in my data over time?	0.9999958	36362570	Statecharts: Limit the number of time a state gets executed	umllimitstatestatechart	36368880	"<p>I think your question is way too far down in the weeds. While you can model to infinitesimal detail, you should aim to create a much more durable model that will not require as much change over time.</p>

<p>H. S. Lahman makes an excellent case for using Moore state machines in his book, <a href=""https://rads.stackoverflow.com/amzn/click/com/0321774078"" rel=""nofollow noreferrer"" rel=""nofollow noreferrer"">Model-Based Development: Applications</a>. Moore state machines are where actions happen on entry to states, as opposed to where actions happen on transitions between states. His most compelling reason for using Moore state machines is that transitions do not degenerate into a sequence of function calls, they are instead announcements of things that have completed.</p>

<p>Here is an example of how to avoid all the detail and create a more durable model:</p>

<p><a href=""https://i.stack.imgur.com/5ONCC.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/5ONCC.png"" alt=""enter image description here""></a></p>

<p>You'll notice that <em>how</em> things happen is completely encapsulated. For example, challenging the user might involve a PIN number, retina scan, or subdermal chip. The maximum failures allowed for each of those authentication modes might be completely different. That policy can be represented elsewhere.</p>"	"<p>I think your question is way too far down in the weeds. While you can model to infinitesimal detail, you should aim to create a much more durable model that will not require as much change over time.</p>

<p>H. S. Lahman makes an excellent case for using Moore state machines in his book, <a href=""https://rads.stackoverflow.com/amzn/click/com/0321774078"" rel=""nofollow noreferrer"" rel=""nofollow noreferrer"">Model-Based Development: Applications</a>. Moore state machines are where actions happen on entry to states, as opposed to where actions happen on transitions between states. His most compelling reason for using Moore state machines is that transitions do not degenerate into a sequence of function calls, they are instead announcements of things that have completed.</p>

<p>Here is an example of how to avoid all the detail and create a more durable model:</p>

<p><a href=""https://i.stack.imgur.com/5ONCC.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/5ONCC.png"" alt=""enter image description here""></a></p>

<p>You'll notice that <em>how</em> things happen is completely encapsulated. For example, challenging the user might involve a PIN number, retina scan, or subdermal chip. The maximum failures allowed for each of those authentication modes might be completely different. That policy can be represented elsewhere.</p>"	 I think your question is way too far down in the weeds. While you can model to infinitesimal detail, you should aim to create a much more durable model that will not require as much change over time. H. S. Lahman makes an excellent case for using Moore state machines in his book, Model-Based Development: Applications . Moore state machines are where actions happen on entry to states, as opposed to where actions happen on transitions between states. His most compelling reason for using Moore state machines is that transitions do not degenerate into a sequence of function calls, they are instead announcements of things that have completed. Here is an example of how to avoid all the detail and create a more durable model: You'll notice that how things happen is completely encapsulated. For example, challenging the user might involve a PIN number, retina scan, or subdermal chip. The maximum failures allowed for each of those authentication modes might be completely different. That policy can be represented elsewhere.
new_qs_22k.csv	How can I illustrate changes in my data over time?	0.99999547	20099901	ggplot2: A mean row in heatmaps	rggplot2heatmap	20101615	"<p>How about this:</p>

<p>I created a grid to mock up your data</p>

<p>Main changes, are to precalculate the aggregate and ""spacer"" data rows, and add to molten, 
then add scale_y_discrete so you can label the rows, 
then make sure the format works for the grey spacer bar with no % label (comments in code)</p>

<p>Easier in future if you include the data (or a sample) in the question</p>

<p><img src=""https://i.stack.imgur.com/lGziS.png"" alt=""plot""></p>

<pre><code>require(ggplot2)

molten&lt;-expand.grid(c(""Jan"",""Feb"",""Mar"",""Apr"",""May"",""Jun"",""Jul"",""Aug"",""Sep"",""Oct"",""Nov"",""Dec""),1985:2013,0)
colnames(molten)&lt;-c(""Var2"",""Var1"",""value"")
molten$value=(runif(nrow(molten))*60)-30

#create means
means&lt;-aggregate(molten[,c(1,3)], by=list(molten$Var2),FUN=mean, na.rm=TRUE)
colnames(means)&lt;-c(""Var2"",""Var1"",""value"")
means$Var1&lt;-""MEANS""

#create spacer bar
spacer&lt;-means
spacer$Var1&lt;-"" ""
spacer$value&lt;-NA

#append them to the data
molten&lt;-rbind(molten,spacer,means)


hm &lt;- ggplot(data = molten, aes(x = Var2, y=Var1, fill=value)) + 
geom_raster() +
# replaced your functions for ease of use
scale_fill_gradient2(low=""red"", mid=""yellow"", high=""green"",na.value=""grey"") +
labs(fill='% Return') +
# don't format the NA vals with %, return blank
geom_text(aes(label=ifelse((is.na(value)),"""",paste(sprintf(""%.1f %%"", value)))), size = 4) +
# make the scale discrete to add labels and enforce order (use a blank space for the spacer)
scale_y_discrete(limits = c(""MEANS"","" "",1985:2013)) +
xlab(label = NULL) + ylab(label = NULL) +
theme_bw() +
theme(axis.text.x = element_text(size = 10, hjust = 0, vjust = 0.4, angle=90))

hm
</code></pre>"	"<p>How about this:</p>

<p>I created a grid to mock up your data</p>

<p>Main changes, are to precalculate the aggregate and ""spacer"" data rows, and add to molten, 
then add scale_y_discrete so you can label the rows, 
then make sure the format works for the grey spacer bar with no % label (comments in code)</p>

<p>Easier in future if you include the data (or a sample) in the question</p>

<p><img src=""https://i.stack.imgur.com/lGziS.png"" alt=""plot""></p>

<pre><code>require(ggplot2)

molten&lt;-expand.grid(c(""Jan"",""Feb"",""Mar"",""Apr"",""May"",""Jun"",""Jul"",""Aug"",""Sep"",""Oct"",""Nov"",""Dec""),1985:2013,0)
colnames(molten)&lt;-c(""Var2"",""Var1"",""value"")
molten$value=(runif(nrow(molten))*60)-30

#create means
means&lt;-aggregate(molten[,c(1,3)], by=list(molten$Var2),FUN=mean, na.rm=TRUE)
colnames(means)&lt;-c(""Var2"",""Var1"",""value"")
means$Var1&lt;-""MEANS""

#create spacer bar
spacer&lt;-means
spacer$Var1&lt;-"" ""
spacer$value&lt;-NA

#append them to the data
molten&lt;-rbind(molten,spacer,means)


hm &lt;- ggplot(data = molten, aes(x = Var2, y=Var1, fill=value)) + 
geom_raster() +
# replaced your functions for ease of use
scale_fill_gradient2(low=""red"", mid=""yellow"", high=""green"",na.value=""grey"") +
labs(fill='% Return') +
# don't format the NA vals with %, return blank
geom_text(aes(label=ifelse((is.na(value)),"""",paste(sprintf(""%.1f %%"", value)))), size = 4) +
# make the scale discrete to add labels and enforce order (use a blank space for the spacer)
scale_y_discrete(limits = c(""MEANS"","" "",1985:2013)) +
xlab(label = NULL) + ylab(label = NULL) +
theme_bw() +
theme(axis.text.x = element_text(size = 10, hjust = 0, vjust = 0.4, angle=90))

hm
</code></pre>"	" How about this: I created a grid to mock up your data Main changes, are to precalculate the aggregate and ""spacer"" data rows, and add to molten, 
then add scale_y_discrete so you can label the rows, 
then make sure the format works for the grey spacer bar with no % label (comments in code) Easier in future if you include the data (or a sample) in the question"
new_qs_22k.csv	How can I illustrate changes in my data over time?	0.99999547	57502763	How to plot horizontal stack of heatmaps or a stack of grid?	pythonmatplotlibdata-visualization	57549690	"<p>How about making a series of 3d surface plots, with the data your wish to present in contour plotted as facecolor? </p>

<pre><code>from mpl_toolkits.mplot3d import Axes3D
import matplotlib.pyplot as plt
from matplotlib import cm
from matplotlib.ticker import LinearLocator
import numpy as np


fig = plt.figure()
ax = fig.gca(projection='3d')

X = np.arange(-5, 5, 0.25)
Z = np.arange(-5, 5, 0.25)
X, Z = np.meshgrid(X, Z)
C = np.random.random(size=40*40*3).reshape((40, 40, 3))
ax.plot_surface(X, np.ones(shape=X.shape)-1, Z, facecolors=C, linewidth=0)
ax.plot_surface(X, np.ones(shape=X.shape), Z, facecolors=C, linewidth=0)
ax.plot_surface(X, np.ones(shape=X.shape)+1, Z, facecolors=C, linewidth=0)
</code></pre>

<p><a href=""https://i.stack.imgur.com/Trhrl.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/Trhrl.png"" alt=""enter image description here""></a></p>"	"<p>How about making a series of 3d surface plots, with the data your wish to present in contour plotted as facecolor? </p>

<pre><code>from mpl_toolkits.mplot3d import Axes3D
import matplotlib.pyplot as plt
from matplotlib import cm
from matplotlib.ticker import LinearLocator
import numpy as np


fig = plt.figure()
ax = fig.gca(projection='3d')

X = np.arange(-5, 5, 0.25)
Z = np.arange(-5, 5, 0.25)
X, Z = np.meshgrid(X, Z)
C = np.random.random(size=40*40*3).reshape((40, 40, 3))
ax.plot_surface(X, np.ones(shape=X.shape)-1, Z, facecolors=C, linewidth=0)
ax.plot_surface(X, np.ones(shape=X.shape), Z, facecolors=C, linewidth=0)
ax.plot_surface(X, np.ones(shape=X.shape)+1, Z, facecolors=C, linewidth=0)
</code></pre>

<p><a href=""https://i.stack.imgur.com/Trhrl.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/Trhrl.png"" alt=""enter image description here""></a></p>"	 How about making a series of 3d surface plots, with the data your wish to present in contour plotted as facecolor?
new_qs_22k.csv	How can I illustrate changes in my data over time?	0.99999547	16018210	c# wpf multiple line drawing on canvas with kinect sensor	c#wpfdrawkinectlines	16021276	"<blockquote>
  <p>How do I keep my lines?</p>
</blockquote>

<p>You would have to either use a <a href=""http://msdn.microsoft.com/en-us/library/system.windows.shapes.polyline.aspx"" rel=""nofollow"">Polyline</a> or draw a <a href=""http://msdn.microsoft.com/en-us/library/system.windows.media.pathgeometry.aspx"" rel=""nofollow"">PathGeometry</a> or a <a href=""http://msdn.microsoft.com/en-us/library/system.windows.media.streamgeometry.aspx"" rel=""nofollow"">StreamGeometry</a> into a DrawingContext by <a href=""http://msdn.microsoft.com/en-us/library/system.windows.media.drawingcontext.drawgeometry.aspx"" rel=""nofollow"">DrawGeometry</a>. The geometry would have to contain one or more polyline segments.</p>"	"<blockquote>
  <p>How do I keep my lines?</p>
</blockquote>

<p>You would have to either use a <a href=""http://msdn.microsoft.com/en-us/library/system.windows.shapes.polyline.aspx"" rel=""nofollow"">Polyline</a> or draw a <a href=""http://msdn.microsoft.com/en-us/library/system.windows.media.pathgeometry.aspx"" rel=""nofollow"">PathGeometry</a> or a <a href=""http://msdn.microsoft.com/en-us/library/system.windows.media.streamgeometry.aspx"" rel=""nofollow"">StreamGeometry</a> into a DrawingContext by <a href=""http://msdn.microsoft.com/en-us/library/system.windows.media.drawingcontext.drawgeometry.aspx"" rel=""nofollow"">DrawGeometry</a>. The geometry would have to contain one or more polyline segments.</p>"	 How do I keep my lines? You would have to either use a Polyline or draw a PathGeometry or a StreamGeometry into a DrawingContext by DrawGeometry . The geometry would have to contain one or more polyline segments.
new_qs_22k.csv	How can I illustrate changes in my data over time?	0.99999535	49179092	how to remove white lines from geom_tile (heat map) using ggplot2	rggplot2heatmap	49183391	"<p>I don't know if this is the most elegant solution but if you add <code>color</code> in your <code>aes</code> and then play with the size in <code>geom_tile</code> you can get them to overlap and remove the white lines:</p>

<p>First is how my data looks with the white lines:</p>

<pre><code>ggplot(mydf, aes(x=grp, y=date, fill=n)) + 
  geom_tile()
</code></pre>

<p><a href=""https://i.stack.imgur.com/XpMoO.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/XpMoO.png"" alt=""enter image description here""></a></p>

<p>Now I set my color to the same object as my fill and mess with the size:</p>

<pre><code>ggplot(mydf, aes(x=grp, y=date, fill=n,color=n)) + 
  geom_tile(size=0.6) 
</code></pre>

<p><a href=""https://i.stack.imgur.com/1Zc59.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/1Zc59.png"" alt=""enter image description here""></a></p>

<p>Like I said, probably not the most elegant solution, and there is probably a better, more efficient way to determine the size value (instead of trial and error like I did) but in general this seems to solve your issue.</p>"	"<p>I don't know if this is the most elegant solution but if you add <code>color</code> in your <code>aes</code> and then play with the size in <code>geom_tile</code> you can get them to overlap and remove the white lines:</p>

<p>First is how my data looks with the white lines:</p>

<pre><code>ggplot(mydf, aes(x=grp, y=date, fill=n)) + 
  geom_tile()
</code></pre>

<p><a href=""https://i.stack.imgur.com/XpMoO.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/XpMoO.png"" alt=""enter image description here""></a></p>

<p>Now I set my color to the same object as my fill and mess with the size:</p>

<pre><code>ggplot(mydf, aes(x=grp, y=date, fill=n,color=n)) + 
  geom_tile(size=0.6) 
</code></pre>

<p><a href=""https://i.stack.imgur.com/1Zc59.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/1Zc59.png"" alt=""enter image description here""></a></p>

<p>Like I said, probably not the most elegant solution, and there is probably a better, more efficient way to determine the size value (instead of trial and error like I did) but in general this seems to solve your issue.</p>"	 I don't know if this is the most elegant solution but if you add in your and then play with the size in you can get them to overlap and remove the white lines: First is how my data looks with the white lines: Now I set my color to the same object as my fill and mess with the size: Like I said, probably not the most elegant solution, and there is probably a better, more efficient way to determine the size value (instead of trial and error like I did) but in general this seems to solve your issue.
new_qs_22k.csv	Is there a way to show a heatmap of my data?	0.9999974	51519602	Ticktext value does not fix ggplot2 facet_grid() breaking down when combined with ggplotly()	rggplot2ggplotly	51571482	"<p>So first things first: </p>

<p>In your case I am not even sure whether a <code>plotly</code> heatmap is what you need. In addition you should <strong>never</strong> convert a complicated <code>ggplot</code> to plotly. It will fail! In 90% of cases. Try recreating your plot in <code>plotly</code> or whereever you want it to end up. Anything else ends up in coding hell. </p>

<p>I started by doing some research: </p>

<ol>
<li><a href=""https://stackoverflow.com/questions/44861851/specifying-the-colors-in-a-plotly-heatmap"">Here</a> is a good description how to create heatmaps with different colors in <code>plotly</code></li>
<li><a href=""https://stackoverflow.com/questions/37285729/how-to-give-subtitles-for-subplot-in-plot-ly-using-r"">This</a> explains how you can create titles in subplots. </li>
</ol>

<p>From post 1 I know that I have to create a matrix for each level in your data. So I wrote a function for that: </p>

<pre><code>mymat&lt;-as.matrix(Gene_states22[,-1:-2])

### Creates a 1-NA dummy matrix for each level. The output is stored in a list
dummy_mat&lt;-function(mat,levels,names_col){
  mat_list&lt;-lapply(levels,function(x){
                            mat[mat!=x]=NA
                            mat[mat==x]=1
                            mymat=t(apply(mat,2,as.numeric))
                            colnames(mymat)=names_col
                            return(mymat)
                            })
  names(mat_list)=levels
  return(mat_list)
}
my_mat_list&lt;-dummy_mat(mymat,c('DF','low','normal','over'),Gene_states22$gene_symbol)

### Optional: The heatmap type is peculiar - I created a text-NA matrix for each category as well
text_mat&lt;-function(mat,levels,names_col){
  mat_list&lt;-lapply(levels,function(x){
                            mat[mat!=x]=NA
                            mat=t(mat)
                            colnames(mat)=names_col
                            return(mat)
                            })
  names(mat_list)=levels
  return(mat_list)
}
   my_mat_list_t&lt;-text_mat(mymat,c('DF','low','normal','over'),as.character(Gene_states22$gene_symbol))
</code></pre>

<p>In addition I needed colors for each level. These colors are created using some dataframe. You may write a similar (<code>lapply</code>-)loop here as well: </p>

<pre><code>DF_Color &lt;- data.frame(x = c(0,1), y = c(""#DEDEDE"", ""#DEDEDE""))
colnames(DF_Color) &lt;- NULL

lowColor &lt;- data.frame(x = c(0,1), y = c(""#00CCFF"", ""#00CCFF""))
colnames(lowColor) &lt;- NULL

normColor &lt;- data.frame(x = c(0,1), y = c(""#DEDE00"", ""#DEDE00""))
colnames(normColor) &lt;- NULL

overColor &lt;- data.frame(x = c(0,1), y = c(""#DE3333"", ""#DE3333""))
colnames(overColor) &lt;- NULL
</code></pre>

<p>In addition we need the columns in the matrix for each panel-category: </p>

<pre><code>mycols&lt;-lapply(levels(Gene_states22$panel),function(x) grep(x,Gene_states22$panel))
</code></pre>

<p>I stored this in a list as well. 
Next I use lapply-loop to plot. I store the values in a list and use <code>subplot</code> to put everything together: </p>

<pre><code>library(plotly)

p_list&lt;-lapply(1:length(mycols),function(j){
  columns&lt;-mycols[[j]]

p&lt;-plot_ly(
    type = ""heatmap""
) %&gt;% add_trace(
    y=rownames(my_mat_list$DF),x=colnames(my_mat_list$DF)[columns],
    z = my_mat_list$DF[,columns],
    xgap=3,ygap=3, text=my_mat_list_t$DF[,columns],hoverinfo=""x+y+text"",
    colorscale = DF_Color,
    colorbar = list(
        len = 0.3,
        y = 0.3,
        yanchor = 'top',
        title = 'DF series',
        tickvals = ''
    )
) %&gt;% add_trace(
  y=rownames(my_mat_list$low),x=colnames(my_mat_list$low)[columns],
    z = my_mat_list$low[,columns],
    xgap=3,ygap=3,text=my_mat_list_t$low[,columns],hoverinfo=""x+y+text"",
    colorscale = lowColor,
    colorbar = list(
        len = 0.3,
        y = 0.3,
        yanchor = 'top',
        title = 'low series',
        tickvals = ''
    )
) %&gt;% add_trace(
  y=rownames(my_mat_list$normal),x=colnames(my_mat_list$normal)[columns],
    z = my_mat_list$normal[,columns],
    xgap=3,ygap=3,text=my_mat_list_t$normal[,columns],hoverinfo=""x+y+text"",
    colorscale = normColor,
    colorbar = list(
        len = 0.3,
        y = 1,
        yanchor = 'top',
        title = 'normal series',
        tickvals = ''
    )
) %&gt;% add_trace(
  y=rownames(my_mat_list$over),x=colnames(my_mat_list$over)[columns],
    z = my_mat_list$over[,columns],
    xgap=3,ygap=3,text=my_mat_list_t$over[,columns],hoverinfo=""x+y+text"",
    colorscale = overColor,
    colorbar = list(
        len = 0.3,
        y = 1,
        yanchor = 'top',
        title = 'over series',
        tickvals = ''
    )
 )
return(p)
})

subplot(p_list[[1]],p_list[[2]],shareY = TRUE) %&gt;%
  layout(annotations = list(
 list(x = 0.2 , y = 1.05, text = levels(Gene_states22$panel)[1], showarrow = F, xref='paper', yref='paper'),
  list(x = 0.8 , y = 1.05, text = levels(Gene_states22$panel)[2], showarrow = F, xref='paper', yref='paper'))
)
</code></pre>

<p><a href=""https://i.stack.imgur.com/tbiv1.jpg"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/tbiv1.jpg"" alt=""enter image description here""></a></p>

<p><strong>POSSIBLE ISSUES</strong>:</p>

<ol>
<li>You have to become create around categories like <code>dfgh</code> which occur only once. If only one column is selected in <code>R</code>, the output is automatically transformed into a (numeric or character) <code>vector</code>-type. Thus maybe add an <code>as.matrix()</code> to all <code>z</code> and <code>text</code> arguments</li>
<li>hover-text doesn't really work. But <code>plotly</code> has a good documentation <a href=""https://plot.ly/r/text-and-annotations/"" rel=""nofollow noreferrer"">there</a>. You should be able to figure that out. </li>
<li>You also have to specify the width in the <code>subplot</code>-function. That will be fiddly if you have more than 10 categories. </li>
<li>Interactivity doesn't really work. You can't remove traces. Why? No idea. Do some research if you need it. I guess it is connected with the plot type. </li>
<li>I recommend specifying the extend of the plot(s) in px. That might make the tiles more similar.</li>
<li>Finally you will need some <a href=""https://plot.ly/r/reference/#layout-annotations"" rel=""nofollow noreferrer"">reference for the (subplot) titles</a> and you will need to adjust the margins of your plot. Such that the titles are visible. </li>
</ol>"	"<p>So first things first: </p>

<p>In your case I am not even sure whether a <code>plotly</code> heatmap is what you need. In addition you should <strong>never</strong> convert a complicated <code>ggplot</code> to plotly. It will fail! In 90% of cases. Try recreating your plot in <code>plotly</code> or whereever you want it to end up. Anything else ends up in coding hell. </p>

<p>I started by doing some research: </p>

<ol>
<li><a href=""https://stackoverflow.com/questions/44861851/specifying-the-colors-in-a-plotly-heatmap"">Here</a> is a good description how to create heatmaps with different colors in <code>plotly</code></li>
<li><a href=""https://stackoverflow.com/questions/37285729/how-to-give-subtitles-for-subplot-in-plot-ly-using-r"">This</a> explains how you can create titles in subplots. </li>
</ol>

<p>From post 1 I know that I have to create a matrix for each level in your data. So I wrote a function for that: </p>

<pre><code>mymat&lt;-as.matrix(Gene_states22[,-1:-2])

### Creates a 1-NA dummy matrix for each level. The output is stored in a list
dummy_mat&lt;-function(mat,levels,names_col){
  mat_list&lt;-lapply(levels,function(x){
                            mat[mat!=x]=NA
                            mat[mat==x]=1
                            mymat=t(apply(mat,2,as.numeric))
                            colnames(mymat)=names_col
                            return(mymat)
                            })
  names(mat_list)=levels
  return(mat_list)
}
my_mat_list&lt;-dummy_mat(mymat,c('DF','low','normal','over'),Gene_states22$gene_symbol)

### Optional: The heatmap type is peculiar - I created a text-NA matrix for each category as well
text_mat&lt;-function(mat,levels,names_col){
  mat_list&lt;-lapply(levels,function(x){
                            mat[mat!=x]=NA
                            mat=t(mat)
                            colnames(mat)=names_col
                            return(mat)
                            })
  names(mat_list)=levels
  return(mat_list)
}
   my_mat_list_t&lt;-text_mat(mymat,c('DF','low','normal','over'),as.character(Gene_states22$gene_symbol))
</code></pre>

<p>In addition I needed colors for each level. These colors are created using some dataframe. You may write a similar (<code>lapply</code>-)loop here as well: </p>

<pre><code>DF_Color &lt;- data.frame(x = c(0,1), y = c(""#DEDEDE"", ""#DEDEDE""))
colnames(DF_Color) &lt;- NULL

lowColor &lt;- data.frame(x = c(0,1), y = c(""#00CCFF"", ""#00CCFF""))
colnames(lowColor) &lt;- NULL

normColor &lt;- data.frame(x = c(0,1), y = c(""#DEDE00"", ""#DEDE00""))
colnames(normColor) &lt;- NULL

overColor &lt;- data.frame(x = c(0,1), y = c(""#DE3333"", ""#DE3333""))
colnames(overColor) &lt;- NULL
</code></pre>

<p>In addition we need the columns in the matrix for each panel-category: </p>

<pre><code>mycols&lt;-lapply(levels(Gene_states22$panel),function(x) grep(x,Gene_states22$panel))
</code></pre>

<p>I stored this in a list as well. 
Next I use lapply-loop to plot. I store the values in a list and use <code>subplot</code> to put everything together: </p>

<pre><code>library(plotly)

p_list&lt;-lapply(1:length(mycols),function(j){
  columns&lt;-mycols[[j]]

p&lt;-plot_ly(
    type = ""heatmap""
) %&gt;% add_trace(
    y=rownames(my_mat_list$DF),x=colnames(my_mat_list$DF)[columns],
    z = my_mat_list$DF[,columns],
    xgap=3,ygap=3, text=my_mat_list_t$DF[,columns],hoverinfo=""x+y+text"",
    colorscale = DF_Color,
    colorbar = list(
        len = 0.3,
        y = 0.3,
        yanchor = 'top',
        title = 'DF series',
        tickvals = ''
    )
) %&gt;% add_trace(
  y=rownames(my_mat_list$low),x=colnames(my_mat_list$low)[columns],
    z = my_mat_list$low[,columns],
    xgap=3,ygap=3,text=my_mat_list_t$low[,columns],hoverinfo=""x+y+text"",
    colorscale = lowColor,
    colorbar = list(
        len = 0.3,
        y = 0.3,
        yanchor = 'top',
        title = 'low series',
        tickvals = ''
    )
) %&gt;% add_trace(
  y=rownames(my_mat_list$normal),x=colnames(my_mat_list$normal)[columns],
    z = my_mat_list$normal[,columns],
    xgap=3,ygap=3,text=my_mat_list_t$normal[,columns],hoverinfo=""x+y+text"",
    colorscale = normColor,
    colorbar = list(
        len = 0.3,
        y = 1,
        yanchor = 'top',
        title = 'normal series',
        tickvals = ''
    )
) %&gt;% add_trace(
  y=rownames(my_mat_list$over),x=colnames(my_mat_list$over)[columns],
    z = my_mat_list$over[,columns],
    xgap=3,ygap=3,text=my_mat_list_t$over[,columns],hoverinfo=""x+y+text"",
    colorscale = overColor,
    colorbar = list(
        len = 0.3,
        y = 1,
        yanchor = 'top',
        title = 'over series',
        tickvals = ''
    )
 )
return(p)
})

subplot(p_list[[1]],p_list[[2]],shareY = TRUE) %&gt;%
  layout(annotations = list(
 list(x = 0.2 , y = 1.05, text = levels(Gene_states22$panel)[1], showarrow = F, xref='paper', yref='paper'),
  list(x = 0.8 , y = 1.05, text = levels(Gene_states22$panel)[2], showarrow = F, xref='paper', yref='paper'))
)
</code></pre>

<p><a href=""https://i.stack.imgur.com/tbiv1.jpg"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/tbiv1.jpg"" alt=""enter image description here""></a></p>

<p><strong>POSSIBLE ISSUES</strong>:</p>

<ol>
<li>You have to become create around categories like <code>dfgh</code> which occur only once. If only one column is selected in <code>R</code>, the output is automatically transformed into a (numeric or character) <code>vector</code>-type. Thus maybe add an <code>as.matrix()</code> to all <code>z</code> and <code>text</code> arguments</li>
<li>hover-text doesn't really work. But <code>plotly</code> has a good documentation <a href=""https://plot.ly/r/text-and-annotations/"" rel=""nofollow noreferrer"">there</a>. You should be able to figure that out. </li>
<li>You also have to specify the width in the <code>subplot</code>-function. That will be fiddly if you have more than 10 categories. </li>
<li>Interactivity doesn't really work. You can't remove traces. Why? No idea. Do some research if you need it. I guess it is connected with the plot type. </li>
<li>I recommend specifying the extend of the plot(s) in px. That might make the tiles more similar.</li>
<li>Finally you will need some <a href=""https://plot.ly/r/reference/#layout-annotations"" rel=""nofollow noreferrer"">reference for the (subplot) titles</a> and you will need to adjust the margins of your plot. Such that the titles are visible. </li>
</ol>"	" So first things first: In your case I am not even sure whether a heatmap is what you need. In addition you should never convert a complicated to plotly. It will fail! In 90% of cases. Try recreating your plot in or whereever you want it to end up. Anything else ends up in coding hell. I started by doing some research: Here is a good description how to create heatmaps with different colors in This explains how you can create titles in subplots. From post 1 I know that I have to create a matrix for each level in your data. So I wrote a function for that: In addition I needed colors for each level. These colors are created using some dataframe. You may write a similar ( -)loop here as well: In addition we need the columns in the matrix for each panel-category: I stored this in a list as well. 
Next I use lapply-loop to plot. I store the values in a list and use to put everything together: POSSIBLE ISSUES : You have to become create around categories like which occur only once. If only one column is selected in , the output is automatically transformed into a (numeric or character) -type. Thus maybe add an to all and arguments hover-text doesn't really work. But has a good documentation there . You should be able to figure that out. You also have to specify the width in the -function. That will be fiddly if you have more than 10 categories. Interactivity doesn't really work. You can't remove traces. Why? No idea. Do some research if you need it. I guess it is connected with the plot type. I recommend specifying the extend of the plot(s) in px. That might make the tiles more similar. Finally you will need some reference for the (subplot) titles and you will need to adjust the margins of your plot. Such that the titles are visible."
new_qs_22k.csv	Is there a way to show a heatmap of my data?	0.99999726	15351575	Moving color key in R heatmap.2 (function of gplots package)	rheatmapcolor-keygplots	15364642	"<p>The position of each element in the <code>heatmap.2</code> plot can be controlled using the <code>lmat</code>, <code>lhei</code> and <code>lwid</code> parameters. These are passed by <code>heatmap.2</code> to the <code>layout</code> command as:</p>

<pre><code>layout(mat = lmat, widths = lwid, heights = lhei)
</code></pre>

<p><code>lmat</code> is a matrix describing how the screen is to be broken up. By default, heatmap.2 divides the screen into a four element grid, so <code>lmat</code> is a 2x2 matrix. The number in each element of the matrix describes what order to plot the next four plots in. Heatmap.2 plots its elements in the following order:</p>

<ol>
<li>Heatmap,</li>
<li>Row dendrogram,</li>
<li>Column dendrogram,</li>
<li>Key</li>
</ol>

<p>so the default <code>lmat</code> is:</p>

<pre><code>&gt; rbind(4:3,2:1)
     [,1] [,2]
[1,]    4    3
[2,]    2    1
</code></pre>

<p>If for example, you want to put the key underneath the heatmap you would specify:</p>

<pre><code>&gt; lmat = rbind(c(0,3),c(2,1),c(0,4))
&gt; lmat
     [,1] [,2]
[1,]    0    3
[2,]    2    1
[3,]    0    4
</code></pre>

<p><code>lwid</code> and <code>lhei</code> are vectors that specify the height and width of each row and column. The default is <code>c(1.5,4)</code> for both. If you change <code>lmat</code> you'll either have to or probably want to change these as well.  For the above example, if we want to keep all the other elements the same size, but want a thin color key at the bottom, we might set</p>

<pre><code>&gt;lwid = c(1.5,4)
&gt;lhei = c(1.5,4,1)
</code></pre>

<p>We are then ready to plot the heatmap:</p>

<pre><code>&gt;heatmap.2(x,...,lmat = lmat, lwid = lwid, lhei = lhei)
</code></pre>

<p>This will plot a heatmap with the column dendrogram above the heatmap, the row dendrogram to the left, and the key underneath. Unfortunately the headings and the labels for the key are hard coded. </p>

<p>see <code>?layout</code> for more details on how <code>layout</code> works.</p>"	"<p>The position of each element in the <code>heatmap.2</code> plot can be controlled using the <code>lmat</code>, <code>lhei</code> and <code>lwid</code> parameters. These are passed by <code>heatmap.2</code> to the <code>layout</code> command as:</p>

<pre><code>layout(mat = lmat, widths = lwid, heights = lhei)
</code></pre>

<p><code>lmat</code> is a matrix describing how the screen is to be broken up. By default, heatmap.2 divides the screen into a four element grid, so <code>lmat</code> is a 2x2 matrix. The number in each element of the matrix describes what order to plot the next four plots in. Heatmap.2 plots its elements in the following order:</p>

<ol>
<li>Heatmap,</li>
<li>Row dendrogram,</li>
<li>Column dendrogram,</li>
<li>Key</li>
</ol>

<p>so the default <code>lmat</code> is:</p>

<pre><code>&gt; rbind(4:3,2:1)
     [,1] [,2]
[1,]    4    3
[2,]    2    1
</code></pre>

<p>If for example, you want to put the key underneath the heatmap you would specify:</p>

<pre><code>&gt; lmat = rbind(c(0,3),c(2,1),c(0,4))
&gt; lmat
     [,1] [,2]
[1,]    0    3
[2,]    2    1
[3,]    0    4
</code></pre>

<p><code>lwid</code> and <code>lhei</code> are vectors that specify the height and width of each row and column. The default is <code>c(1.5,4)</code> for both. If you change <code>lmat</code> you'll either have to or probably want to change these as well.  For the above example, if we want to keep all the other elements the same size, but want a thin color key at the bottom, we might set</p>

<pre><code>&gt;lwid = c(1.5,4)
&gt;lhei = c(1.5,4,1)
</code></pre>

<p>We are then ready to plot the heatmap:</p>

<pre><code>&gt;heatmap.2(x,...,lmat = lmat, lwid = lwid, lhei = lhei)
</code></pre>

<p>This will plot a heatmap with the column dendrogram above the heatmap, the row dendrogram to the left, and the key underneath. Unfortunately the headings and the labels for the key are hard coded. </p>

<p>see <code>?layout</code> for more details on how <code>layout</code> works.</p>"	 The position of each element in the plot can be controlled using the , and parameters. These are passed by to the command as: is a matrix describing how the screen is to be broken up. By default, heatmap.2 divides the screen into a four element grid, so is a 2x2 matrix. The number in each element of the matrix describes what order to plot the next four plots in. Heatmap.2 plots its elements in the following order: Heatmap, Row dendrogram, Column dendrogram, Key so the default is: If for example, you want to put the key underneath the heatmap you would specify: and are vectors that specify the height and width of each row and column. The default is for both. If you change you'll either have to or probably want to change these as well.  For the above example, if we want to keep all the other elements the same size, but want a thin color key at the bottom, we might set We are then ready to plot the heatmap: This will plot a heatmap with the column dendrogram above the heatmap, the row dendrogram to the left, and the key underneath. Unfortunately the headings and the labels for the key are hard coded. see for more details on how works.
new_qs_22k.csv	Is there a way to show a heatmap of my data?	0.99999714	12081843	R matrix plot with colour threshold and grid	rmatrixplotgridlines	12082247	"<p>I am not 100% sure if your data is in a matrix and you want a heatmap type plot. Or if it is in some other form and you want a scatterplot like those you link to. I just assumed your data is as described and that you want a heatmap. I imagine it is something like: </p>

<pre><code>   x=abs(rnorm(100*100,50,25))
    x=matrix(x,nrow=100)
</code></pre>

<p>So I would reshape the data so it looks like xy coordinates with:</p>

<pre><code>require(reshape2)
require(ggplot2)
x1=melt(x)
names(x1)=c(""x"",""y"",""color"")
</code></pre>

<p>Then I would make my cutoff into a factor:</p>

<pre><code>x1$color=factor(x1$color&gt;50)
levels(x1$color)=c(""lessthan50"",""more than 50"")
</code></pre>

<p>Then call ggplot with:      </p>

<pre><code>qplot(x, y, fill=color, data=x1,geom='tile')
</code></pre>

<p><img src=""https://i.stack.imgur.com/6K9HB.png"" alt=""enter image description here""></p>"	"<p>I am not 100% sure if your data is in a matrix and you want a heatmap type plot. Or if it is in some other form and you want a scatterplot like those you link to. I just assumed your data is as described and that you want a heatmap. I imagine it is something like: </p>

<pre><code>   x=abs(rnorm(100*100,50,25))
    x=matrix(x,nrow=100)
</code></pre>

<p>So I would reshape the data so it looks like xy coordinates with:</p>

<pre><code>require(reshape2)
require(ggplot2)
x1=melt(x)
names(x1)=c(""x"",""y"",""color"")
</code></pre>

<p>Then I would make my cutoff into a factor:</p>

<pre><code>x1$color=factor(x1$color&gt;50)
levels(x1$color)=c(""lessthan50"",""more than 50"")
</code></pre>

<p>Then call ggplot with:      </p>

<pre><code>qplot(x, y, fill=color, data=x1,geom='tile')
</code></pre>

<p><img src=""https://i.stack.imgur.com/6K9HB.png"" alt=""enter image description here""></p>"	 I am not 100% sure if your data is in a matrix and you want a heatmap type plot. Or if it is in some other form and you want a scatterplot like those you link to. I just assumed your data is as described and that you want a heatmap. I imagine it is something like: So I would reshape the data so it looks like xy coordinates with: Then I would make my cutoff into a factor: Then call ggplot with:
new_qs_22k.csv	Is there a way to show a heatmap of my data?	0.999997	20342762	Generating a wind vector diagram	pythonvectormatplotlib	20343072	"<p>Given that you have wind speed (a scalar quantity) and not direction (the vector quantity), quiver is not the right type of plot.  Something more like a <a href=""http://matplotlib.org/examples/pylab_examples/image_demo.html"" rel=""nofollow noreferrer"">heatmap</a> is probably what you want, or maybe a <a href=""http://matplotlib.org/examples/pylab_examples/contourf_demo.html"" rel=""nofollow noreferrer"">contour plot</a> or just a <a href=""http://matplotlib.org/examples/pylab_examples/scatter_masked.html"" rel=""nofollow noreferrer"">scatter plot</a> where you set the color of each disk to the wind velocity.</p>

<p><a href=""http://janne.aukia.com/kuutio/?p=1213"" rel=""nofollow noreferrer"">Here's</a> a nice image done with matplotlib that's a heatplot with contour lines, and looks to be geographical.</p>

<p>One nice thing about the contour plot, is that max gradient will be orthogonal to the iso lines, so it's half way there to calculating the visualizing the forces on the wind.</p>

<p><img src=""https://i.stack.imgur.com/HZZTP.jpg"" alt=""enter image description here""></p>"	"<p>Given that you have wind speed (a scalar quantity) and not direction (the vector quantity), quiver is not the right type of plot.  Something more like a <a href=""http://matplotlib.org/examples/pylab_examples/image_demo.html"" rel=""nofollow noreferrer"">heatmap</a> is probably what you want, or maybe a <a href=""http://matplotlib.org/examples/pylab_examples/contourf_demo.html"" rel=""nofollow noreferrer"">contour plot</a> or just a <a href=""http://matplotlib.org/examples/pylab_examples/scatter_masked.html"" rel=""nofollow noreferrer"">scatter plot</a> where you set the color of each disk to the wind velocity.</p>

<p><a href=""http://janne.aukia.com/kuutio/?p=1213"" rel=""nofollow noreferrer"">Here's</a> a nice image done with matplotlib that's a heatplot with contour lines, and looks to be geographical.</p>

<p>One nice thing about the contour plot, is that max gradient will be orthogonal to the iso lines, so it's half way there to calculating the visualizing the forces on the wind.</p>

<p><img src=""https://i.stack.imgur.com/HZZTP.jpg"" alt=""enter image description here""></p>"	 Given that you have wind speed (a scalar quantity) and not direction (the vector quantity), quiver is not the right type of plot.  Something more like a heatmap is probably what you want, or maybe a contour plot or just a scatter plot where you set the color of each disk to the wind velocity. Here's a nice image done with matplotlib that's a heatplot with contour lines, and looks to be geographical. One nice thing about the contour plot, is that max gradient will be orthogonal to the iso lines, so it's half way there to calculating the visualizing the forces on the wind.
new_qs_22k.csv	Is there a way to show a heatmap of my data?	0.999997	35498616	highcharts heatmap Uncaught TypeError: Cannot read property 'prototype' of undefined	javascriptjqueryruby-on-railshighcharts	35498966	"<p>I didnt notice about versions, I'm using an old version of highcharts (4.1.9) , then I included the newest version of heatmap (4.2.3) and had this error , then I updated all files to 4.2.3 but had conflicts with another js files.</p>

<p>Finally I downgraded both heatmap and highcharts to 4.1.9v and worked :)</p>

<p>I hope this help somebody</p>"	"<p>I didnt notice about versions, I'm using an old version of highcharts (4.1.9) , then I included the newest version of heatmap (4.2.3) and had this error , then I updated all files to 4.2.3 but had conflicts with another js files.</p>

<p>Finally I downgraded both heatmap and highcharts to 4.1.9v and worked :)</p>

<p>I hope this help somebody</p>"	 I didnt notice about versions, I'm using an old version of highcharts (4.1.9) , then I included the newest version of heatmap (4.2.3) and had this error , then I updated all files to 4.2.3 but had conflicts with another js files. Finally I downgraded both heatmap and highcharts to 4.1.9v and worked :) I hope this help somebody
new_qs_22k.csv	How can I plot a comparison of two data sets?	0.9999969	3506444	Arguments, Plots, Outputs and Lines of best fit in R	windowsrplot	3506647	"<blockquote>
  <p>I plot the data contained in that table mentioned above. How do I save the plot (eg: plot.savePDF(""plot.pdf"")) to a PDF file?</p>
</blockquote>

<pre><code> pdf(""filename.pdf"")
 plot(...)
 dev.off()
</code></pre>

<blockquote>
  <p>How could I redirect the output of, for example, cor(detailsTable$a, detailsTable$b) to a file? and how do I write a simple string to a file. eg: ""Correlation of the data: "" + cor(...)</p>
</blockquote>

<p>check the <code>write.table</code> manual page (<code>?write.table</code>)</p>

<blockquote>
  <p>How do I plot the line of best fit on an existing plot?</p>
</blockquote>

<pre><code>x &lt;- 1:10
y &lt;- 2 * x + runif(10) 
plot (x, y, pch=20)
fit &lt;- glm(y~x)
coefs &lt;- coef(fit)
abline(coefs, lwd=2, col='red')
# Or also, without finding the coefficients
abline(fit, lwd=2, col='red')
</code></pre>"	"<blockquote>
  <p>I plot the data contained in that table mentioned above. How do I save the plot (eg: plot.savePDF(""plot.pdf"")) to a PDF file?</p>
</blockquote>

<pre><code> pdf(""filename.pdf"")
 plot(...)
 dev.off()
</code></pre>

<blockquote>
  <p>How could I redirect the output of, for example, cor(detailsTable$a, detailsTable$b) to a file? and how do I write a simple string to a file. eg: ""Correlation of the data: "" + cor(...)</p>
</blockquote>

<p>check the <code>write.table</code> manual page (<code>?write.table</code>)</p>

<blockquote>
  <p>How do I plot the line of best fit on an existing plot?</p>
</blockquote>

<pre><code>x &lt;- 1:10
y &lt;- 2 * x + runif(10) 
plot (x, y, pch=20)
fit &lt;- glm(y~x)
coefs &lt;- coef(fit)
abline(coefs, lwd=2, col='red')
# Or also, without finding the coefficients
abline(fit, lwd=2, col='red')
</code></pre>"	" I plot the data contained in that table mentioned above. How do I save the plot (eg: plot.savePDF(""plot.pdf"")) to a PDF file? How could I redirect the output of, for example, cor(detailsTable$a, detailsTable$b) to a file? and how do I write a simple string to a file. eg: ""Correlation of the data: "" + cor(...) check the manual page ( ) How do I plot the line of best fit on an existing plot?"
new_qs_22k.csv	How can I plot a comparison of two data sets?	0.9999968	34308477	Drawing a 100x100 contour plot depicting R2 (Rsquared) values using R	rplotcontour	34315829	"<p>Here is an example how you might solve this kind of problem. I've made an assumption on how to calculate R2, but that's easily fixable if it's wrong.</p>

<p>First, we simulate some data</p>

<pre><code>set.seed(123)
n_band=100
dat &lt;- data.frame(matrix(runif(28*n_band),ncol=n_band))
colnames(dat) &lt;- paste0(""b"",1:n_band)
dat$biomass &lt;- rpois(28,10)
dat$nitrogen &lt;- rpois(28,10)
dat$ID &lt;- 1:28
</code></pre>

<p>Then, we observe that for each combination of band1, band2 and outcome we only need to store one number (R2). So, first we generate a dataframe containing all combinations of column names as string:</p>

<pre><code>res &lt;- expand.grid(paste0(""b"",1:n_band),paste0(""b"",1:n_band),outcome=c(""biomass"",""nitrogen""))
</code></pre>

<p>Then we use apply to get the R2 for each row of res (thus each combination). As each row of res contains three column names, we can use those to access the original data.</p>

<pre><code>#ignore warnings; correlation between similar variables is missing
res$R2 &lt;- apply(res, MARGIN=1,FUN=function(x){
  return(cor(dat[,x[1]]/dat[,x[2]],dat[,x[3]])^2)
})
</code></pre>

<p>Then plotting is simple:</p>

<pre><code>library(ggplot2)
p1 &lt;- ggplot(res, aes(x=Var1, y=Var2, fill=R2))+
  geom_tile() +
  facet_grid(~outcome)
p1
</code></pre>"	"<p>Here is an example how you might solve this kind of problem. I've made an assumption on how to calculate R2, but that's easily fixable if it's wrong.</p>

<p>First, we simulate some data</p>

<pre><code>set.seed(123)
n_band=100
dat &lt;- data.frame(matrix(runif(28*n_band),ncol=n_band))
colnames(dat) &lt;- paste0(""b"",1:n_band)
dat$biomass &lt;- rpois(28,10)
dat$nitrogen &lt;- rpois(28,10)
dat$ID &lt;- 1:28
</code></pre>

<p>Then, we observe that for each combination of band1, band2 and outcome we only need to store one number (R2). So, first we generate a dataframe containing all combinations of column names as string:</p>

<pre><code>res &lt;- expand.grid(paste0(""b"",1:n_band),paste0(""b"",1:n_band),outcome=c(""biomass"",""nitrogen""))
</code></pre>

<p>Then we use apply to get the R2 for each row of res (thus each combination). As each row of res contains three column names, we can use those to access the original data.</p>

<pre><code>#ignore warnings; correlation between similar variables is missing
res$R2 &lt;- apply(res, MARGIN=1,FUN=function(x){
  return(cor(dat[,x[1]]/dat[,x[2]],dat[,x[3]])^2)
})
</code></pre>

<p>Then plotting is simple:</p>

<pre><code>library(ggplot2)
p1 &lt;- ggplot(res, aes(x=Var1, y=Var2, fill=R2))+
  geom_tile() +
  facet_grid(~outcome)
p1
</code></pre>"	 Here is an example how you might solve this kind of problem. I've made an assumption on how to calculate R2, but that's easily fixable if it's wrong. First, we simulate some data Then, we observe that for each combination of band1, band2 and outcome we only need to store one number (R2). So, first we generate a dataframe containing all combinations of column names as string: Then we use apply to get the R2 for each row of res (thus each combination). As each row of res contains three column names, we can use those to access the original data. Then plotting is simple:
new_qs_22k.csv	How can I plot a comparison of two data sets?	0.9999968	44076215	MATLAB plot's MarkerIndices property	matlabplotmarkers	44076341	"<p><strong><a href=""https://www.mathworks.com/help/matlab/creating_plots/create-line-plot-with-markers.html"" rel=""nofollow noreferrer""><em><code>MarkerIndices</code></em></a></strong> became available in <em>R2016b</em> version.</p>

<p>The workaround is plotting two times:</p>

<pre><code>MarkerIndices = [1, 5, 10];
myplot = plot(x, y, 'b-.');
hold on;                 
mymarkers = plot(x(MarkerIndices), y(MarkerIndices), 'ro');    
legend(myplot)
</code></pre>

<p>This should work. I commented that this is in reference to a post on MathWorks Community. Will provide a link if found it.</p>

<p>P.S. This is the <strong><a href=""https://www.mathworks.com/matlabcentral/answers/119402-how-to-set-a-marker-at-one-specific-point-on-a-plot-look-at-the-picture"" rel=""nofollow noreferrer"">LINK</a></strong> to the answer;</p>"	"<p><strong><a href=""https://www.mathworks.com/help/matlab/creating_plots/create-line-plot-with-markers.html"" rel=""nofollow noreferrer""><em><code>MarkerIndices</code></em></a></strong> became available in <em>R2016b</em> version.</p>

<p>The workaround is plotting two times:</p>

<pre><code>MarkerIndices = [1, 5, 10];
myplot = plot(x, y, 'b-.');
hold on;                 
mymarkers = plot(x(MarkerIndices), y(MarkerIndices), 'ro');    
legend(myplot)
</code></pre>

<p>This should work. I commented that this is in reference to a post on MathWorks Community. Will provide a link if found it.</p>

<p>P.S. This is the <strong><a href=""https://www.mathworks.com/matlabcentral/answers/119402-how-to-set-a-marker-at-one-specific-point-on-a-plot-look-at-the-picture"" rel=""nofollow noreferrer"">LINK</a></strong> to the answer;</p>"	 became available in R2016b version. The workaround is plotting two times: This should work. I commented that this is in reference to a post on MathWorks Community. Will provide a link if found it. P.S. This is the LINK to the answer;
new_qs_22k.csv	How can I plot a comparison of two data sets?	0.9999968	40306749	plot log-scale and linear scale functions and histograms on same canvas	pythonmatplotlib	40307024	"<p>If I understand correctly, you want to plot two data sets in the same figure, on the same x-axis, but one on a log y-scale and one on a linear y-scale.  You can do this using <a href=""http://matplotlib.org/examples/api/two_scales.html"" rel=""nofollow""><code>twinx</code></a>:</p>

<pre><code>fig, ax = plt.subplots()
ax.hist(h,bins=21,normed=True,log=True)
ax2 = ax.twinx()
ax2.plot(xvals, loggauss(xvals), '-r')
</code></pre>

<p><img src=""https://i.stack.imgur.com/j1pK0.png"" alt=""Figure""></p>"	"<p>If I understand correctly, you want to plot two data sets in the same figure, on the same x-axis, but one on a log y-scale and one on a linear y-scale.  You can do this using <a href=""http://matplotlib.org/examples/api/two_scales.html"" rel=""nofollow""><code>twinx</code></a>:</p>

<pre><code>fig, ax = plt.subplots()
ax.hist(h,bins=21,normed=True,log=True)
ax2 = ax.twinx()
ax2.plot(xvals, loggauss(xvals), '-r')
</code></pre>

<p><img src=""https://i.stack.imgur.com/j1pK0.png"" alt=""Figure""></p>"	 If I understand correctly, you want to plot two data sets in the same figure, on the same x-axis, but one on a log y-scale and one on a linear y-scale.  You can do this using :
new_qs_22k.csv	How can I plot a comparison of two data sets?	0.99999666	37547404	Legend for two aesthetics and geom_abline in ggplot2	rggplot2	37547784	"<p>One way is to combine your two predicted lines into one data frame with an extra column indicating which model each row belongs to.</p>

<pre><code># Add model = 'A' to this data frame (I may have got A and B the wrong way round)
   linha &lt;- data.frame(x = log10(seq(1,25000,100)),
                       y = log10(predict(modelo_nls,newdata=data.frame(Area=seq(1,25000,100)))),
                       model = 'A')

# Make data frame of line from modelo
lin2 &lt;- data.frame(x = log10(seq(1,25000,100)), 
                   y = predict(modelo, newdata = list(Area = seq(1,25000,100))), 
                   model = 'B')

# Combine two models
combinedLines &lt;- rbind(linha, lin2)
</code></pre>

<p>Then plot with model as an aesthetic </p>

<pre><code>ggplot(data=exemplo,aes(x=log10(Area),y=log10(Species)) )  + geom_point() +
geom_line(data=combinedLines, aes(x=x,y=y, linetype = model))+        
xlab(label=""Área(ha)"") + ylab(label=""Número de espécies"")
</code></pre>

<p><a href=""https://i.stack.imgur.com/ssMSx.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/ssMSx.png"" alt=""enter image description here""></a></p>"	"<p>One way is to combine your two predicted lines into one data frame with an extra column indicating which model each row belongs to.</p>

<pre><code># Add model = 'A' to this data frame (I may have got A and B the wrong way round)
   linha &lt;- data.frame(x = log10(seq(1,25000,100)),
                       y = log10(predict(modelo_nls,newdata=data.frame(Area=seq(1,25000,100)))),
                       model = 'A')

# Make data frame of line from modelo
lin2 &lt;- data.frame(x = log10(seq(1,25000,100)), 
                   y = predict(modelo, newdata = list(Area = seq(1,25000,100))), 
                   model = 'B')

# Combine two models
combinedLines &lt;- rbind(linha, lin2)
</code></pre>

<p>Then plot with model as an aesthetic </p>

<pre><code>ggplot(data=exemplo,aes(x=log10(Area),y=log10(Species)) )  + geom_point() +
geom_line(data=combinedLines, aes(x=x,y=y, linetype = model))+        
xlab(label=""Área(ha)"") + ylab(label=""Número de espécies"")
</code></pre>

<p><a href=""https://i.stack.imgur.com/ssMSx.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/ssMSx.png"" alt=""enter image description here""></a></p>"	 One way is to combine your two predicted lines into one data frame with an extra column indicating which model each row belongs to. Then plot with model as an aesthetic
new_qs_22k.csv	How can I create a chart without coding?	0.999997	18029880	graph api retrieves list of users name where name is like given text in ios	iphoneiosfacebookfacebook-graph-apiios5	18031747	"<p>Hi Friend i solved my problem.i used this coding to get next 25 result.</p>

<pre><code>FbGraphResponse *next_page_fb_graph_response = [fbGraph doGraphGetWithUrlString:next_page_url];
</code></pre>

<p>And i have another one issue. if i searched in facebook i got all user name which are not allowed public search.</p>

<p>But in fb graph api i tried to get users name it is not showing which are not allowed public search.</p>

<p>any one resolve this issue?</p>"	"<p>Hi Friend i solved my problem.i used this coding to get next 25 result.</p>

<pre><code>FbGraphResponse *next_page_fb_graph_response = [fbGraph doGraphGetWithUrlString:next_page_url];
</code></pre>

<p>And i have another one issue. if i searched in facebook i got all user name which are not allowed public search.</p>

<p>But in fb graph api i tried to get users name it is not showing which are not allowed public search.</p>

<p>any one resolve this issue?</p>"	 Hi Friend i solved my problem.i used this coding to get next 25 result. And i have another one issue. if i searched in facebook i got all user name which are not allowed public search. But in fb graph api i tried to get users name it is not showing which are not allowed public search. any one resolve this issue?
new_qs_22k.csv	How can I create a chart without coding?	0.999997	41913246	How to drag'n'drop on a scatter chart	javajavafxchartsdrag-and-dropscatter	41924515	"<p>So, to publish the code in answer, if maybe it will be useful for someone a day :
In the initialize method of my controller : </p>

<pre><code>chart.getData().get(0).getData().forEach(data-&gt;new DnDToMoveData(data));
</code></pre>

<p>So DnDtoMoveData is an intern class, and this what it looks like :</p>

<pre><code>public class DnDToMoveData{
    double pressPositionX;
    double pressPositionY;

    DnDToMoveData(Data&lt;Number, Number&gt; data){
        data.getNode().setOnMousePressed(event-&gt;{
            pressPositionX = event.getSceneX();
            pressPositionY = chart.getHeight()-event.getSceneY();  
        });

        data.getNode().setOnMouseDragged(event-&gt;{
            data.setXValue(data.getXValue().doubleValue()+event.getSceneX())
            this.pressPositionX);
            data.setYValue(data.getYValue().doubleValue()+event.getSceneY())-this.pressPositionY);

            pressPositionX = event.getSceneX();
            pressPositionY = chart.getHeight()-event.getSceneY();
         });
    }
}
</code></pre>

<p>So i have implemented 2 methods, onClick to get the starting point of the event, and then move the point depending on the event's location
There is some improvements to do, because the distance in pixel of the event does not match with the scale of the chart so it makes bad things, but in fact it works</p>"	"<p>So, to publish the code in answer, if maybe it will be useful for someone a day :
In the initialize method of my controller : </p>

<pre><code>chart.getData().get(0).getData().forEach(data-&gt;new DnDToMoveData(data));
</code></pre>

<p>So DnDtoMoveData is an intern class, and this what it looks like :</p>

<pre><code>public class DnDToMoveData{
    double pressPositionX;
    double pressPositionY;

    DnDToMoveData(Data&lt;Number, Number&gt; data){
        data.getNode().setOnMousePressed(event-&gt;{
            pressPositionX = event.getSceneX();
            pressPositionY = chart.getHeight()-event.getSceneY();  
        });

        data.getNode().setOnMouseDragged(event-&gt;{
            data.setXValue(data.getXValue().doubleValue()+event.getSceneX())
            this.pressPositionX);
            data.setYValue(data.getYValue().doubleValue()+event.getSceneY())-this.pressPositionY);

            pressPositionX = event.getSceneX();
            pressPositionY = chart.getHeight()-event.getSceneY();
         });
    }
}
</code></pre>

<p>So i have implemented 2 methods, onClick to get the starting point of the event, and then move the point depending on the event's location
There is some improvements to do, because the distance in pixel of the event does not match with the scale of the chart so it makes bad things, but in fact it works</p>"	" So, to publish the code in answer, if maybe it will be useful for someone a day :
In the initialize method of my controller : So DnDtoMoveData is an intern class, and this what it looks like : So i have implemented 2 methods, onClick to get the starting point of the event, and then move the point depending on the event's location
There is some improvements to do, because the distance in pixel of the event does not match with the scale of the chart so it makes bad things, but in fact it works"
new_qs_22k.csv	How can I create a chart without coding?	0.9999969	5093733	JFreechart & Servlet: How to compute datapoint from mouse position	javaservletsjfreechart	5142623	"<p>I think I have found a solution. For the solution I need to get my chart again,
so I either have to create it a new or to save it somehow. But when I have a reference
to that chart the solution is as following:</p>

<pre><code>
JFreeChart chart = functionWhichRetrievesTheChart();
ChartRenderingInfo info = new ChartRenderingInfo();
// PLOT_SIZE is the size if the graph and has to be the same size as the original drawn chart.createBufferedImage(PLOT_SIZE, PLOT_SIZE, info); 
graph, otherwise the pixel position points to somewhere else
PlotRenderingInfo plotInfo = info.getPlotInfo();


XYPlot plot = (XYPlot)chart.getPlot();
Point p = new Point(x,y); // x and y are the pixel positions

// this is the domain value which belongs to the pixel position x
double domain = plot.getDomainAxis().java2DToValue(p.getX(), plotInfo.getDataArea(), plot.getDomainAxisEdge()); 

// this is the range value which belongs to the pixel position y
double range = plot.getRangeAxis().java2DToValue(p.getY(), plotInfo.getDataArea(), plot.getRangeAxisEdge());
</code></pre>"	"<p>I think I have found a solution. For the solution I need to get my chart again,
so I either have to create it a new or to save it somehow. But when I have a reference
to that chart the solution is as following:</p>

<pre><code>
JFreeChart chart = functionWhichRetrievesTheChart();
ChartRenderingInfo info = new ChartRenderingInfo();
// PLOT_SIZE is the size if the graph and has to be the same size as the original drawn chart.createBufferedImage(PLOT_SIZE, PLOT_SIZE, info); 
graph, otherwise the pixel position points to somewhere else
PlotRenderingInfo plotInfo = info.getPlotInfo();


XYPlot plot = (XYPlot)chart.getPlot();
Point p = new Point(x,y); // x and y are the pixel positions

// this is the domain value which belongs to the pixel position x
double domain = plot.getDomainAxis().java2DToValue(p.getX(), plotInfo.getDataArea(), plot.getDomainAxisEdge()); 

// this is the range value which belongs to the pixel position y
double range = plot.getRangeAxis().java2DToValue(p.getY(), plotInfo.getDataArea(), plot.getRangeAxisEdge());
</code></pre>"	" I think I have found a solution. For the solution I need to get my chart again,
so I either have to create it a new or to save it somehow. But when I have a reference
to that chart the solution is as following:"
new_qs_22k.csv	How can I create a chart without coding?	0.9999969	28710269	How can I change the Chart Title in an Access report with VBA?	vbams-accesseventscharts	28756367	"<p>I found the answer here:<br>
<a href=""https://stackoverflow.com/questions/27113380/modify-chart-properties-in-access-report-via-vba-error-2771"">Modify Chart properties in Access report via VBA (error 2771)</a></p>

<p>First I copied the chart from a report to a form and tested the code to change the title. That worked.<br>
Then I tried to run the code with the open or load event in the report and I always received an error. I googled that error and found the article above and that was the solution.<br>
I just added a button to the report and added the line</p>

<pre><code>Me.Command1.SetFocus
</code></pre>

<p>at the beginning of my code.<br>
Now I can run the code from Report_Load() or Report_Open(). It works for both.
Problem solved.</p>"	"<p>I found the answer here:<br>
<a href=""https://stackoverflow.com/questions/27113380/modify-chart-properties-in-access-report-via-vba-error-2771"">Modify Chart properties in Access report via VBA (error 2771)</a></p>

<p>First I copied the chart from a report to a form and tested the code to change the title. That worked.<br>
Then I tried to run the code with the open or load event in the report and I always received an error. I googled that error and found the article above and that was the solution.<br>
I just added a button to the report and added the line</p>

<pre><code>Me.Command1.SetFocus
</code></pre>

<p>at the beginning of my code.<br>
Now I can run the code from Report_Load() or Report_Open(). It works for both.
Problem solved.</p>"	" I found the answer here: Modify Chart properties in Access report via VBA (error 2771) First I copied the chart from a report to a form and tested the code to change the title. That worked. Then I tried to run the code with the open or load event in the report and I always received an error. I googled that error and found the article above and that was the solution. I just added a button to the report and added the line at the beginning of my code. Now I can run the code from Report_Load() or Report_Open(). It works for both.
Problem solved."
new_qs_22k.csv	How can I create a chart without coding?	0.9999969	30346336	How to display Multiple Highchart in single page	jqueryjsphighcharts	30376942	"<p>Finally after working 30 hours I figured it out how to do that.</p>

<ol>
<li>To divide the page the best option is to use the <code>bootstrap css</code> its
easy and gives you great flexibility.</li>
<li>To display the chart I have used <code>High-chart</code> its a open source and
good.</li>
</ol>

<p>Now how do we do that.
First I have divide the page using  tag with predefined bootstrap css classes <code>col-md-6</code>. it means it divide the hole screen in two column. if you do not know about this learn <code>bootstrap css grid system</code> Link  <a href=""http://getbootstrap.com/examples/grid/"" rel=""nofollow noreferrer"">Bootstrap css grid</a>.</p>

<p><strong>This is how I am dividing the screen two column two row with <code>&lt;div&gt;</code> tag</strong></p>

<p><strong><em>At every <code>&lt;div id=""#""&gt;</code> I would display the high chart.</em></strong>
<div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""false"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;div class=""container""&gt;
   &lt;h1 align=""center""&gt;&lt;a href =""#""&gt;Different charts in one page&lt;/a&gt;&lt;/h1&gt;
   &lt;!--First chart--&gt;
     &lt;div class=""col-md-6""&gt;  
      &lt;div id=""pie"" style=""min-width: 300px; height: 300px; margin: 30 auto""&gt;&lt;/div&gt; 
       
     &lt;/div&gt;
    &lt;!--Second chart--&gt;
     &lt;div class=""col-md-6""&gt;
      &lt;div id=""bar"" style=""min-width: 400px; height: 400px; margin: 30 auto""&gt;&lt;/div&gt;
     &lt;/div&gt;
    &lt;!--Third chart--&gt;
     &lt;div class=""col-md-6""&gt;
      &lt;div id=""Stacked"" style=""min-width: 400px; height: 300px; margin: 30 auto""&gt;&lt;/div&gt;
     &lt;/div&gt;
    &lt;!--Fourth chart--&gt;
     &lt;div class=""col-md-6""&gt;
      &lt;div id=""line"" style=""min-width: 600px; height: 300px; margin: 30 auto""&gt;&lt;/div&gt;
     &lt;/div&gt;
    &lt;!--End of charts--&gt;
  &lt;/div&gt;&lt;!--for container div--&gt;</code></pre>
</div>
</div>
</p>

<p><strong>Here is full code</strong> </p>

<p>Make sure you include the <code>HighChart</code> <code>js</code></p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""false"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;!DOCKTYPE html&gt;
&lt;html&gt;
 &lt;head&gt;
  &lt;meta charset=""utf-8""&gt;
  &lt;title&gt;final&lt;/title&gt;
  &lt;!--Bootstrap source start--&gt;
  &lt;link rel=""stylesheet"" type=""text/css"" href=""css/bootstrap.css""&gt;
  &lt;link rel=""stylesheet"" type=""text/css"" href=""css/bootstrap.min.css""&gt;
  &lt;!--Bootstrap source end--&gt;
  
  &lt;!--highchart source start--&gt;
 &lt;script type=""text/javascript"" src=""http://ajax.googleapis.com/ajax/libs/jquery/1.8.2/jquery.min.js""&gt;&lt;/script&gt;
 &lt;script src=""C:\Users\Global Soft\Desktop\HighChart\js\highcharts.js"" type=""text/javascript""&gt;&lt;/script&gt;
 &lt;script src=""http://code.highcharts.com/modules/exporting.js"" type=""text/javascript""&gt;&lt;/script&gt;   
  
  
  &lt;style type=""text/css""&gt;
   ${demo.css}
  &lt;/style&gt;
  
  &lt;!--Pie Chart starts here--&gt;
  &lt;script type=""text/javascript""&gt;
$(function (){
   var pieChart;
   $(document).ready(function(){
    pieChart=new Highcharts.Chart({
     chart: {
      renderTo: 'pie',
      plotBackgroundColor: null,
      plotBorderWidth: null,
      plotShadow: false
     },
                
     title: {
      text: 'Browser market shares at a specific website, 2014'
     },
     
     subtitle:{
      text: ' Pie Chart'
     },
     tooltip: {
      pointFormat: '{series.name}: &lt;b&gt;{point.percentage:.1f}%&lt;/b&gt;'
     },
     plotOptions: {
      pie: {
       allowPointSelect: true,
       cursor: 'pointer',
       dataLabels: {
        enabled: false
       },
       showInLegend: true
      }
     },
     
     series: [{
      type: 'pie',
      name: 'Browser share',
      data: [
       ['Firefox',   45.0],
       ['IE',       26.8],
       {
        name: 'Chrome',
        y: 12.8,
        sliced: true,
        selected: true
       },
       ['Safari',    8.5],
       ['Opera',     6.2],
       ['Others',   0.7]
      ]
     }]
    
     
   });
   
  }); 
  &lt;!--Pie chart ends here--&gt;
  
  
  &lt;!--bar stacked chart start here--&gt;
  $('#Stacked').highcharts({
        chart: {
            type: 'bar'
        },
        title: {
            text: 'Stacked bar chart'
        },
        xAxis: {
            categories: ['Apples', 'Oranges', 'Pears', 'Grapes', 'Bananas']
        },
        yAxis: {
            min: 0,
            title: {
                text: 'Total fruit consumption'
            }
        },
        legend: {
            reversed: true
        },
        plotOptions: {
            series: {
                stacking: 'normal'
            }
        },
        series: [{
            name: 'John',
            data: [5, 3, 4, 7, 2]
        }, {
            name: 'Jane',
            data: [2, 2, 3, 2, 1]
        }, {
            name: 'Joe',
            data: [3, 4, 4, 2, 5]
        }]
    });
  &lt;!--bar stacked chart end here  --&gt;
  
  &lt;!--bar chart start here--&gt;
    $('#bar').highcharts({
        chart: {
            type: 'bar'
        },
        title: {
            text: 'Historic World Population by Region'
        },
        subtitle: {
            text: 'Source: Wikipedia.org'
        },
        xAxis: {
            categories: ['Africa', 'America', 'Asia', 'Europe', 'Oceania'],
            title: {
                text: null
            }
        },
        yAxis: {
            min: 0,
            title: {
                text: 'Population (millions)',
                align: 'high'
            },
            labels: {
                overflow: 'justify'
            }
        },
        tooltip: {
            valueSuffix: ' millions'
        },
        plotOptions: {
            bar: {
                dataLabels: {
                    enabled: true
                }
            }
        },
        legend: {
            layout: 'horizontal',
            align: 'right',
            verticalAlign: 'top',
            x: -40,
            y: 100,
            floating: true,
            borderWidth: 1,
            backgroundColor: ((Highcharts.theme &amp;&amp; Highcharts.theme.legendBackgroundColor) || '#FFFFFF'),
            shadow: true
        },
        credits: {
            enabled: false
        },
        series: [{
            name: 'Year 1800',
            data: [107, 31, 635, 203, 2]
        }, {
            name: 'Year 1900',
            data: [133, 156, 947, 408, 6]
        }, {
            name: 'Year 2008',
            data: [973, 914, 4054, 732, 34]
        }]
    });
 
  &lt;!--bar chart start here--&gt;
  
  &lt;!--Line chart start here--&gt;
  $('#line').highcharts({
        title: {
            text: 'Monthly Average Temperature',
            x: -20 //center
        },
        subtitle: {
            text: 'Source: WorldClimate.com',
            x: -20
        },
        xAxis: {
            categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun',
                'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']
        },
        yAxis: {
            title: {
                text: 'Temperature (°C)'
            },
            plotLines: [{
                value: 0,
                width: 1,
                color: '#808080'
            }]
        },
        tooltip: {
            valueSuffix: '°C'
        },
        legend: {
            layout: 'horizontal',
            align: 'center',
            verticalAlign: 'bottom',
            borderWidth: 0
        },
        series: [{
            name: 'Tokyo',
            data: [7.0, 6.9, 9.5, 14.5, 18.2, 21.5, 25.2, 26.5, 23.3, 18.3, 13.9, 9.6]
        }, {
            name: 'New York',
            data: [-0.2, 0.8, 5.7, 11.3, 17.0, 22.0, 24.8, 24.1, 20.1, 14.1, 8.6, 2.5]
        }, {
            name: 'Berlin',
            data: [-0.9, 0.6, 3.5, 8.4, 13.5, 17.0, 18.6, 17.9, 14.3, 9.0, 3.9, 1.0]
        }, {
            name: 'London',
            data: [3.9, 4.2, 5.7, 8.5, 11.9, 15.2, 17.0, 16.6, 14.2, 10.3, 6.6, 4.8]
        }]
    });
 
 &lt;!--Line chart ends here--&gt;
  
  

});&lt;!--This is for the main function--&gt;






 &lt;/script&gt;
      

  &lt;!--Charts end here--&gt;

  
 &lt;/head&gt;
 
 &lt;body&gt;
  
  &lt;div class=""container""&gt;
   &lt;h1 align=""center""&gt;&lt;a href =""#""&gt;Different charts in one page&lt;/a&gt;&lt;/h1&gt;
   &lt;!--First chart--&gt;
     &lt;div class=""col-md-6""&gt;  
      &lt;div id=""pie"" style=""min-width: 300px; height: 300px; margin: 30 auto""&gt;&lt;/div&gt; 
       
     &lt;/div&gt;
    &lt;!--Second chart--&gt;
     &lt;div class=""col-md-6""&gt;
      &lt;div id=""bar"" style=""min-width: 400px; height: 400px; margin: 30 auto""&gt;&lt;/div&gt;
     &lt;/div&gt;
    &lt;!--Third chart--&gt;
     &lt;div class=""col-md-6""&gt;
      &lt;div id=""Stacked"" style=""min-width: 400px; height: 300px; margin: 30 auto""&gt;&lt;/div&gt;
     &lt;/div&gt;
    &lt;!--Fourth chart--&gt;
     &lt;div class=""col-md-6""&gt;
      &lt;div id=""line"" style=""min-width: 600px; height: 300px; margin: 30 auto""&gt;&lt;/div&gt;
     &lt;/div&gt;
    &lt;!--End of charts--&gt;
  &lt;/div&gt;&lt;!--for container div--&gt;
 &lt;/body&gt;
&lt;/html&gt;</code></pre>
</div>
</div>
</p>

<p><strong><em>OutPut</em></strong></p>

<p><img src=""https://i.stack.imgur.com/F9dsL.jpg"" alt=""enter image description here""></p>

<p>When you stuck some where its really frustrating..but after lot of struggle and hard work when you achieve it, 
Then the feeling is <code>awesomeeeeeeeeeeeeeeeeeeeeee</code>.</p>"	"<p>Finally after working 30 hours I figured it out how to do that.</p>

<ol>
<li>To divide the page the best option is to use the <code>bootstrap css</code> its
easy and gives you great flexibility.</li>
<li>To display the chart I have used <code>High-chart</code> its a open source and
good.</li>
</ol>

<p>Now how do we do that.
First I have divide the page using  tag with predefined bootstrap css classes <code>col-md-6</code>. it means it divide the hole screen in two column. if you do not know about this learn <code>bootstrap css grid system</code> Link  <a href=""http://getbootstrap.com/examples/grid/"" rel=""nofollow noreferrer"">Bootstrap css grid</a>.</p>

<p><strong>This is how I am dividing the screen two column two row with <code>&lt;div&gt;</code> tag</strong></p>

<p><strong><em>At every <code>&lt;div id=""#""&gt;</code> I would display the high chart.</em></strong>
<div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""false"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;div class=""container""&gt;
   &lt;h1 align=""center""&gt;&lt;a href =""#""&gt;Different charts in one page&lt;/a&gt;&lt;/h1&gt;
   &lt;!--First chart--&gt;
     &lt;div class=""col-md-6""&gt;  
      &lt;div id=""pie"" style=""min-width: 300px; height: 300px; margin: 30 auto""&gt;&lt;/div&gt; 
       
     &lt;/div&gt;
    &lt;!--Second chart--&gt;
     &lt;div class=""col-md-6""&gt;
      &lt;div id=""bar"" style=""min-width: 400px; height: 400px; margin: 30 auto""&gt;&lt;/div&gt;
     &lt;/div&gt;
    &lt;!--Third chart--&gt;
     &lt;div class=""col-md-6""&gt;
      &lt;div id=""Stacked"" style=""min-width: 400px; height: 300px; margin: 30 auto""&gt;&lt;/div&gt;
     &lt;/div&gt;
    &lt;!--Fourth chart--&gt;
     &lt;div class=""col-md-6""&gt;
      &lt;div id=""line"" style=""min-width: 600px; height: 300px; margin: 30 auto""&gt;&lt;/div&gt;
     &lt;/div&gt;
    &lt;!--End of charts--&gt;
  &lt;/div&gt;&lt;!--for container div--&gt;</code></pre>
</div>
</div>
</p>

<p><strong>Here is full code</strong> </p>

<p>Make sure you include the <code>HighChart</code> <code>js</code></p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""false"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;!DOCKTYPE html&gt;
&lt;html&gt;
 &lt;head&gt;
  &lt;meta charset=""utf-8""&gt;
  &lt;title&gt;final&lt;/title&gt;
  &lt;!--Bootstrap source start--&gt;
  &lt;link rel=""stylesheet"" type=""text/css"" href=""css/bootstrap.css""&gt;
  &lt;link rel=""stylesheet"" type=""text/css"" href=""css/bootstrap.min.css""&gt;
  &lt;!--Bootstrap source end--&gt;
  
  &lt;!--highchart source start--&gt;
 &lt;script type=""text/javascript"" src=""http://ajax.googleapis.com/ajax/libs/jquery/1.8.2/jquery.min.js""&gt;&lt;/script&gt;
 &lt;script src=""C:\Users\Global Soft\Desktop\HighChart\js\highcharts.js"" type=""text/javascript""&gt;&lt;/script&gt;
 &lt;script src=""http://code.highcharts.com/modules/exporting.js"" type=""text/javascript""&gt;&lt;/script&gt;   
  
  
  &lt;style type=""text/css""&gt;
   ${demo.css}
  &lt;/style&gt;
  
  &lt;!--Pie Chart starts here--&gt;
  &lt;script type=""text/javascript""&gt;
$(function (){
   var pieChart;
   $(document).ready(function(){
    pieChart=new Highcharts.Chart({
     chart: {
      renderTo: 'pie',
      plotBackgroundColor: null,
      plotBorderWidth: null,
      plotShadow: false
     },
                
     title: {
      text: 'Browser market shares at a specific website, 2014'
     },
     
     subtitle:{
      text: ' Pie Chart'
     },
     tooltip: {
      pointFormat: '{series.name}: &lt;b&gt;{point.percentage:.1f}%&lt;/b&gt;'
     },
     plotOptions: {
      pie: {
       allowPointSelect: true,
       cursor: 'pointer',
       dataLabels: {
        enabled: false
       },
       showInLegend: true
      }
     },
     
     series: [{
      type: 'pie',
      name: 'Browser share',
      data: [
       ['Firefox',   45.0],
       ['IE',       26.8],
       {
        name: 'Chrome',
        y: 12.8,
        sliced: true,
        selected: true
       },
       ['Safari',    8.5],
       ['Opera',     6.2],
       ['Others',   0.7]
      ]
     }]
    
     
   });
   
  }); 
  &lt;!--Pie chart ends here--&gt;
  
  
  &lt;!--bar stacked chart start here--&gt;
  $('#Stacked').highcharts({
        chart: {
            type: 'bar'
        },
        title: {
            text: 'Stacked bar chart'
        },
        xAxis: {
            categories: ['Apples', 'Oranges', 'Pears', 'Grapes', 'Bananas']
        },
        yAxis: {
            min: 0,
            title: {
                text: 'Total fruit consumption'
            }
        },
        legend: {
            reversed: true
        },
        plotOptions: {
            series: {
                stacking: 'normal'
            }
        },
        series: [{
            name: 'John',
            data: [5, 3, 4, 7, 2]
        }, {
            name: 'Jane',
            data: [2, 2, 3, 2, 1]
        }, {
            name: 'Joe',
            data: [3, 4, 4, 2, 5]
        }]
    });
  &lt;!--bar stacked chart end here  --&gt;
  
  &lt;!--bar chart start here--&gt;
    $('#bar').highcharts({
        chart: {
            type: 'bar'
        },
        title: {
            text: 'Historic World Population by Region'
        },
        subtitle: {
            text: 'Source: Wikipedia.org'
        },
        xAxis: {
            categories: ['Africa', 'America', 'Asia', 'Europe', 'Oceania'],
            title: {
                text: null
            }
        },
        yAxis: {
            min: 0,
            title: {
                text: 'Population (millions)',
                align: 'high'
            },
            labels: {
                overflow: 'justify'
            }
        },
        tooltip: {
            valueSuffix: ' millions'
        },
        plotOptions: {
            bar: {
                dataLabels: {
                    enabled: true
                }
            }
        },
        legend: {
            layout: 'horizontal',
            align: 'right',
            verticalAlign: 'top',
            x: -40,
            y: 100,
            floating: true,
            borderWidth: 1,
            backgroundColor: ((Highcharts.theme &amp;&amp; Highcharts.theme.legendBackgroundColor) || '#FFFFFF'),
            shadow: true
        },
        credits: {
            enabled: false
        },
        series: [{
            name: 'Year 1800',
            data: [107, 31, 635, 203, 2]
        }, {
            name: 'Year 1900',
            data: [133, 156, 947, 408, 6]
        }, {
            name: 'Year 2008',
            data: [973, 914, 4054, 732, 34]
        }]
    });
 
  &lt;!--bar chart start here--&gt;
  
  &lt;!--Line chart start here--&gt;
  $('#line').highcharts({
        title: {
            text: 'Monthly Average Temperature',
            x: -20 //center
        },
        subtitle: {
            text: 'Source: WorldClimate.com',
            x: -20
        },
        xAxis: {
            categories: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun',
                'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec']
        },
        yAxis: {
            title: {
                text: 'Temperature (°C)'
            },
            plotLines: [{
                value: 0,
                width: 1,
                color: '#808080'
            }]
        },
        tooltip: {
            valueSuffix: '°C'
        },
        legend: {
            layout: 'horizontal',
            align: 'center',
            verticalAlign: 'bottom',
            borderWidth: 0
        },
        series: [{
            name: 'Tokyo',
            data: [7.0, 6.9, 9.5, 14.5, 18.2, 21.5, 25.2, 26.5, 23.3, 18.3, 13.9, 9.6]
        }, {
            name: 'New York',
            data: [-0.2, 0.8, 5.7, 11.3, 17.0, 22.0, 24.8, 24.1, 20.1, 14.1, 8.6, 2.5]
        }, {
            name: 'Berlin',
            data: [-0.9, 0.6, 3.5, 8.4, 13.5, 17.0, 18.6, 17.9, 14.3, 9.0, 3.9, 1.0]
        }, {
            name: 'London',
            data: [3.9, 4.2, 5.7, 8.5, 11.9, 15.2, 17.0, 16.6, 14.2, 10.3, 6.6, 4.8]
        }]
    });
 
 &lt;!--Line chart ends here--&gt;
  
  

});&lt;!--This is for the main function--&gt;






 &lt;/script&gt;
      

  &lt;!--Charts end here--&gt;

  
 &lt;/head&gt;
 
 &lt;body&gt;
  
  &lt;div class=""container""&gt;
   &lt;h1 align=""center""&gt;&lt;a href =""#""&gt;Different charts in one page&lt;/a&gt;&lt;/h1&gt;
   &lt;!--First chart--&gt;
     &lt;div class=""col-md-6""&gt;  
      &lt;div id=""pie"" style=""min-width: 300px; height: 300px; margin: 30 auto""&gt;&lt;/div&gt; 
       
     &lt;/div&gt;
    &lt;!--Second chart--&gt;
     &lt;div class=""col-md-6""&gt;
      &lt;div id=""bar"" style=""min-width: 400px; height: 400px; margin: 30 auto""&gt;&lt;/div&gt;
     &lt;/div&gt;
    &lt;!--Third chart--&gt;
     &lt;div class=""col-md-6""&gt;
      &lt;div id=""Stacked"" style=""min-width: 400px; height: 300px; margin: 30 auto""&gt;&lt;/div&gt;
     &lt;/div&gt;
    &lt;!--Fourth chart--&gt;
     &lt;div class=""col-md-6""&gt;
      &lt;div id=""line"" style=""min-width: 600px; height: 300px; margin: 30 auto""&gt;&lt;/div&gt;
     &lt;/div&gt;
    &lt;!--End of charts--&gt;
  &lt;/div&gt;&lt;!--for container div--&gt;
 &lt;/body&gt;
&lt;/html&gt;</code></pre>
</div>
</div>
</p>

<p><strong><em>OutPut</em></strong></p>

<p><img src=""https://i.stack.imgur.com/F9dsL.jpg"" alt=""enter image description here""></p>

<p>When you stuck some where its really frustrating..but after lot of struggle and hard work when you achieve it, 
Then the feeling is <code>awesomeeeeeeeeeeeeeeeeeeeeee</code>.</p>"	" Finally after working 30 hours I figured it out how to do that. To divide the page the best option is to use the its
easy and gives you great flexibility. To display the chart I have used its a open source and
good. Now how do we do that.
First I have divide the page using  tag with predefined bootstrap css classes . it means it divide the hole screen in two column. if you do not know about this learn Link Bootstrap css grid . This is how I am dividing the screen two column two row with tag At every I would display the high chart. Here is full code Make sure you include the OutPut When you stuck some where its really frustrating..but after lot of struggle and hard work when you achieve it, 
Then the feeling is ."
new_qs_22k.csv	When should I use a bar chart versus a pie chart?	0.99999726	34881917	Overcrowded labels are unreadable in piechart and barcharts	iosobjective-cchartsios-charts	34914349	"<p>First, I would suggest file an issue on github page, and provide the sample code using ChartsDemo to reproduce. I tried it, and I do see small overlap, but if the bars are continuing smaller, then value will not be drawn. So the problem is the granularity.</p>

<p>Whether to draw text is based on:</p>

<pre><code>internal func passesCheck() -&gt; Bool
{
    guard let dataProvider = dataProvider, barData = dataProvider.barData else { return false }

    return CGFloat(barData.yValCount) &lt; CGFloat(dataProvider.maxVisibleValueCount) * viewPortHandler.scaleX
}
</code></pre>

<p>If the values are too many, it won't draw; But it seems not enough granularity for you.</p>

<p>There are ways to solve it, for example bar chart, you can calculate the text width, and compare it with the bar pixel width to determine draw the text or not. You can override in <code>drawValues</code> or if you need to solve it in a hurry. Pie chart is similar.</p>

<p>Like:</p>

<pre><code>// calculate bar pixel width
let barWidth: CGFloat = 0.5
let barSpaceHalf = dataSet.barSpace / 2.0
let left = 0 - barWidth + barSpaceHalf
let right = 0 + barWidth - barSpaceHalf

var leftPoint = CGPoint(x: left, y: 0)
var rightPoint = CGPoint(x: right, y: 0)
trans.pointValueToPixel(&amp;leftPoint)
trans.pointValueToPixel(&amp;rightPoint)

let barPixelWidth = rightPoint.x - leftPoint.x
let valueTextWidth = valueText.sizeWithAttributes([NSFontAttributeName: valueFont]).width

if valueTextWidth &lt; barPixelWidth
{
    // draw text
}
</code></pre>"	"<p>First, I would suggest file an issue on github page, and provide the sample code using ChartsDemo to reproduce. I tried it, and I do see small overlap, but if the bars are continuing smaller, then value will not be drawn. So the problem is the granularity.</p>

<p>Whether to draw text is based on:</p>

<pre><code>internal func passesCheck() -&gt; Bool
{
    guard let dataProvider = dataProvider, barData = dataProvider.barData else { return false }

    return CGFloat(barData.yValCount) &lt; CGFloat(dataProvider.maxVisibleValueCount) * viewPortHandler.scaleX
}
</code></pre>

<p>If the values are too many, it won't draw; But it seems not enough granularity for you.</p>

<p>There are ways to solve it, for example bar chart, you can calculate the text width, and compare it with the bar pixel width to determine draw the text or not. You can override in <code>drawValues</code> or if you need to solve it in a hurry. Pie chart is similar.</p>

<p>Like:</p>

<pre><code>// calculate bar pixel width
let barWidth: CGFloat = 0.5
let barSpaceHalf = dataSet.barSpace / 2.0
let left = 0 - barWidth + barSpaceHalf
let right = 0 + barWidth - barSpaceHalf

var leftPoint = CGPoint(x: left, y: 0)
var rightPoint = CGPoint(x: right, y: 0)
trans.pointValueToPixel(&amp;leftPoint)
trans.pointValueToPixel(&amp;rightPoint)

let barPixelWidth = rightPoint.x - leftPoint.x
let valueTextWidth = valueText.sizeWithAttributes([NSFontAttributeName: valueFont]).width

if valueTextWidth &lt; barPixelWidth
{
    // draw text
}
</code></pre>"	 First, I would suggest file an issue on github page, and provide the sample code using ChartsDemo to reproduce. I tried it, and I do see small overlap, but if the bars are continuing smaller, then value will not be drawn. So the problem is the granularity. Whether to draw text is based on: If the values are too many, it won't draw; But it seems not enough granularity for you. There are ways to solve it, for example bar chart, you can calculate the text width, and compare it with the bar pixel width to determine draw the text or not. You can override in or if you need to solve it in a hurry. Pie chart is similar. Like:
new_qs_22k.csv	When should I use a bar chart versus a pie chart?	0.99999714	41453746	How to get complete, rather than partial, pie charts using gganimate	ranimationggplot2pie-chartgganimate	41454650	"<p>The ggplot code creates a single stacked bar chart with a section for every row in <code>df</code>. With <code>coord_polar</code> this becomes a single pie chart with a wedge for each row in the data frame. Then when you use <code>gg_animate</code>, each frame includes only the wedges that correspond to a given level of <code>Y</code>. That's why you're getting only a section of the full pie chart each time. </p>

<p>If instead you want a full pie for each level of <code>Y</code>, then one option would be to create a separate pie chart for each level of <code>Y</code> and then combine those pies into a GIF. Here's an example with some fake data that (I hope) is similar to your real data:</p>

<pre><code>library(animation)

# Fake data
set.seed(40)
df = data.frame(Year = rep(2010:2015, 3), 
                disease = rep(c(""Cardiovascular"",""Neoplasms"",""Others""), each=6),
                count=c(sapply(c(1,1.5,2), function(i) cumsum(c(1000*i, sample((-200*i):(200*i),5))))))

saveGIF({
  for (i in unique(df$Year)) {
    p = ggplot(df[df$Year==i,], aes(x="""", y=count, fill=disease, frame=Year))+
      geom_bar(width = 1, stat = ""identity"") + 
      facet_grid(~Year) +
      coord_polar(""y"", start=0) 
    print(p)
  }
}, movie.name=""test1.gif"")
</code></pre>

<p><a href=""https://i.stack.imgur.com/HEgc8.gif"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/HEgc8.gif"" alt=""enter image description here""></a></p>

<p>The pies in the GIF above are all the same size. But you can also change the size of the pies based on the sum of <code>count</code> for each level of <code>Year</code> (code adapted from <a href=""https://stackoverflow.com/a/27771019/496488"">this SO answer</a>):</p>

<pre><code>library(dplyr)

df = df %&gt;% group_by(Year) %&gt;% 
  mutate(cp1 = c(0, head(cumsum(count), -1)),
         cp2 = cumsum(count))

saveGIF({
  for (i in unique(df$Year)) {
    p = ggplot(df %&gt;% filter(Year==i), aes(fill=disease)) +
      geom_rect(aes(xmin=0, xmax=max(cp2), ymin=cp1, ymax=cp2)) + 
      facet_grid(~Year) +
      coord_polar(""y"", start=0) +
      scale_x_continuous(limits=c(0,max(df$cp2)))
    print(p)
  }
}, movie.name=""test2.gif"")
</code></pre>

<p><a href=""https://i.stack.imgur.com/kzwqx.gif"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/kzwqx.gif"" alt=""enter image description here""></a></p>

<p>If I can editorialize for a moment, although animation is cool (but pie charts are uncool, so maybe animating a bunch of pie charts just adds insult to injury), the data will probably be easier to comprehend with a plain old static line plot. For example:</p>

<pre><code>ggplot(df, aes(x=Year, y=count, colour=disease)) +
  geom_line() + geom_point() +
  scale_y_continuous(limits=c(0, max(df$count)))
</code></pre>

<p><a href=""https://i.stack.imgur.com/nMiji.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/nMiji.png"" alt=""enter image description here""></a></p>

<p>Or maybe this:</p>

<pre><code>ggplot(df, aes(x=Year, y=count, colour=disease)) +
  geom_line() + geom_point(show.legend=FALSE) +
  geom_line(data=df %&gt;% group_by(Year) %&gt;% mutate(count=sum(count)), 
            aes(x=Year, y=count, colour=""All""), lwd=1) +
  scale_y_continuous(limits=c(0, df %&gt;% group_by(Year) %&gt;% 
                                summarise(count=sum(count)) %&gt;% max(.$count))) +
  scale_colour_manual(values=c(""black"", hcl(seq(15,275,length=4)[1:3],100,65)))
</code></pre>

<p><a href=""https://i.stack.imgur.com/Hj2vN.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/Hj2vN.png"" alt=""enter image description here""></a></p>"	"<p>The ggplot code creates a single stacked bar chart with a section for every row in <code>df</code>. With <code>coord_polar</code> this becomes a single pie chart with a wedge for each row in the data frame. Then when you use <code>gg_animate</code>, each frame includes only the wedges that correspond to a given level of <code>Y</code>. That's why you're getting only a section of the full pie chart each time. </p>

<p>If instead you want a full pie for each level of <code>Y</code>, then one option would be to create a separate pie chart for each level of <code>Y</code> and then combine those pies into a GIF. Here's an example with some fake data that (I hope) is similar to your real data:</p>

<pre><code>library(animation)

# Fake data
set.seed(40)
df = data.frame(Year = rep(2010:2015, 3), 
                disease = rep(c(""Cardiovascular"",""Neoplasms"",""Others""), each=6),
                count=c(sapply(c(1,1.5,2), function(i) cumsum(c(1000*i, sample((-200*i):(200*i),5))))))

saveGIF({
  for (i in unique(df$Year)) {
    p = ggplot(df[df$Year==i,], aes(x="""", y=count, fill=disease, frame=Year))+
      geom_bar(width = 1, stat = ""identity"") + 
      facet_grid(~Year) +
      coord_polar(""y"", start=0) 
    print(p)
  }
}, movie.name=""test1.gif"")
</code></pre>

<p><a href=""https://i.stack.imgur.com/HEgc8.gif"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/HEgc8.gif"" alt=""enter image description here""></a></p>

<p>The pies in the GIF above are all the same size. But you can also change the size of the pies based on the sum of <code>count</code> for each level of <code>Year</code> (code adapted from <a href=""https://stackoverflow.com/a/27771019/496488"">this SO answer</a>):</p>

<pre><code>library(dplyr)

df = df %&gt;% group_by(Year) %&gt;% 
  mutate(cp1 = c(0, head(cumsum(count), -1)),
         cp2 = cumsum(count))

saveGIF({
  for (i in unique(df$Year)) {
    p = ggplot(df %&gt;% filter(Year==i), aes(fill=disease)) +
      geom_rect(aes(xmin=0, xmax=max(cp2), ymin=cp1, ymax=cp2)) + 
      facet_grid(~Year) +
      coord_polar(""y"", start=0) +
      scale_x_continuous(limits=c(0,max(df$cp2)))
    print(p)
  }
}, movie.name=""test2.gif"")
</code></pre>

<p><a href=""https://i.stack.imgur.com/kzwqx.gif"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/kzwqx.gif"" alt=""enter image description here""></a></p>

<p>If I can editorialize for a moment, although animation is cool (but pie charts are uncool, so maybe animating a bunch of pie charts just adds insult to injury), the data will probably be easier to comprehend with a plain old static line plot. For example:</p>

<pre><code>ggplot(df, aes(x=Year, y=count, colour=disease)) +
  geom_line() + geom_point() +
  scale_y_continuous(limits=c(0, max(df$count)))
</code></pre>

<p><a href=""https://i.stack.imgur.com/nMiji.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/nMiji.png"" alt=""enter image description here""></a></p>

<p>Or maybe this:</p>

<pre><code>ggplot(df, aes(x=Year, y=count, colour=disease)) +
  geom_line() + geom_point(show.legend=FALSE) +
  geom_line(data=df %&gt;% group_by(Year) %&gt;% mutate(count=sum(count)), 
            aes(x=Year, y=count, colour=""All""), lwd=1) +
  scale_y_continuous(limits=c(0, df %&gt;% group_by(Year) %&gt;% 
                                summarise(count=sum(count)) %&gt;% max(.$count))) +
  scale_colour_manual(values=c(""black"", hcl(seq(15,275,length=4)[1:3],100,65)))
</code></pre>

<p><a href=""https://i.stack.imgur.com/Hj2vN.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/Hj2vN.png"" alt=""enter image description here""></a></p>"	 The ggplot code creates a single stacked bar chart with a section for every row in . With this becomes a single pie chart with a wedge for each row in the data frame. Then when you use , each frame includes only the wedges that correspond to a given level of . That's why you're getting only a section of the full pie chart each time. If instead you want a full pie for each level of , then one option would be to create a separate pie chart for each level of and then combine those pies into a GIF. Here's an example with some fake data that (I hope) is similar to your real data: The pies in the GIF above are all the same size. But you can also change the size of the pies based on the sum of for each level of (code adapted from this SO answer ): If I can editorialize for a moment, although animation is cool (but pie charts are uncool, so maybe animating a bunch of pie charts just adds insult to injury), the data will probably be easier to comprehend with a plain old static line plot. For example: Or maybe this:
new_qs_22k.csv	When should I use a bar chart versus a pie chart?	0.999997	42583277	ggplot - Making pie graph	rggplot2pie-chart	42585387	"<p>This has to do with the order the slices of the pies are plotted by default.  It is easiest to see what is going on by looking at the bar chart (prior to <code>coord_polar</code>).  A ggplot2 bar chart plots from top to bottom based on the order of the levels of your <code>Descripcion</code> factor. </p>

<p>To calculate the breaks as you have you need to put your dataset in order by <code>Descripcion</code> before calculating cumulative frequencies.  To match the default ggplot2 order, you order by the <em>reverse</em> of the variable.  </p>

<pre><code>cant_masivos_trim = cant_masivos_trim[rev(order(cant_masivos_trim$Descripcion)), ]
</code></pre>

<p>Once that is done, calculate the breaks based on the cumulative frequencies and center them as before.</p>

<pre><code>y.breaks = cumsum(cant_masivos_trim$Freq) - cant_masivos_trim$Freq/2

ggplot(cant_masivos_trim, aes(x  =1, y = Freq, fill = Descripcion)) +
    geom_bar(stat=""identity"") +
    coord_polar(theta = ""y"") +
    scale_y_continuous(breaks = y.breaks,   # where to place the labels
        labels = (paste(cant_masivos_trim$Freq, 
                     scales::percent(cant_masivos_trim$Freq/sum(cant_masivos_trim$Freq)), sep='\n'))) +
    theme(legend.position = ""none"",
         axis.ticks=element_blank(),  
         axis.title=element_blank(),  
         axis.text.y=element_blank())
</code></pre>

<p><a href=""https://i.stack.imgur.com/Luj6h.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/Luj6h.png"" alt=""enter image description here""></a></p>"	"<p>This has to do with the order the slices of the pies are plotted by default.  It is easiest to see what is going on by looking at the bar chart (prior to <code>coord_polar</code>).  A ggplot2 bar chart plots from top to bottom based on the order of the levels of your <code>Descripcion</code> factor. </p>

<p>To calculate the breaks as you have you need to put your dataset in order by <code>Descripcion</code> before calculating cumulative frequencies.  To match the default ggplot2 order, you order by the <em>reverse</em> of the variable.  </p>

<pre><code>cant_masivos_trim = cant_masivos_trim[rev(order(cant_masivos_trim$Descripcion)), ]
</code></pre>

<p>Once that is done, calculate the breaks based on the cumulative frequencies and center them as before.</p>

<pre><code>y.breaks = cumsum(cant_masivos_trim$Freq) - cant_masivos_trim$Freq/2

ggplot(cant_masivos_trim, aes(x  =1, y = Freq, fill = Descripcion)) +
    geom_bar(stat=""identity"") +
    coord_polar(theta = ""y"") +
    scale_y_continuous(breaks = y.breaks,   # where to place the labels
        labels = (paste(cant_masivos_trim$Freq, 
                     scales::percent(cant_masivos_trim$Freq/sum(cant_masivos_trim$Freq)), sep='\n'))) +
    theme(legend.position = ""none"",
         axis.ticks=element_blank(),  
         axis.title=element_blank(),  
         axis.text.y=element_blank())
</code></pre>

<p><a href=""https://i.stack.imgur.com/Luj6h.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/Luj6h.png"" alt=""enter image description here""></a></p>"	 This has to do with the order the slices of the pies are plotted by default.  It is easiest to see what is going on by looking at the bar chart (prior to ).  A ggplot2 bar chart plots from top to bottom based on the order of the levels of your factor. To calculate the breaks as you have you need to put your dataset in order by before calculating cumulative frequencies.  To match the default ggplot2 order, you order by the reverse of the variable. Once that is done, calculate the breaks based on the cumulative frequencies and center them as before.
new_qs_22k.csv	When should I use a bar chart versus a pie chart?	0.999997	32736156	MS Access Pie Chart in Report	sqlms-accessreportpie-chart	32739443	"<p>You need two rows for your chart. So build two querys, one for male and one for female customers. Combine them with a UNION Query and be careful, that the percentage-column is named equally in both sub querys. That is your source for the chart.</p>

<p>See also <a href=""https://stackoverflow.com/questions/19312970/how-to-add-a-pie-chart-to-my-access-report"">How to add a pie chart to my Access report</a></p>"	"<p>You need two rows for your chart. So build two querys, one for male and one for female customers. Combine them with a UNION Query and be careful, that the percentage-column is named equally in both sub querys. That is your source for the chart.</p>

<p>See also <a href=""https://stackoverflow.com/questions/19312970/how-to-add-a-pie-chart-to-my-access-report"">How to add a pie chart to my Access report</a></p>"	 You need two rows for your chart. So build two querys, one for male and one for female customers. Combine them with a UNION Query and be careful, that the percentage-column is named equally in both sub querys. That is your source for the chart. See also How to add a pie chart to my Access report
new_qs_22k.csv	When should I use a bar chart versus a pie chart?	0.999997	45498867	How to get click event in Chart.js	jqueryasp.netchart.js	45499860	"<p>below code is for bar chart Add Data keys in orders of Labels in my case it was theChart in your case it is myChart  </p>

<p><code>datakeys: [""4"", ""3"", ""2"", ""1"", ""6""],</code></p>

<pre><code> document.getElementById(""chart_VulSev"").onclick = function (evt) {
                    var activePoints = theChart.getElementAtEvent(evt);
                    var theElement = theChart.config.data.datasets[activePoints[0]._datasetIndex].data[activePoints[0]._index];
                    //console.log(activePoints);
                    //console.log(theElement);
                    //console.log(theChart.config.data.datakeys[activePoints[0]._index]);
                    window.open(""page.aspx?id="" + theChart.config.data.datakeys[activePoints[0]._index]);
                    //alert(theChart.config.data.datakeys[activePoints[0]._index]);
                    //console.log(theChart.config.type);
                }
</code></pre>

<p>For Pie Chart check this snippet
<div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;html&gt;

&lt;head&gt;
  &lt;title&gt;PieChart&lt;/title&gt;
  &lt;script src=""https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js""&gt;&lt;/script&gt;
  &lt;script src=""https://cdnjs.cloudflare.com/ajax/libs/Chart.js/1.0.2/Chart.js""&gt;&lt;/script&gt;

  &lt;script&gt;
    var data = {
      datasets: [{
        data: [300, 50, 100, 200],
        backgroundColor: [
          ""#a02020"",
          ""#ed1c24"",
          ""#ff9900"",
          ""#109618"",
        ]
      }],
      labels: [
        ""Critical"",
        ""High"",
        ""Medium"",
        ""Low""
      ]
    };

    $(document).ready(
      function() {
        var canvas = document.getElementById(""myChart"");
        var ctx = canvas.getContext(""2d"");
        var myNewChart = new Chart(ctx, {
          type: 'pie',
          data: data
        });

        canvas.onclick = function(evt) {
          var activePoints = myNewChart.getElementsAtEvent(evt);
          var chartData = activePoints[0]['_chart'].config.data;
          var idx = activePoints[0]['_index'];

          var label = chartData.labels[idx];
          var value = chartData.datasets[0].data[idx];

          var url = ""http://example.com/?label="" + label + ""&amp;value="" + value;
          console.log(url);
          alert(url);
        };
      }
    );
  &lt;/script&gt;

&lt;/head&gt;

&lt;body&gt;
  &lt;div style=""width: 320.750px; height: 156px""&gt;
    &lt;canvas id=""myChart""&gt;&lt;/canvas&gt;
  &lt;/div&gt;
&lt;/body&gt;

&lt;/html&gt;</code></pre>
</div>
</div>
</p>"	"<p>below code is for bar chart Add Data keys in orders of Labels in my case it was theChart in your case it is myChart  </p>

<p><code>datakeys: [""4"", ""3"", ""2"", ""1"", ""6""],</code></p>

<pre><code> document.getElementById(""chart_VulSev"").onclick = function (evt) {
                    var activePoints = theChart.getElementAtEvent(evt);
                    var theElement = theChart.config.data.datasets[activePoints[0]._datasetIndex].data[activePoints[0]._index];
                    //console.log(activePoints);
                    //console.log(theElement);
                    //console.log(theChart.config.data.datakeys[activePoints[0]._index]);
                    window.open(""page.aspx?id="" + theChart.config.data.datakeys[activePoints[0]._index]);
                    //alert(theChart.config.data.datakeys[activePoints[0]._index]);
                    //console.log(theChart.config.type);
                }
</code></pre>

<p>For Pie Chart check this snippet
<div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;html&gt;

&lt;head&gt;
  &lt;title&gt;PieChart&lt;/title&gt;
  &lt;script src=""https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js""&gt;&lt;/script&gt;
  &lt;script src=""https://cdnjs.cloudflare.com/ajax/libs/Chart.js/1.0.2/Chart.js""&gt;&lt;/script&gt;

  &lt;script&gt;
    var data = {
      datasets: [{
        data: [300, 50, 100, 200],
        backgroundColor: [
          ""#a02020"",
          ""#ed1c24"",
          ""#ff9900"",
          ""#109618"",
        ]
      }],
      labels: [
        ""Critical"",
        ""High"",
        ""Medium"",
        ""Low""
      ]
    };

    $(document).ready(
      function() {
        var canvas = document.getElementById(""myChart"");
        var ctx = canvas.getContext(""2d"");
        var myNewChart = new Chart(ctx, {
          type: 'pie',
          data: data
        });

        canvas.onclick = function(evt) {
          var activePoints = myNewChart.getElementsAtEvent(evt);
          var chartData = activePoints[0]['_chart'].config.data;
          var idx = activePoints[0]['_index'];

          var label = chartData.labels[idx];
          var value = chartData.datasets[0].data[idx];

          var url = ""http://example.com/?label="" + label + ""&amp;value="" + value;
          console.log(url);
          alert(url);
        };
      }
    );
  &lt;/script&gt;

&lt;/head&gt;

&lt;body&gt;
  &lt;div style=""width: 320.750px; height: 156px""&gt;
    &lt;canvas id=""myChart""&gt;&lt;/canvas&gt;
  &lt;/div&gt;
&lt;/body&gt;

&lt;/html&gt;</code></pre>
</div>
</div>
</p>"	 below code is for bar chart Add Data keys in orders of Labels in my case it was theChart in your case it is myChart For Pie Chart check this snippet
new_qs_22k.csv	What is the easiest way to create a diagram of a network?	0.99999666	7841113	DB objects relations visualization	databaseobjectvisualizationdata-visualizationrelation	7841877	"<p>You could try <a href=""http://www.graphviz.org/"" rel=""nofollow"">graphviz</a>.  It was created specifically for visualising large graphs of network nodes.</p>

<p>It's not out of the box; you'll have to write some code that:</p>

<ol>
<li>Reads data on the devices &amp; their relationships</li>
<li>Creates the graphviz input file</li>
<li>generates the diagram by calling the graphviz binary.</li>
</ol>

<p>There are many ways to do that.  One of the easiest is to use python with the <a href=""http://code.google.com/p/pydot/"" rel=""nofollow"">pydot</a> library.</p>

<p>Note that graphviz generates static images (jpeg / tiff etc.) so you'd have to regenerate on demand.  </p>

<p>There are more interactive toolkits available, e.g. <a href=""http://vis.stanford.edu/protovis/"" rel=""nofollow"">protovis</a> / <a href=""http://thejit.org/"" rel=""nofollow"">infovis</a>.  Both are javascript based and render directly in the browser.</p>

<p>hth.</p>"	"<p>You could try <a href=""http://www.graphviz.org/"" rel=""nofollow"">graphviz</a>.  It was created specifically for visualising large graphs of network nodes.</p>

<p>It's not out of the box; you'll have to write some code that:</p>

<ol>
<li>Reads data on the devices &amp; their relationships</li>
<li>Creates the graphviz input file</li>
<li>generates the diagram by calling the graphviz binary.</li>
</ol>

<p>There are many ways to do that.  One of the easiest is to use python with the <a href=""http://code.google.com/p/pydot/"" rel=""nofollow"">pydot</a> library.</p>

<p>Note that graphviz generates static images (jpeg / tiff etc.) so you'd have to regenerate on demand.  </p>

<p>There are more interactive toolkits available, e.g. <a href=""http://vis.stanford.edu/protovis/"" rel=""nofollow"">protovis</a> / <a href=""http://thejit.org/"" rel=""nofollow"">infovis</a>.  Both are javascript based and render directly in the browser.</p>

<p>hth.</p>"	 You could try graphviz .  It was created specifically for visualising large graphs of network nodes. It's not out of the box; you'll have to write some code that: Reads data on the devices & their relationships Creates the graphviz input file generates the diagram by calling the graphviz binary. There are many ways to do that.  One of the easiest is to use python with the pydot library. Note that graphviz generates static images (jpeg / tiff etc.) so you'd have to regenerate on demand. There are more interactive toolkits available, e.g. protovis / infovis .  Both are javascript based and render directly in the browser. hth.
new_qs_22k.csv	What is the easiest way to create a diagram of a network?	0.99999654	2269949	What's the name for this type of flowchart?	chartsvisioflowchart	2269963	"<p>It's called a railroad diagram. It can more specifically be called a <a href=""http://en.wikipedia.org/wiki/Syntax_diagram"" rel=""nofollow noreferrer"">syntax diagram</a>. Not sure about Visio support but other tools can get the job done: <a href=""https://stackoverflow.com/questions/773371/what-is-a-good-tool-for-creating-railroad-diagrams"">What is a good tool for creating railroad diagrams?</a></p>

<p><a href=""https://i.stack.imgur.com/719Nr.jpg"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/719Nr.jpg"" alt=""alt text""></a><br>
<sub>(source: <a href=""http://www.antlr.org/works/screenshots/editor.jpg"" rel=""nofollow noreferrer"">antlr.org</a>)</sub>  </p>

<p>If you have a grammar file you can try to get it working in <a href=""http://www.antlr.org/works/index.html"" rel=""nofollow noreferrer"">ANTLR Works</a>, which is specifically built for working with the syntax and grammar of languages.</p>"	"<p>It's called a railroad diagram. It can more specifically be called a <a href=""http://en.wikipedia.org/wiki/Syntax_diagram"" rel=""nofollow noreferrer"">syntax diagram</a>. Not sure about Visio support but other tools can get the job done: <a href=""https://stackoverflow.com/questions/773371/what-is-a-good-tool-for-creating-railroad-diagrams"">What is a good tool for creating railroad diagrams?</a></p>

<p><a href=""https://i.stack.imgur.com/719Nr.jpg"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/719Nr.jpg"" alt=""alt text""></a><br>
<sub>(source: <a href=""http://www.antlr.org/works/screenshots/editor.jpg"" rel=""nofollow noreferrer"">antlr.org</a>)</sub>  </p>

<p>If you have a grammar file you can try to get it working in <a href=""http://www.antlr.org/works/index.html"" rel=""nofollow noreferrer"">ANTLR Works</a>, which is specifically built for working with the syntax and grammar of languages.</p>"	 It's called a railroad diagram. It can more specifically be called a syntax diagram . Not sure about Visio support but other tools can get the job done: What is a good tool for creating railroad diagrams? (source: antlr.org ) If you have a grammar file you can try to get it working in ANTLR Works , which is specifically built for working with the syntax and grammar of languages.
new_qs_22k.csv	What is the easiest way to create a diagram of a network?	0.9999963	9346795	Which one is better than another for database Analysis: Class diagram or ERD?	database-designclass-diagramerd	9346851	"<p><strong>What is ER Diagram?</strong></p>

<p>ER diagrams are the product of entity-relationship modeling. Entity-relationship modeling is the process of coming up with an abstract and conceptual representation of data. ER diagrams ultimately model the databases. More specifically, it produces the conceptual schema of the data model. Main building blocks of ER diagrams are entities, relationships and attributes. An entity represents a thing that can exist independently and that can be defined uniquely. Most often, an entity represents a real world object such as a car or an employee. Entities can be though of as nouns that come up during the description of the problem to be solved. Relationship shows how entities are connected. They are like verbs found in the description of the problem to be solved. Properties of both entities and attributes are called attributes.</p>

<p><strong>What is Class Diagram?</strong></p>

<p>A class diagram (more correctly known as a UML class diagram) is a design diagram that represents the static structure and the behavior of a proposed system, defined using UML (Unified Modeling Language). A class diagram shows the systems’ classes, relationships between classes, and their attributes. Classes depict the abstract representation of real world objects, while the relationships depict how each class is connected to others. Both classes and relationships have properties called attributes. Methods in the classes represent or define the behavior of these classes. Methods and attributes of classes are called the members of the class.</p>

<p><strong>What is the difference between ER Diagram and Class Diagram?</strong></p>

<p>Although ER diagrams and Class diagrams are two of the design diagrams developers often come across during the design phases of software engineering projects, they have their key differences. ER diagrams represent the abstract representation of the data model, while class diagrams represent the static structure and behavior of the proposed system. Main building blocks of ER diagrams are entities, relationships and attributes but the main building blocks of class diagrams are classes, relationships and attributes. Class diagram are more likely to map in to real-world objects, while ER diagrams most often map in to the tables in the database. Usually, relationships found in ER diagrams are more difficult to understand for humans than relationships in class diagrams.</p>

<p>Read more: <a href=""http://www.differencebetween.com/difference-between-er-diagram-and-vs-class-diagram/"" rel=""nofollow noreferrer"">link1</a>  -  <a href=""http://www.differencebetween.net/technology/software-technology/difference-between-erd-and-class-diagram/"" rel=""nofollow noreferrer"">link2</a>  -  <a href=""https://stackoverflow.com/questions/4680231/differences-between-a-conceptual-uml-class-diagram-and-an-erd"">link3</a></p>"	"<p><strong>What is ER Diagram?</strong></p>

<p>ER diagrams are the product of entity-relationship modeling. Entity-relationship modeling is the process of coming up with an abstract and conceptual representation of data. ER diagrams ultimately model the databases. More specifically, it produces the conceptual schema of the data model. Main building blocks of ER diagrams are entities, relationships and attributes. An entity represents a thing that can exist independently and that can be defined uniquely. Most often, an entity represents a real world object such as a car or an employee. Entities can be though of as nouns that come up during the description of the problem to be solved. Relationship shows how entities are connected. They are like verbs found in the description of the problem to be solved. Properties of both entities and attributes are called attributes.</p>

<p><strong>What is Class Diagram?</strong></p>

<p>A class diagram (more correctly known as a UML class diagram) is a design diagram that represents the static structure and the behavior of a proposed system, defined using UML (Unified Modeling Language). A class diagram shows the systems’ classes, relationships between classes, and their attributes. Classes depict the abstract representation of real world objects, while the relationships depict how each class is connected to others. Both classes and relationships have properties called attributes. Methods in the classes represent or define the behavior of these classes. Methods and attributes of classes are called the members of the class.</p>

<p><strong>What is the difference between ER Diagram and Class Diagram?</strong></p>

<p>Although ER diagrams and Class diagrams are two of the design diagrams developers often come across during the design phases of software engineering projects, they have their key differences. ER diagrams represent the abstract representation of the data model, while class diagrams represent the static structure and behavior of the proposed system. Main building blocks of ER diagrams are entities, relationships and attributes but the main building blocks of class diagrams are classes, relationships and attributes. Class diagram are more likely to map in to real-world objects, while ER diagrams most often map in to the tables in the database. Usually, relationships found in ER diagrams are more difficult to understand for humans than relationships in class diagrams.</p>

<p>Read more: <a href=""http://www.differencebetween.com/difference-between-er-diagram-and-vs-class-diagram/"" rel=""nofollow noreferrer"">link1</a>  -  <a href=""http://www.differencebetween.net/technology/software-technology/difference-between-erd-and-class-diagram/"" rel=""nofollow noreferrer"">link2</a>  -  <a href=""https://stackoverflow.com/questions/4680231/differences-between-a-conceptual-uml-class-diagram-and-an-erd"">link3</a></p>"	 What is ER Diagram? ER diagrams are the product of entity-relationship modeling. Entity-relationship modeling is the process of coming up with an abstract and conceptual representation of data. ER diagrams ultimately model the databases. More specifically, it produces the conceptual schema of the data model. Main building blocks of ER diagrams are entities, relationships and attributes. An entity represents a thing that can exist independently and that can be defined uniquely. Most often, an entity represents a real world object such as a car or an employee. Entities can be though of as nouns that come up during the description of the problem to be solved. Relationship shows how entities are connected. They are like verbs found in the description of the problem to be solved. Properties of both entities and attributes are called attributes. What is Class Diagram? A class diagram (more correctly known as a UML class diagram) is a design diagram that represents the static structure and the behavior of a proposed system, defined using UML (Unified Modeling Language). A class diagram shows the systems’ classes, relationships between classes, and their attributes. Classes depict the abstract representation of real world objects, while the relationships depict how each class is connected to others. Both classes and relationships have properties called attributes. Methods in the classes represent or define the behavior of these classes. Methods and attributes of classes are called the members of the class. What is the difference between ER Diagram and Class Diagram? Although ER diagrams and Class diagrams are two of the design diagrams developers often come across during the design phases of software engineering projects, they have their key differences. ER diagrams represent the abstract representation of the data model, while class diagrams represent the static structure and behavior of the proposed system. Main building blocks of ER diagrams are entities, relationships and attributes but the main building blocks of class diagrams are classes, relationships and attributes. Class diagram are more likely to map in to real-world objects, while ER diagrams most often map in to the tables in the database. Usually, relationships found in ER diagrams are more difficult to understand for humans than relationships in class diagrams. Read more: link1 - link2 - link3
new_qs_22k.csv	What is the easiest way to create a diagram of a network?	0.9999962	39592827	conditional track in a plot R ggplot2	rplotggplot2	39614255	"<p>Ok, the answer is very simple, I feel stupid, I simply created a graph object, and added thing to the object with conditions, like this-</p>

<pre><code>temp_plot &lt;- ggplot(seg) + facet_grid(id~chr) + 
  geom_rect(data=subset(seg,grepl(""heat$"",id)),
            mapping=aes(xmin=start,ymin=0,xmax=end,ymax=log2,fill=xlog2)) +
  geom_segment(data=subset(seg,!grepl(""heat$"",seg$id) &amp; !grepl(""short$"",seg$id) &amp; !grepl(""long$"",seg$id)),
               mapping=aes(x=start,xend=end,y=log2,yend=log2,log2&gt;0,color=log2&gt;0))
if(!(""102G-short"" %in% input$hide_tracks &amp; ""103G-short"" %in% input$hide_tracks)) {
  temp_plot &lt;- temp_plot + geom_segment(data=subset(seg,grepl(""short$"",id)),
                                        mapping=aes(x=start,xend=end,y=log2,yend=log2,size=3,color=log2&gt;0))
}

if(!(""102G-long"" %in% input$hide_tracks &amp; ""103G-long"" %in% input$hide_tracks)) {
  temp_plot &lt;- temp_plot + geom_segment(data=subset(seg,grepl(""long$"",id)),
                                        mapping=aes(x=start,xend=end,y=log2,yend=log2,size=3,color=log2&gt;0))
}
temp_plot &lt;- temp_plot + scale_fill_gradient2(limits=c(-3,3),low=""darkblue"",mid=""white"",high=""darkred"",na.value=""white"",midpoint=0) +
  scale_color_manual(values=c(""blue"",""red"")) +
  theme(panel.background=element_rect(fill=""white"")) +
  theme(legend.position = ""none"") +
  theme(strip.text.x = element_text(size = 12)) +
  theme(strip.text.y = element_text(size = 12)) +
  ylab("""") + 
  ylim(c(-2,2)) +
  coord_cartesian(xlim = ranges$x, ylim = ranges$y)
temp_plot
</code></pre>"	"<p>Ok, the answer is very simple, I feel stupid, I simply created a graph object, and added thing to the object with conditions, like this-</p>

<pre><code>temp_plot &lt;- ggplot(seg) + facet_grid(id~chr) + 
  geom_rect(data=subset(seg,grepl(""heat$"",id)),
            mapping=aes(xmin=start,ymin=0,xmax=end,ymax=log2,fill=xlog2)) +
  geom_segment(data=subset(seg,!grepl(""heat$"",seg$id) &amp; !grepl(""short$"",seg$id) &amp; !grepl(""long$"",seg$id)),
               mapping=aes(x=start,xend=end,y=log2,yend=log2,log2&gt;0,color=log2&gt;0))
if(!(""102G-short"" %in% input$hide_tracks &amp; ""103G-short"" %in% input$hide_tracks)) {
  temp_plot &lt;- temp_plot + geom_segment(data=subset(seg,grepl(""short$"",id)),
                                        mapping=aes(x=start,xend=end,y=log2,yend=log2,size=3,color=log2&gt;0))
}

if(!(""102G-long"" %in% input$hide_tracks &amp; ""103G-long"" %in% input$hide_tracks)) {
  temp_plot &lt;- temp_plot + geom_segment(data=subset(seg,grepl(""long$"",id)),
                                        mapping=aes(x=start,xend=end,y=log2,yend=log2,size=3,color=log2&gt;0))
}
temp_plot &lt;- temp_plot + scale_fill_gradient2(limits=c(-3,3),low=""darkblue"",mid=""white"",high=""darkred"",na.value=""white"",midpoint=0) +
  scale_color_manual(values=c(""blue"",""red"")) +
  theme(panel.background=element_rect(fill=""white"")) +
  theme(legend.position = ""none"") +
  theme(strip.text.x = element_text(size = 12)) +
  theme(strip.text.y = element_text(size = 12)) +
  ylab("""") + 
  ylim(c(-2,2)) +
  coord_cartesian(xlim = ranges$x, ylim = ranges$y)
temp_plot
</code></pre>"	 Ok, the answer is very simple, I feel stupid, I simply created a graph object, and added thing to the object with conditions, like this-
new_qs_22k.csv	What is the easiest way to create a diagram of a network?	0.99999607	9288891	Nearest neighbor zones visualized	algorithmcomputational-geometrydata-visualizationkdtreespace-partitioning	9288967	"<p>This is called a <strong><a href=""http://en.wikipedia.org/wiki/Voronoi_diagram"" rel=""noreferrer"">Voronoi Diagram</a></strong> and there are many excellent algorithms for generating them efficiently.  The one I've heard about most is <strong><a href=""http://en.wikipedia.org/wiki/Fortune%27s_algorithm"" rel=""noreferrer"">Fortune's algorithm</a></strong>, which runs in time O(n log n), though others algorithms exist for this problem.</p>

<p>Hope this helps!</p>"	"<p>This is called a <strong><a href=""http://en.wikipedia.org/wiki/Voronoi_diagram"" rel=""noreferrer"">Voronoi Diagram</a></strong> and there are many excellent algorithms for generating them efficiently.  The one I've heard about most is <strong><a href=""http://en.wikipedia.org/wiki/Fortune%27s_algorithm"" rel=""noreferrer"">Fortune's algorithm</a></strong>, which runs in time O(n log n), though others algorithms exist for this problem.</p>

<p>Hope this helps!</p>"	 This is called a Voronoi Diagram and there are many excellent algorithms for generating them efficiently.  The one I've heard about most is Fortune's algorithm , which runs in time O(n log n), though others algorithms exist for this problem. Hope this helps!
new_qs_22k.csv	I need help creating a visualization of my data	0.99999654	48281861	Improving visual fit on log-log scale	rggplot2curve-fittingpredictnon-linear-regression	48290530	"<p>Your problem is not a visualization problem. The problem is that you fit in linear scale and expect the plot to look good in log scale. That just doesn't work. (And in general, fitting in linear scale is not a good idea for data that vary on a log scale.)</p>

<p>Simple example:</p>

<pre><code># create exponential decay data
set.seed(342)
x &lt;- seq(0, 10, by = .5)
y &lt;- exp(-x) * rnorm(length(x), mean = 1, sd = .3)
d &lt;- data.frame(x, y)

# fit model to data
model &lt;- nls(y ~ a*exp(-b*x), data = d, start = list(a = 1, b = 1))

# visualize in linear scale---looks good
xpred &lt;- seq(0, 10, by = .1)
ypred &lt;- predict(model, data.frame(x = xpred))
ggplot(d, aes(x, y)) + geom_point() + 
  geom_line(data = data.frame(x = xpred, y = ypred))
</code></pre>

<p><a href=""https://i.stack.imgur.com/1GYoN.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/1GYoN.png"" alt=""enter image description here""></a></p>

<pre><code># visualize in log scale---oops
ggplot(d, aes(x, y)) + geom_point() + 
  geom_line(data = data.frame(x = xpred, y = ypred)) + scale_y_log10()
</code></pre>

<p><a href=""https://i.stack.imgur.com/sWKbw.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/sWKbw.png"" alt=""enter image description here""></a></p>"	"<p>Your problem is not a visualization problem. The problem is that you fit in linear scale and expect the plot to look good in log scale. That just doesn't work. (And in general, fitting in linear scale is not a good idea for data that vary on a log scale.)</p>

<p>Simple example:</p>

<pre><code># create exponential decay data
set.seed(342)
x &lt;- seq(0, 10, by = .5)
y &lt;- exp(-x) * rnorm(length(x), mean = 1, sd = .3)
d &lt;- data.frame(x, y)

# fit model to data
model &lt;- nls(y ~ a*exp(-b*x), data = d, start = list(a = 1, b = 1))

# visualize in linear scale---looks good
xpred &lt;- seq(0, 10, by = .1)
ypred &lt;- predict(model, data.frame(x = xpred))
ggplot(d, aes(x, y)) + geom_point() + 
  geom_line(data = data.frame(x = xpred, y = ypred))
</code></pre>

<p><a href=""https://i.stack.imgur.com/1GYoN.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/1GYoN.png"" alt=""enter image description here""></a></p>

<pre><code># visualize in log scale---oops
ggplot(d, aes(x, y)) + geom_point() + 
  geom_line(data = data.frame(x = xpred, y = ypred)) + scale_y_log10()
</code></pre>

<p><a href=""https://i.stack.imgur.com/sWKbw.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/sWKbw.png"" alt=""enter image description here""></a></p>"	 Your problem is not a visualization problem. The problem is that you fit in linear scale and expect the plot to look good in log scale. That just doesn't work. (And in general, fitting in linear scale is not a good idea for data that vary on a log scale.) Simple example:
new_qs_22k.csv	I need help creating a visualization of my data	0.99999654	53656338	ggplot syntax for data distribution	rggplot2histogramdata-visualizationdistribution	53659848	"<p>You get this error message ""Error: Aesthetics must be either length 1 or the same as the data (43): x"" because vector <code>afterMinWageLaw</code> has a length of 43 values and <code>beforeMinWageLaw</code> has a length of 303 values, and this is why you cannot reference them within the same aesthetics <code>aes()</code>, I guess.</p>

<p>I would use different visualizations in one plot, so that you can set different aesthetics also with a different length or row count of your data. At first, I would split your data into two data frames, one for before the law and another one for after the law. Using ggplot, you can reference different data frames in one plot, in your case for example like this:</p>

<pre><code>#set row indicex ranges for before and after law
row_index_range_before &lt;- 1:303;
row_index_range_after &lt;- 304:346;

#define two data frames
df_before &lt;- data.frame(seattleData)[row_index_range_before, ];
df_after &lt;- data.frame(seattleData)[row_index_range_after, ];

#display data distributions of both data frames with ggplot
x &lt;- ggplot() + 
  geom_histogram(
    data = df_before
    ,mapping = aes(
      x = food_drink_workers
      ,y = ..density..
      ,color = ""blue"")
    ,fill = ""white"") +
  geom_histogram(
    data = df_after
    ,mapping = aes(
      x = food_drink_workers
      ,y = ..density..
      ,color = ""red"")
    ,fill = ""white"") +
  geom_density(
    data = df_before
    ,mapping = aes(
      x = food_drink_workers
      ,y = ..density..
      ,fill = ""blue"")
    ,alpha = .2) +
  geom_density(
    data = df_after
    ,mapping = aes(
      x = food_drink_workers
      ,y = ..density..
      ,fill = ""red"")
    ,alpha = .2) +
  scale_colour_manual(
    name = ""Color""
    ,values = c(""blue"" = ""blue"", ""red"" = ""red"")
    ,labels = c(""blue"" = ""Before Law"", ""red"" = ""After Law"")) +
  scale_fill_manual(
    name = ""Fill""
    ,values = c(""blue"" = ""blue"", ""red"" = ""red"")
    ,labels = c(""blue"" = ""Before Law"",""red"" = ""After Law""));

x + geom_vline(
  xintercept = c(108.8636)
  ,linetype = ""dashed""
  ,color = ""red"") + 
ggtitle(""Distribtution of the Data"") + 
  xlab(""Seattle MSA Food and Drink          Workers"") + 
  ylab(""Density"");
</code></pre>

<p>But this way, you could also reference <code>afterMinWageLaw</code> and <code>beforeMinWageLaw</code> as <code>x</code> in <code>aes()</code> and remove <code>data</code> referencing the data frame, I think.</p>

<p>To also plot the legend you need to set <code>color</code> or <code>fill</code> within <code>aes()</code> and add <code>scale_colour_manual()</code> or <code>scale_fill_manual()</code> to your plot.<a href=""https://i.stack.imgur.com/rEJSn.jpg"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/rEJSn.jpg"" alt=""enter image description here""></a></p>"	"<p>You get this error message ""Error: Aesthetics must be either length 1 or the same as the data (43): x"" because vector <code>afterMinWageLaw</code> has a length of 43 values and <code>beforeMinWageLaw</code> has a length of 303 values, and this is why you cannot reference them within the same aesthetics <code>aes()</code>, I guess.</p>

<p>I would use different visualizations in one plot, so that you can set different aesthetics also with a different length or row count of your data. At first, I would split your data into two data frames, one for before the law and another one for after the law. Using ggplot, you can reference different data frames in one plot, in your case for example like this:</p>

<pre><code>#set row indicex ranges for before and after law
row_index_range_before &lt;- 1:303;
row_index_range_after &lt;- 304:346;

#define two data frames
df_before &lt;- data.frame(seattleData)[row_index_range_before, ];
df_after &lt;- data.frame(seattleData)[row_index_range_after, ];

#display data distributions of both data frames with ggplot
x &lt;- ggplot() + 
  geom_histogram(
    data = df_before
    ,mapping = aes(
      x = food_drink_workers
      ,y = ..density..
      ,color = ""blue"")
    ,fill = ""white"") +
  geom_histogram(
    data = df_after
    ,mapping = aes(
      x = food_drink_workers
      ,y = ..density..
      ,color = ""red"")
    ,fill = ""white"") +
  geom_density(
    data = df_before
    ,mapping = aes(
      x = food_drink_workers
      ,y = ..density..
      ,fill = ""blue"")
    ,alpha = .2) +
  geom_density(
    data = df_after
    ,mapping = aes(
      x = food_drink_workers
      ,y = ..density..
      ,fill = ""red"")
    ,alpha = .2) +
  scale_colour_manual(
    name = ""Color""
    ,values = c(""blue"" = ""blue"", ""red"" = ""red"")
    ,labels = c(""blue"" = ""Before Law"", ""red"" = ""After Law"")) +
  scale_fill_manual(
    name = ""Fill""
    ,values = c(""blue"" = ""blue"", ""red"" = ""red"")
    ,labels = c(""blue"" = ""Before Law"",""red"" = ""After Law""));

x + geom_vline(
  xintercept = c(108.8636)
  ,linetype = ""dashed""
  ,color = ""red"") + 
ggtitle(""Distribtution of the Data"") + 
  xlab(""Seattle MSA Food and Drink          Workers"") + 
  ylab(""Density"");
</code></pre>

<p>But this way, you could also reference <code>afterMinWageLaw</code> and <code>beforeMinWageLaw</code> as <code>x</code> in <code>aes()</code> and remove <code>data</code> referencing the data frame, I think.</p>

<p>To also plot the legend you need to set <code>color</code> or <code>fill</code> within <code>aes()</code> and add <code>scale_colour_manual()</code> or <code>scale_fill_manual()</code> to your plot.<a href=""https://i.stack.imgur.com/rEJSn.jpg"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/rEJSn.jpg"" alt=""enter image description here""></a></p>"	" You get this error message ""Error: Aesthetics must be either length 1 or the same as the data (43): x"" because vector has a length of 43 values and has a length of 303 values, and this is why you cannot reference them within the same aesthetics , I guess. I would use different visualizations in one plot, so that you can set different aesthetics also with a different length or row count of your data. At first, I would split your data into two data frames, one for before the law and another one for after the law. Using ggplot, you can reference different data frames in one plot, in your case for example like this: But this way, you could also reference and as in and remove referencing the data frame, I think. To also plot the legend you need to set or within and add or to your plot."
new_qs_22k.csv	I need help creating a visualization of my data	0.9999964	5767426	include jquery charts into pdf	jquerypdfchartstcpdfvisualize	5823210	<p>My work-arround for this goes along by using google charts api. google helps you to get interactive charts on the webpage and for converting to pdf google creates static png's with the whole data displayed. so far i can live with that pretty good.</p>	<p>My work-arround for this goes along by using google charts api. google helps you to get interactive charts on the webpage and for converting to pdf google creates static png's with the whole data displayed. so far i can live with that pretty good.</p>	 My work-arround for this goes along by using google charts api. google helps you to get interactive charts on the webpage and for converting to pdf google creates static png's with the whole data displayed. so far i can live with that pretty good.
new_qs_22k.csv	I need help creating a visualization of my data	0.9999964	5551286	Filling gaps in a numpy array	pythonnumpymatplotlibscipyinterpolation	5556426	"<p>You can set up a crystal-growth-style algorithm shifting a view alternately along each axis, replacing only data that is flagged with a <code>False</code> but has a <code>True</code> neighbor.  This gives a ""nearest-neighbor""-like result (but not in Euclidean or Manhattan distance -- I think it might be nearest-neighbor if you are counting pixels, counting all connecting pixels with common corners)  This should be fairly efficient with NumPy as it iterates over only axis and convergence iterations, not small slices of the data. </p>

<p>Crude, fast and stable.  I think that's what you were after:</p>

<pre><code>import numpy as np
# -- setup --
shape = (10,10,10)
dim = len(shape)
data = np.random.random(shape)
flag = np.zeros(shape, dtype=bool)
t_ct = int(data.size/5)
flag.flat[np.random.randint(0, flag.size, t_ct)] = True
# True flags the data
# -- end setup --

slcs = [slice(None)]*dim

while np.any(~flag): # as long as there are any False's in flag
    for i in range(dim): # do each axis
        # make slices to shift view one element along the axis
        slcs1 = slcs[:]
        slcs2 = slcs[:]
        slcs1[i] = slice(0, -1)
        slcs2[i] = slice(1, None)

        # replace from the right
        repmask = np.logical_and(~flag[slcs1], flag[slcs2])
        data[slcs1][repmask] = data[slcs2][repmask]
        flag[slcs1][repmask] = True

        # replace from the left
        repmask = np.logical_and(~flag[slcs2], flag[slcs1])
        data[slcs2][repmask] = data[slcs1][repmask]
        flag[slcs2][repmask] = True
</code></pre>

<p>For good measure, here's a visualization (2D) of the zones seeded by the data originally flagged <code>True</code>.</p>

<p><img src=""https://i.stack.imgur.com/kW1IZ.png"" alt=""enter image description here""></p>"	"<p>You can set up a crystal-growth-style algorithm shifting a view alternately along each axis, replacing only data that is flagged with a <code>False</code> but has a <code>True</code> neighbor.  This gives a ""nearest-neighbor""-like result (but not in Euclidean or Manhattan distance -- I think it might be nearest-neighbor if you are counting pixels, counting all connecting pixels with common corners)  This should be fairly efficient with NumPy as it iterates over only axis and convergence iterations, not small slices of the data. </p>

<p>Crude, fast and stable.  I think that's what you were after:</p>

<pre><code>import numpy as np
# -- setup --
shape = (10,10,10)
dim = len(shape)
data = np.random.random(shape)
flag = np.zeros(shape, dtype=bool)
t_ct = int(data.size/5)
flag.flat[np.random.randint(0, flag.size, t_ct)] = True
# True flags the data
# -- end setup --

slcs = [slice(None)]*dim

while np.any(~flag): # as long as there are any False's in flag
    for i in range(dim): # do each axis
        # make slices to shift view one element along the axis
        slcs1 = slcs[:]
        slcs2 = slcs[:]
        slcs1[i] = slice(0, -1)
        slcs2[i] = slice(1, None)

        # replace from the right
        repmask = np.logical_and(~flag[slcs1], flag[slcs2])
        data[slcs1][repmask] = data[slcs2][repmask]
        flag[slcs1][repmask] = True

        # replace from the left
        repmask = np.logical_and(~flag[slcs2], flag[slcs1])
        data[slcs2][repmask] = data[slcs1][repmask]
        flag[slcs2][repmask] = True
</code></pre>

<p>For good measure, here's a visualization (2D) of the zones seeded by the data originally flagged <code>True</code>.</p>

<p><img src=""https://i.stack.imgur.com/kW1IZ.png"" alt=""enter image description here""></p>"	" You can set up a crystal-growth-style algorithm shifting a view alternately along each axis, replacing only data that is flagged with a but has a neighbor.  This gives a ""nearest-neighbor""-like result (but not in Euclidean or Manhattan distance -- I think it might be nearest-neighbor if you are counting pixels, counting all connecting pixels with common corners)  This should be fairly efficient with NumPy as it iterates over only axis and convergence iterations, not small slices of the data. Crude, fast and stable.  I think that's what you were after: For good measure, here's a visualization (2D) of the zones seeded by the data originally flagged ."
new_qs_22k.csv	I need help creating a visualization of my data	0.9999962	1664323	Alternative to Many Eyes Bubble Chart	phpjavascriptflashvisualizationdata-visualization	1664354	"<p>We use <strong>AnyChart</strong> a lot at work for data visualisation : </p>

<p><a href=""http://www.anychart.com/"" rel=""nofollow noreferrer"">http://www.anychart.com/</a></p>

<p><strong>and here you can see some examples of their bubble charts</strong></p>

<p><a href=""http://www.anychart.com/products/anychart/gallery/Marker-and-Bubble-Charts.php"" rel=""nofollow noreferrer"">http://www.anychart.com/products/anychart/gallery/Marker-and-Bubble-Charts.php</a></p>

<p><a href=""http://jamie-dixon.co.uk/images/bubble.gif"" rel=""nofollow noreferrer"">alt text http://jamie-dixon.co.uk/images/bubble.gif</a></p>

<p><strong>What they say on their site:</strong>
<em>""AnyChart is a flexible  Flash based solution that allows you to create interactive and great looking flash charts. It is a cross-browser and cross-platform charting solution intended for everybody who deals with creation of dashboard, reporting, analytics, statistical, financial or any other data visualization solutions.""</em></p>

<p>From our research, these guys seem to offer some of the most customisable charts we've found that let users display the data in the many formats we need and expose a variety of events, accessible via Javascript, such as <strong>click</strong> and <strong>hover</strong> on individual items.</p>"	"<p>We use <strong>AnyChart</strong> a lot at work for data visualisation : </p>

<p><a href=""http://www.anychart.com/"" rel=""nofollow noreferrer"">http://www.anychart.com/</a></p>

<p><strong>and here you can see some examples of their bubble charts</strong></p>

<p><a href=""http://www.anychart.com/products/anychart/gallery/Marker-and-Bubble-Charts.php"" rel=""nofollow noreferrer"">http://www.anychart.com/products/anychart/gallery/Marker-and-Bubble-Charts.php</a></p>

<p><a href=""http://jamie-dixon.co.uk/images/bubble.gif"" rel=""nofollow noreferrer"">alt text http://jamie-dixon.co.uk/images/bubble.gif</a></p>

<p><strong>What they say on their site:</strong>
<em>""AnyChart is a flexible  Flash based solution that allows you to create interactive and great looking flash charts. It is a cross-browser and cross-platform charting solution intended for everybody who deals with creation of dashboard, reporting, analytics, statistical, financial or any other data visualization solutions.""</em></p>

<p>From our research, these guys seem to offer some of the most customisable charts we've found that let users display the data in the many formats we need and expose a variety of events, accessible via Javascript, such as <strong>click</strong> and <strong>hover</strong> on individual items.</p>"	" We use AnyChart a lot at work for data visualisation : http://www.anychart.com/ and here you can see some examples of their bubble charts http://www.anychart.com/products/anychart/gallery/Marker-and-Bubble-Charts.php alt text http://jamie-dixon.co.uk/images/bubble.gif What they say on their site: ""AnyChart is a flexible  Flash based solution that allows you to create interactive and great looking flash charts. It is a cross-browser and cross-platform charting solution intended for everybody who deals with creation of dashboard, reporting, analytics, statistical, financial or any other data visualization solutions."" From our research, these guys seem to offer some of the most customisable charts we've found that let users display the data in the many formats we need and expose a variety of events, accessible via Javascript, such as click and hover on individual items."
new_qs_22k.csv	I need help creating a graph of my data	0.9999969	25386049	Android Graphview changing x axis data	androidchartsandroid-graphview	25404400	"<p>OK, so I made it however I think it can be done better, what I done is removing graphView from parent layout, creating new graphview and adding new graphview - I do this sequence everytime user is changing the boundaries. Maybe it will help somebody (short snippet of createChart method, container is my parent layout):</p>

<pre><code>container.removeView(mGraphView);
mGraphView = new LineGraphView(this, ""Temperature Measurements"");
container.addView(mGraphView);
mGraphView.removeAllSeries();
mGraphView.addSeries(new GraphViewSeries(values));
mGraphView.setScalable(true);
mGraphView.getGraphViewStyle().setTextSize(15);
</code></pre>"	"<p>OK, so I made it however I think it can be done better, what I done is removing graphView from parent layout, creating new graphview and adding new graphview - I do this sequence everytime user is changing the boundaries. Maybe it will help somebody (short snippet of createChart method, container is my parent layout):</p>

<pre><code>container.removeView(mGraphView);
mGraphView = new LineGraphView(this, ""Temperature Measurements"");
container.addView(mGraphView);
mGraphView.removeAllSeries();
mGraphView.addSeries(new GraphViewSeries(values));
mGraphView.setScalable(true);
mGraphView.getGraphViewStyle().setTextSize(15);
</code></pre>"	 OK, so I made it however I think it can be done better, what I done is removing graphView from parent layout, creating new graphview and adding new graphview - I do this sequence everytime user is changing the boundaries. Maybe it will help somebody (short snippet of createChart method, container is my parent layout):
new_qs_22k.csv	I need help creating a graph of my data	0.9999968	28118487	Create Bar-line graph using Report Viewer	asp.net-mvc-4c#-4.0chartsreportingreport-viewer2010	28417751	"<p>I figure out a way to do it in report viewer MVC4,which served by purpose. While creating the graph in report viewer and assigning the values to the data field area of the graph. You can change the graph type by <strong>right-click on the field -> choosing the change chart type and selecting the desired type</strong>.
By this way any combination of graphs could be created.</p>"	"<p>I figure out a way to do it in report viewer MVC4,which served by purpose. While creating the graph in report viewer and assigning the values to the data field area of the graph. You can change the graph type by <strong>right-click on the field -> choosing the change chart type and selecting the desired type</strong>.
By this way any combination of graphs could be created.</p>"	" I figure out a way to do it in report viewer MVC4,which served by purpose. While creating the graph in report viewer and assigning the values to the data field area of the graph. You can change the graph type by right-click on the field -> choosing the change chart type and selecting the desired type .
By this way any combination of graphs could be created."
new_qs_22k.csv	I need help creating a graph of my data	0.9999968	32223403	How to get user email on GraphRequest.newMeRequest	javaandroidfacebookfacebook-graph-apiparse-platform	32223997	"<p>I guess this is related to a change in the Graph API v2.4 which makes it necessary that you specify every field you want to have returned from the Graph API.</p>

<p>Have a look at my answer at </p>

<ul>
<li><a href=""https://stackoverflow.com/questions/31692355/facebook-only-returning-name-and-id-of-user/31692908#31692908"">Facebook only returning name and id of user</a></li>
</ul>

<p>regarding this</p>

<p>Concerning your actual problem, see</p>

<ul>
<li><a href=""https://developers.facebook.com/docs/android/graph#userdata"" rel=""noreferrer"">https://developers.facebook.com/docs/android/graph#userdata</a></li>
</ul>

<p>for an example on how to specify the fields for a <code>GraphRequest</code></p>

<pre><code>GraphRequest request = GraphRequest.newMeRequest(
        accessToken,
        new GraphRequest.GraphJSONObjectCallback() {
            @Override
            public void onCompleted(
                   JSONObject object,
                   GraphResponse response) {
                // Application code
            }
        });
Bundle parameters = new Bundle();
parameters.putString(""fields"", ""id,name,email"");
request.setParameters(parameters);
request.executeAsync();
</code></pre>"	"<p>I guess this is related to a change in the Graph API v2.4 which makes it necessary that you specify every field you want to have returned from the Graph API.</p>

<p>Have a look at my answer at </p>

<ul>
<li><a href=""https://stackoverflow.com/questions/31692355/facebook-only-returning-name-and-id-of-user/31692908#31692908"">Facebook only returning name and id of user</a></li>
</ul>

<p>regarding this</p>

<p>Concerning your actual problem, see</p>

<ul>
<li><a href=""https://developers.facebook.com/docs/android/graph#userdata"" rel=""noreferrer"">https://developers.facebook.com/docs/android/graph#userdata</a></li>
</ul>

<p>for an example on how to specify the fields for a <code>GraphRequest</code></p>

<pre><code>GraphRequest request = GraphRequest.newMeRequest(
        accessToken,
        new GraphRequest.GraphJSONObjectCallback() {
            @Override
            public void onCompleted(
                   JSONObject object,
                   GraphResponse response) {
                // Application code
            }
        });
Bundle parameters = new Bundle();
parameters.putString(""fields"", ""id,name,email"");
request.setParameters(parameters);
request.executeAsync();
</code></pre>"	 I guess this is related to a change in the Graph API v2.4 which makes it necessary that you specify every field you want to have returned from the Graph API. Have a look at my answer at Facebook only returning name and id of user regarding this Concerning your actual problem, see https://developers.facebook.com/docs/android/graph#userdata for an example on how to specify the fields for a
new_qs_22k.csv	I need help creating a graph of my data	0.9999968	13909297	Graph plotted using database doesn't plot in Android	androiddatabasesqlitebar-chartachartengine	13913205	"<p>You are creating a graph, which looks like it should (as far as I know). But I cannot find the place where you add the graph to the view. Shouldn't there be some kind <code>findViewById</code> where you add the created graph to the view. Or at least say to Android that it should draw the chart on the view somewhere, but even that I cannot find.</p>

<p>I don't have a lot of experience with creating charts in Android though.</p>"	"<p>You are creating a graph, which looks like it should (as far as I know). But I cannot find the place where you add the graph to the view. Shouldn't there be some kind <code>findViewById</code> where you add the created graph to the view. Or at least say to Android that it should draw the chart on the view somewhere, but even that I cannot find.</p>

<p>I don't have a lot of experience with creating charts in Android though.</p>"	 You are creating a graph, which looks like it should (as far as I know). But I cannot find the place where you add the graph to the view. Shouldn't there be some kind where you add the created graph to the view. Or at least say to Android that it should draw the chart on the view somewhere, but even that I cannot find. I don't have a lot of experience with creating charts in Android though.
new_qs_22k.csv	I need help creating a graph of my data	0.99999666	9980992	Generate dynamic graph from MySQL data	phpimagegraph	9981055	"<p>Great question one awesome solution that i have done is to use: <a href=""http://code.google.com/apis/chart/"">http://code.google.com/apis/chart/</a> The Google Chart has lots of great graphs etc.. you can use. What i did was look at the examples see how the data was formatted, then I wrote my query to match it.</p>"	"<p>Great question one awesome solution that i have done is to use: <a href=""http://code.google.com/apis/chart/"">http://code.google.com/apis/chart/</a> The Google Chart has lots of great graphs etc.. you can use. What i did was look at the examples see how the data was formatted, then I wrote my query to match it.</p>"	 Great question one awesome solution that i have done is to use: http://code.google.com/apis/chart/ The Google Chart has lots of great graphs etc.. you can use. What i did was look at the examples see how the data was formatted, then I wrote my query to match it.
new_qs_22k.csv	When should I use a scatter plot?	0.99999726	57145517	How to plot a 3d graph in python	pythonmatplotlibgraph3d	57149265	"<p>When using scatter with 3D axes you need to provide the Cartesian x,y-coordinates. Therefore you need to translate the strings used for the x-coordinates to numerical values. One way would be to use the number of days between each date in the list of dates and some reference date (e.g. the earliest date in the list) and reset the xtick labels afterwards, e.g.</p>

<pre><code>min_date = min(df.index)
days = [(dd-min_date).days for dd in df.index]
ax.scatter(days, volume, close, c='r', marker='o')
labels = ((min_date + pd.Timedelta(dd, unit='D')).date() for dd in ax.get_xticks())
ax.set_xticklabels(labels)
</code></pre>"	"<p>When using scatter with 3D axes you need to provide the Cartesian x,y-coordinates. Therefore you need to translate the strings used for the x-coordinates to numerical values. One way would be to use the number of days between each date in the list of dates and some reference date (e.g. the earliest date in the list) and reset the xtick labels afterwards, e.g.</p>

<pre><code>min_date = min(df.index)
days = [(dd-min_date).days for dd in df.index]
ax.scatter(days, volume, close, c='r', marker='o')
labels = ((min_date + pd.Timedelta(dd, unit='D')).date() for dd in ax.get_xticks())
ax.set_xticklabels(labels)
</code></pre>"	 When using scatter with 3D axes you need to provide the Cartesian x,y-coordinates. Therefore you need to translate the strings used for the x-coordinates to numerical values. One way would be to use the number of days between each date in the list of dates and some reference date (e.g. the earliest date in the list) and reset the xtick labels afterwards, e.g.
new_qs_22k.csv	When should I use a scatter plot?	0.99999726	29908874	x-axis inverted unexpectedly by pandas.plot(...)	pythonpandasmatplotlib	30297334	"<p>I asked this question on the <a href=""https://github.com/pydata/pandas/issues/10118"" rel=""nofollow noreferrer"">issue tracker of pandas</a>, and got answer. </p>

<p>daraframe.plot(..) is designed such that</p>

<ul>
<li>x coordinate of points is determined based on the index (i.e. row number) of the column specified by x parameter.</li>
<li>y coordinate of points is the value of the column specified by y parameter.</li>
</ul>

<p>For a scatter plot, I think the above design is not suitable. The only solution I can think of is to use plt.plot direclty.</p>

<p><a href=""https://stackoverflow.com/a/29912696/2727558"">cphlewis's workaround</a> is also useful.</p>"	"<p>I asked this question on the <a href=""https://github.com/pydata/pandas/issues/10118"" rel=""nofollow noreferrer"">issue tracker of pandas</a>, and got answer. </p>

<p>daraframe.plot(..) is designed such that</p>

<ul>
<li>x coordinate of points is determined based on the index (i.e. row number) of the column specified by x parameter.</li>
<li>y coordinate of points is the value of the column specified by y parameter.</li>
</ul>

<p>For a scatter plot, I think the above design is not suitable. The only solution I can think of is to use plt.plot direclty.</p>

<p><a href=""https://stackoverflow.com/a/29912696/2727558"">cphlewis's workaround</a> is also useful.</p>"	 I asked this question on the issue tracker of pandas , and got answer. daraframe.plot(..) is designed such that x coordinate of points is determined based on the index (i.e. row number) of the column specified by x parameter. y coordinate of points is the value of the column specified by y parameter. For a scatter plot, I think the above design is not suitable. The only solution I can think of is to use plt.plot direclty. cphlewis's workaround is also useful.
new_qs_22k.csv	When should I use a scatter plot?	0.99999726	43616882	pandas 3D plot for multiple dataframes	pythonpandasmatplotlibplotmplot3d	43623042	"<p>Here's one approach, using <a href=""http://pandas.pydata.org/pandas-docs/stable/generated/pandas.melt.html"" rel=""nofollow noreferrer""><code>melt</code></a> and <a href=""http://matplotlib.org/mpl_toolkits/mplot3d/api.html?highlight=axes3d#module-mpl_toolkits.mplot3d.axes3d"" rel=""nofollow noreferrer""><code>Axes3D</code></a>.  </p>

<p>First, generate the sample data provided by OP:</p>

<pre><code>import pandas as pd
from matplotlib import pyplot as plt
from mpl_toolkits.mplot3d import Axes3D

sample4_z = [1.09734,  1.25772,  1.4181 ,  1.57847,  1.73885,  1.06237,
             1.21307,  1.36378,  1.51448,  1.66518,  1.02176,  1.16346,
             1.30516,  1.44686,  1.58856,  0.97769,  1.11097,  1.24426,
             1.37754,  1.51083,  0.93162,  1.05702,  1.18241,  1.30781,  
             1.43321]

test5_z = [1.12427,  1.31545,  1.50663,  1.69781,  1.88899,  1.06327,
           1.24045,  1.41763,  1.59482,  1.772  ,  0.99875,  1.16302,
           1.3273 ,  1.49158,  1.65585,  0.93276,  1.08509,  1.23742,
           1.38975,  1.54208,  0.86668,  1.00792,  1.14916,  1.2904 , 
           1.43164]

test6_z = [1.08463,  1.30038,  1.51612,  1.73187,  1.94761,  0.99905,
           1.19626,  1.39346,  1.59067,  1.78788,  0.91255,  1.09283,
           1.2731 ,  1.45337,  1.63365,  0.82706,  0.99181,  1.15656,
           1.32131,  1.48605,  0.74381,  0.89429,  1.04477,  1.19525,  
           1.34572]

def make_df(data):
    x = [1.1, 1.11, 1.12, 1.13, 1.14]
    y = [20, 40, 60, 80, 100]
    z = np.array(data).reshape((len(x),len(y)))
    return pd.DataFrame(z, index=x, columns=y).reset_index().rename(columns={'index':'x'})

sample4 = make_df(sample4_z)
test5 = make_df(test5_z)
test6 = make_df(test6_z)
</code></pre>

<p>Now plot all three data frames on one 3D grid:</p>

<pre><code># signal to pyplot that we want 3d plots
fig, ax = plt.subplots(1, 1, figsize=(10, 10), subplot_kw={'projection': '3d'})

# convenience wrapper for plotting function
def plot_3d(df):
    ax.plot(df.x, df.y.astype(float), df.z) # dims must be floats

# reshape with melt(), then plot
plot_3d(pd.melt(sample4, id_vars='x', var_name='y', value_name='z'))
plot_3d(pd.melt(test5, id_vars='x', var_name='y', value_name='z'))
plot_3d(pd.melt(test6, id_vars='x', var_name='y', value_name='z'))

# label axes
ax.set_xlabel('x', fontsize=20)
ax.set_ylabel('y', fontsize=20)
ax.set_zlabel('z', fontsize=20)

# optional view configurations
ax.elev = 10
ax.axim = 20
</code></pre>

<p><a href=""https://i.stack.imgur.com/FRBzf.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/FRBzf.png"" alt=""3d plot""></a></p>

<p><strong>UPDATE</strong> re: y-axis as categorical<br>
With only two continuous-valued axes, it's generally not necessary (nor recommended) to invoke a 3D plotting surface (see, for example, <a href=""https://stackoverflow.com/a/24531294/2799941"">this similar discussion</a>).  It's clearer to encode the categorical variable as a labeled dimension.  </p>

<p>This case is additionally complicated by the sample group levels, which represent a fourth dimension.  I'd suggest considering a panel of plots, with y-axis categories encoded as legends.  Like this:</p>

<pre><code>datasets = ['sample4','test5','test6']
line_types = ['-.','--','-']
fix, axes = plt.subplots(1,3, figsize=(14,5))
for i, data in enumerate([sample4, test5, test6]):
    data.set_index('x').plot(style=line_types[i], ax=axes[i], sharey=True, 
                             xticks=data.x, title=datasets[i])
</code></pre>

<p><a href=""https://i.stack.imgur.com/bxHYu.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/bxHYu.png"" alt=""panel plots""></a></p>

<p>Still, if you really want to keep things in 3D, a scatter plot with the correct view rotation will give you the effect you're looking for. This also circumvents the problem of the y-axis being read as a metric variable, rather than an ordinal one.  </p>

<pre><code># scatter plot with categorical y-axis
def plot_3d(df, color):
    ax.scatter(df.x, df.y, df.z, c=color) # dims must be floats

# reshape with melt(), then plot
plot_3d(pd.melt(sample4, id_vars='x', var_name='y', value_name='z'), 'red')
plot_3d(pd.melt(test5, id_vars='x', var_name='y', value_name='z'), 'blue')
plot_3d(pd.melt(test6, id_vars='x', var_name='y', value_name='z'), 'green')

# label axes
ax.set_xlabel('x', fontsize=20)
ax.set_ylabel('y', fontsize=20)
ax.set_zlabel('z', fontsize=20)

# optional view configurations
ax.elev = 10
ax.azim = 280
</code></pre>

<p><a href=""https://i.stack.imgur.com/3DSGB.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/3DSGB.png"" alt=""3d scatter plot""></a></p>

<p>Note: It's possible to use the <a href=""http://matplotlib.org/mpl_toolkits/mplot3d/api.html?highlight=axes3d#mpl_toolkits.mplot3d.axes3d.Axes3D.bar3d"" rel=""nofollow noreferrer""><code>bar3d</code></a> class to treat one or more dimensions as categorical, but its cascading approach to multiple points with the same category value may not get you what you're looking for.</p>"	"<p>Here's one approach, using <a href=""http://pandas.pydata.org/pandas-docs/stable/generated/pandas.melt.html"" rel=""nofollow noreferrer""><code>melt</code></a> and <a href=""http://matplotlib.org/mpl_toolkits/mplot3d/api.html?highlight=axes3d#module-mpl_toolkits.mplot3d.axes3d"" rel=""nofollow noreferrer""><code>Axes3D</code></a>.  </p>

<p>First, generate the sample data provided by OP:</p>

<pre><code>import pandas as pd
from matplotlib import pyplot as plt
from mpl_toolkits.mplot3d import Axes3D

sample4_z = [1.09734,  1.25772,  1.4181 ,  1.57847,  1.73885,  1.06237,
             1.21307,  1.36378,  1.51448,  1.66518,  1.02176,  1.16346,
             1.30516,  1.44686,  1.58856,  0.97769,  1.11097,  1.24426,
             1.37754,  1.51083,  0.93162,  1.05702,  1.18241,  1.30781,  
             1.43321]

test5_z = [1.12427,  1.31545,  1.50663,  1.69781,  1.88899,  1.06327,
           1.24045,  1.41763,  1.59482,  1.772  ,  0.99875,  1.16302,
           1.3273 ,  1.49158,  1.65585,  0.93276,  1.08509,  1.23742,
           1.38975,  1.54208,  0.86668,  1.00792,  1.14916,  1.2904 , 
           1.43164]

test6_z = [1.08463,  1.30038,  1.51612,  1.73187,  1.94761,  0.99905,
           1.19626,  1.39346,  1.59067,  1.78788,  0.91255,  1.09283,
           1.2731 ,  1.45337,  1.63365,  0.82706,  0.99181,  1.15656,
           1.32131,  1.48605,  0.74381,  0.89429,  1.04477,  1.19525,  
           1.34572]

def make_df(data):
    x = [1.1, 1.11, 1.12, 1.13, 1.14]
    y = [20, 40, 60, 80, 100]
    z = np.array(data).reshape((len(x),len(y)))
    return pd.DataFrame(z, index=x, columns=y).reset_index().rename(columns={'index':'x'})

sample4 = make_df(sample4_z)
test5 = make_df(test5_z)
test6 = make_df(test6_z)
</code></pre>

<p>Now plot all three data frames on one 3D grid:</p>

<pre><code># signal to pyplot that we want 3d plots
fig, ax = plt.subplots(1, 1, figsize=(10, 10), subplot_kw={'projection': '3d'})

# convenience wrapper for plotting function
def plot_3d(df):
    ax.plot(df.x, df.y.astype(float), df.z) # dims must be floats

# reshape with melt(), then plot
plot_3d(pd.melt(sample4, id_vars='x', var_name='y', value_name='z'))
plot_3d(pd.melt(test5, id_vars='x', var_name='y', value_name='z'))
plot_3d(pd.melt(test6, id_vars='x', var_name='y', value_name='z'))

# label axes
ax.set_xlabel('x', fontsize=20)
ax.set_ylabel('y', fontsize=20)
ax.set_zlabel('z', fontsize=20)

# optional view configurations
ax.elev = 10
ax.axim = 20
</code></pre>

<p><a href=""https://i.stack.imgur.com/FRBzf.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/FRBzf.png"" alt=""3d plot""></a></p>

<p><strong>UPDATE</strong> re: y-axis as categorical<br>
With only two continuous-valued axes, it's generally not necessary (nor recommended) to invoke a 3D plotting surface (see, for example, <a href=""https://stackoverflow.com/a/24531294/2799941"">this similar discussion</a>).  It's clearer to encode the categorical variable as a labeled dimension.  </p>

<p>This case is additionally complicated by the sample group levels, which represent a fourth dimension.  I'd suggest considering a panel of plots, with y-axis categories encoded as legends.  Like this:</p>

<pre><code>datasets = ['sample4','test5','test6']
line_types = ['-.','--','-']
fix, axes = plt.subplots(1,3, figsize=(14,5))
for i, data in enumerate([sample4, test5, test6]):
    data.set_index('x').plot(style=line_types[i], ax=axes[i], sharey=True, 
                             xticks=data.x, title=datasets[i])
</code></pre>

<p><a href=""https://i.stack.imgur.com/bxHYu.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/bxHYu.png"" alt=""panel plots""></a></p>

<p>Still, if you really want to keep things in 3D, a scatter plot with the correct view rotation will give you the effect you're looking for. This also circumvents the problem of the y-axis being read as a metric variable, rather than an ordinal one.  </p>

<pre><code># scatter plot with categorical y-axis
def plot_3d(df, color):
    ax.scatter(df.x, df.y, df.z, c=color) # dims must be floats

# reshape with melt(), then plot
plot_3d(pd.melt(sample4, id_vars='x', var_name='y', value_name='z'), 'red')
plot_3d(pd.melt(test5, id_vars='x', var_name='y', value_name='z'), 'blue')
plot_3d(pd.melt(test6, id_vars='x', var_name='y', value_name='z'), 'green')

# label axes
ax.set_xlabel('x', fontsize=20)
ax.set_ylabel('y', fontsize=20)
ax.set_zlabel('z', fontsize=20)

# optional view configurations
ax.elev = 10
ax.azim = 280
</code></pre>

<p><a href=""https://i.stack.imgur.com/3DSGB.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/3DSGB.png"" alt=""3d scatter plot""></a></p>

<p>Note: It's possible to use the <a href=""http://matplotlib.org/mpl_toolkits/mplot3d/api.html?highlight=axes3d#mpl_toolkits.mplot3d.axes3d.Axes3D.bar3d"" rel=""nofollow noreferrer""><code>bar3d</code></a> class to treat one or more dimensions as categorical, but its cascading approach to multiple points with the same category value may not get you what you're looking for.</p>"	 Here's one approach, using and . First, generate the sample data provided by OP: Now plot all three data frames on one 3D grid: UPDATE re: y-axis as categorical With only two continuous-valued axes, it's generally not necessary (nor recommended) to invoke a 3D plotting surface (see, for example, this similar discussion ).  It's clearer to encode the categorical variable as a labeled dimension. This case is additionally complicated by the sample group levels, which represent a fourth dimension.  I'd suggest considering a panel of plots, with y-axis categories encoded as legends.  Like this: Still, if you really want to keep things in 3D, a scatter plot with the correct view rotation will give you the effect you're looking for. This also circumvents the problem of the y-axis being read as a metric variable, rather than an ordinal one. Note: It's possible to use the class to treat one or more dimensions as categorical, but its cascading approach to multiple points with the same category value may not get you what you're looking for.
new_qs_22k.csv	When should I use a scatter plot?	0.99999726	15221988	How to join efficiently multiple rgl plots into one single plot?	rplotggplot2pngrgl	15229481	"<p>Here's a solution using the <strong>grid</strong> function<code>grid.raster</code> and <code>xyplot</code> from <strong>lattice</strong>. 
I think that <code>grid.raster</code> has faster
rendering to screen, so it is a good candidate  for performance. I am choosing lattice because it integrate easier the grid function using the panel customization.</p>

<p><img src=""https://i.stack.imgur.com/bES57.png"" alt=""enter image description here""></p>

<p>First I read all the png, using <code>readPNG</code> from <code>png</code> package ( similar to your solution)</p>

<pre><code>ll &lt;- list.files(path='c:/temp',patt='compo[0-9].*',full.names=T)
library(png)
imgs &lt;- lapply(ll,function(x){
       as.raster(readPNG(x))  ## no need to convert to a matrix here!
   })
</code></pre>

<p>Then I prepare data for scatter plot:</p>

<pre><code>x = 1:4   ## here 4 because I use  16 plots
y = 1:4
dat &lt;- expand.grid(x,y)
</code></pre>

<p>Finaly I use <code>xyplot</code> with a custom panel function:</p>

<pre><code>library(lattice)
library(grid)
xyplot(Var2~Var1|rownames(dat),data=dat,layout=c(4,4),
      panel=function(x,y,...){
        lims &lt;- current.panel.limits()
        grid.raster(image =imgs[[panel.number()]],sum(lims$xlim)/2,sum(lims$ylim)/2,
                                      width =diff(lims$xlim),
                                          height=diff(lims$ylim),def='native' )

       })
</code></pre>

<p>PS: it is what I call a <strong>catty</strong> solution.</p>"	"<p>Here's a solution using the <strong>grid</strong> function<code>grid.raster</code> and <code>xyplot</code> from <strong>lattice</strong>. 
I think that <code>grid.raster</code> has faster
rendering to screen, so it is a good candidate  for performance. I am choosing lattice because it integrate easier the grid function using the panel customization.</p>

<p><img src=""https://i.stack.imgur.com/bES57.png"" alt=""enter image description here""></p>

<p>First I read all the png, using <code>readPNG</code> from <code>png</code> package ( similar to your solution)</p>

<pre><code>ll &lt;- list.files(path='c:/temp',patt='compo[0-9].*',full.names=T)
library(png)
imgs &lt;- lapply(ll,function(x){
       as.raster(readPNG(x))  ## no need to convert to a matrix here!
   })
</code></pre>

<p>Then I prepare data for scatter plot:</p>

<pre><code>x = 1:4   ## here 4 because I use  16 plots
y = 1:4
dat &lt;- expand.grid(x,y)
</code></pre>

<p>Finaly I use <code>xyplot</code> with a custom panel function:</p>

<pre><code>library(lattice)
library(grid)
xyplot(Var2~Var1|rownames(dat),data=dat,layout=c(4,4),
      panel=function(x,y,...){
        lims &lt;- current.panel.limits()
        grid.raster(image =imgs[[panel.number()]],sum(lims$xlim)/2,sum(lims$ylim)/2,
                                      width =diff(lims$xlim),
                                          height=diff(lims$ylim),def='native' )

       })
</code></pre>

<p>PS: it is what I call a <strong>catty</strong> solution.</p>"	" Here's a solution using the grid function and from lattice . 
I think that has faster
rendering to screen, so it is a good candidate  for performance. I am choosing lattice because it integrate easier the grid function using the panel customization. First I read all the png, using from package ( similar to your solution) Then I prepare data for scatter plot: Finaly I use with a custom panel function: PS: it is what I call a catty solution."
new_qs_22k.csv	When should I use a scatter plot?	0.99999714	57626286	How to plot text clusters?	pythonmatplotlibscikit-learn	57664299	"<p>There are several moving pieces to this question:</p>

<ol>
<li>How to vectorize text to data that kmeans clustering can understand</li>
<li>How to plot clusters in two dimensional space</li>
<li>How to label plots by source sentence</li>
</ol>

<p>My solution follows a very common approach, which is to use the kmeans labels as colors for the scatter plot. (The kmeans values after fitting are just 0,1,2,3, and 4, indicating which arbitrary group each sentence was assigned to. The output is in the same order as the original samples.) Regarding how to get the points into two dimensional space, I use Principal Component Analysis (PCA). Note that I perform kmeans clustering on the full data, not the dimension-reduced output. I then use matplotlib's ax.annotate() to decorate my plot with the original sentences. (I also make the graph bigger so there's space between the points.) I can comment this further upon request.</p>

<pre><code>import pandas as pd
import re
from sklearn.decomposition import PCA
from sklearn.feature_extraction.text import CountVectorizer
from sklearn.cluster import KMeans
import matplotlib.pyplot as plt

x = ['this is very good show' , 'i had a great time on my school trip', 'such a boring movie', 'Springbreak was amazing', 'You are wrong', 'This food is so tasty', 'I had so much fun last night', 'This is crap', 'I had a bad time last month',
    'i love this product' , 'this is an amazing item', 'this food is delicious', 'I had a great time last night', 'thats right',
     'this is my favourite restaurant' , 'i love this food, its so good', 'skiing is the best sport', 'what is this', 'this product has a lot of bugs',
     'I love basketball, its very dynamic' , 'its a shame that you missed the trip', 'game last night was amazing', 'Party last night was so boring',
     'such a nice song' , 'this is the best movie ever', 'hawaii is the best place for trip','how that happened','This is my favourite band',
     'I cant believe that you did that', 'Why are you doing that, I do not gete it', 'this is tasty', 'this song is amazing']

cv = CountVectorizer(analyzer = 'word', max_features = 5000, lowercase=True, preprocessor=None, tokenizer=None, stop_words = 'english')  
vectors = cv.fit_transform(x)
kmeans = KMeans(n_clusters = 5, init = 'k-means++', random_state = 0)
kmean_indices = kmeans.fit_predict(vectors)

pca = PCA(n_components=2)
scatter_plot_points = pca.fit_transform(vectors.toarray())

colors = [""r"", ""b"", ""c"", ""y"", ""m"" ]

x_axis = [o[0] for o in scatter_plot_points]
y_axis = [o[1] for o in scatter_plot_points]
fig, ax = plt.subplots(figsize=(20,10))

ax.scatter(x_axis, y_axis, c=[colors[d] for d in kmean_indices])

for i, txt in enumerate(x):
    ax.annotate(txt, (x_axis[i], y_axis[i]))
</code></pre>

<p><a href=""https://i.stack.imgur.com/UDIP8.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/UDIP8.png"" alt=""enter image description here""></a></p>"	"<p>There are several moving pieces to this question:</p>

<ol>
<li>How to vectorize text to data that kmeans clustering can understand</li>
<li>How to plot clusters in two dimensional space</li>
<li>How to label plots by source sentence</li>
</ol>

<p>My solution follows a very common approach, which is to use the kmeans labels as colors for the scatter plot. (The kmeans values after fitting are just 0,1,2,3, and 4, indicating which arbitrary group each sentence was assigned to. The output is in the same order as the original samples.) Regarding how to get the points into two dimensional space, I use Principal Component Analysis (PCA). Note that I perform kmeans clustering on the full data, not the dimension-reduced output. I then use matplotlib's ax.annotate() to decorate my plot with the original sentences. (I also make the graph bigger so there's space between the points.) I can comment this further upon request.</p>

<pre><code>import pandas as pd
import re
from sklearn.decomposition import PCA
from sklearn.feature_extraction.text import CountVectorizer
from sklearn.cluster import KMeans
import matplotlib.pyplot as plt

x = ['this is very good show' , 'i had a great time on my school trip', 'such a boring movie', 'Springbreak was amazing', 'You are wrong', 'This food is so tasty', 'I had so much fun last night', 'This is crap', 'I had a bad time last month',
    'i love this product' , 'this is an amazing item', 'this food is delicious', 'I had a great time last night', 'thats right',
     'this is my favourite restaurant' , 'i love this food, its so good', 'skiing is the best sport', 'what is this', 'this product has a lot of bugs',
     'I love basketball, its very dynamic' , 'its a shame that you missed the trip', 'game last night was amazing', 'Party last night was so boring',
     'such a nice song' , 'this is the best movie ever', 'hawaii is the best place for trip','how that happened','This is my favourite band',
     'I cant believe that you did that', 'Why are you doing that, I do not gete it', 'this is tasty', 'this song is amazing']

cv = CountVectorizer(analyzer = 'word', max_features = 5000, lowercase=True, preprocessor=None, tokenizer=None, stop_words = 'english')  
vectors = cv.fit_transform(x)
kmeans = KMeans(n_clusters = 5, init = 'k-means++', random_state = 0)
kmean_indices = kmeans.fit_predict(vectors)

pca = PCA(n_components=2)
scatter_plot_points = pca.fit_transform(vectors.toarray())

colors = [""r"", ""b"", ""c"", ""y"", ""m"" ]

x_axis = [o[0] for o in scatter_plot_points]
y_axis = [o[1] for o in scatter_plot_points]
fig, ax = plt.subplots(figsize=(20,10))

ax.scatter(x_axis, y_axis, c=[colors[d] for d in kmean_indices])

for i, txt in enumerate(x):
    ax.annotate(txt, (x_axis[i], y_axis[i]))
</code></pre>

<p><a href=""https://i.stack.imgur.com/UDIP8.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/UDIP8.png"" alt=""enter image description here""></a></p>"	 There are several moving pieces to this question: How to vectorize text to data that kmeans clustering can understand How to plot clusters in two dimensional space How to label plots by source sentence My solution follows a very common approach, which is to use the kmeans labels as colors for the scatter plot. (The kmeans values after fitting are just 0,1,2,3, and 4, indicating which arbitrary group each sentence was assigned to. The output is in the same order as the original samples.) Regarding how to get the points into two dimensional space, I use Principal Component Analysis (PCA). Note that I perform kmeans clustering on the full data, not the dimension-reduced output. I then use matplotlib's ax.annotate() to decorate my plot with the original sentences. (I also make the graph bigger so there's space between the points.) I can comment this further upon request.
new_qs_22k.csv	How do I plot 2 datasets in d3?	0.99999714	56397108	How can I select specific values from list and plot a seaborn boxplot?	python-3.xseabornboxplotnumpy-ndarray	56398379	"<p>I modified your example data a bit just to make it easier.</p>

<pre><code>import seaborn as sns
import pandas as pd
import numpy as np

data = [[1.236762285232544, 1.2303414344787598, 1.196462631225586, 1.1787045001983643, 1.1760116815567017, 1.1614983081817627, 1.1546586751937866], 
        [1.1349891424179077, 1.1338907480239868, 1.1239897012710571, 1.1173863410949707, 1.1015456914901733, 1.1005324125289917, 1.1005228757858276]]
</code></pre>

<p>To sort your data, since it is in list format and not <code>numpy arrays</code>, you can use the <code>sorted</code> function with a key to tell it to perform an operation on each list in your list, which is how the function will sort. Setting <code>reverse = True</code> tells it to sort highest to lowest.</p>

<pre><code>sorted_data = sorted(data, key = lambda x: np.median(x), reverse = True)
</code></pre>

<p>To select the top <code>n</code> lists, add <code>[:n]</code> to the end of the previous statement.</p>

<p>To plot in Seaborn, it's easiest to convert your data to a <code>pandas.DataFrame</code>.</p>

<pre><code>df = pd.DataFrame(data).T
</code></pre>

<p>That makes a DataFrame with 10 columns (or 2 in this example). We can rename the columns to make each dataset clearer.</p>

<pre><code>df = df.rename(columns={k: f'Data{k+1}' for k in range(len(sorted_data))}).reset_index()
</code></pre>

<p>And to plot 2 (or 10) boxplots in one plot, you can reshape the dataframe to have 2 columns, one for the data and one for the dataset number (ID) (credit <a href=""https://stackoverflow.com/a/45865672/10852841"">here</a>).</p>

<pre><code>df = pd.wide_to_long(df, stubnames = ['Data'], i = 'index', j = 'ID').reset_index()[['ID', 'Data']]
</code></pre>

<p>And then you can plot it.</p>

<pre><code>sns.boxplot(x='ID', y = 'Data', data = df)
</code></pre>

<p><a href=""https://i.stack.imgur.com/myXir.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/myXir.png"" alt=""enter image description here""></a></p>"	"<p>I modified your example data a bit just to make it easier.</p>

<pre><code>import seaborn as sns
import pandas as pd
import numpy as np

data = [[1.236762285232544, 1.2303414344787598, 1.196462631225586, 1.1787045001983643, 1.1760116815567017, 1.1614983081817627, 1.1546586751937866], 
        [1.1349891424179077, 1.1338907480239868, 1.1239897012710571, 1.1173863410949707, 1.1015456914901733, 1.1005324125289917, 1.1005228757858276]]
</code></pre>

<p>To sort your data, since it is in list format and not <code>numpy arrays</code>, you can use the <code>sorted</code> function with a key to tell it to perform an operation on each list in your list, which is how the function will sort. Setting <code>reverse = True</code> tells it to sort highest to lowest.</p>

<pre><code>sorted_data = sorted(data, key = lambda x: np.median(x), reverse = True)
</code></pre>

<p>To select the top <code>n</code> lists, add <code>[:n]</code> to the end of the previous statement.</p>

<p>To plot in Seaborn, it's easiest to convert your data to a <code>pandas.DataFrame</code>.</p>

<pre><code>df = pd.DataFrame(data).T
</code></pre>

<p>That makes a DataFrame with 10 columns (or 2 in this example). We can rename the columns to make each dataset clearer.</p>

<pre><code>df = df.rename(columns={k: f'Data{k+1}' for k in range(len(sorted_data))}).reset_index()
</code></pre>

<p>And to plot 2 (or 10) boxplots in one plot, you can reshape the dataframe to have 2 columns, one for the data and one for the dataset number (ID) (credit <a href=""https://stackoverflow.com/a/45865672/10852841"">here</a>).</p>

<pre><code>df = pd.wide_to_long(df, stubnames = ['Data'], i = 'index', j = 'ID').reset_index()[['ID', 'Data']]
</code></pre>

<p>And then you can plot it.</p>

<pre><code>sns.boxplot(x='ID', y = 'Data', data = df)
</code></pre>

<p><a href=""https://i.stack.imgur.com/myXir.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/myXir.png"" alt=""enter image description here""></a></p>"	 I modified your example data a bit just to make it easier. To sort your data, since it is in list format and not , you can use the function with a key to tell it to perform an operation on each list in your list, which is how the function will sort. Setting tells it to sort highest to lowest. To select the top lists, add to the end of the previous statement. To plot in Seaborn, it's easiest to convert your data to a . That makes a DataFrame with 10 columns (or 2 in this example). We can rename the columns to make each dataset clearer. And to plot 2 (or 10) boxplots in one plot, you can reshape the dataframe to have 2 columns, one for the data and one for the dataset number (ID) (credit here ). And then you can plot it.
new_qs_22k.csv	How do I plot 2 datasets in d3?	0.99999714	33220566	Plot time-series data in POSIXct form as boxplots using ggplot2	rggplot2boxplot	33228141	"<p>Note: Dataset used in this answer is entirely different than the one specified in question</p>

<p>On conversion of POSIXct form to factor, following script can be used:</p>

<pre><code>    #First convert timestamp to months format and use levels so that final output 
    #is presented in chronological order and not in alphabetical order
    dats$timestamp &lt;- factor(strftime(dats$timestamp,""%b""),levels = month.abb)
    ggplot(dats) +geom_boxplot(aes(x=timestamp,y=power))    +
      theme(axis.text.x = element_text(angle=90,hjust=1)) + xlab(""Time Period"") +ylab(""Power"")  
</code></pre>

<p>The final plot is:
<a href=""https://i.stack.imgur.com/RQx6m.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/RQx6m.png"" alt=""enter image description here""></a>
<strong>UPDATE</strong>
Without time conversion,i.e., directly based on POSIXct timestamps,I did it as</p>

<pre><code>ggplot(dats) +geom_boxplot(aes(x=timestamp,y=power, group=months(timestamp)))+
    theme(axis.text.x = element_text(angle=90,hjust=1)) + xlab(""Time Period"") +ylab(""Power"") +
    scale_x_datetime(breaks=""1 month"", labels = date_format(""%b""))
</code></pre>

<p>I want the same type of plot using POSIXct form.</p>"	"<p>Note: Dataset used in this answer is entirely different than the one specified in question</p>

<p>On conversion of POSIXct form to factor, following script can be used:</p>

<pre><code>    #First convert timestamp to months format and use levels so that final output 
    #is presented in chronological order and not in alphabetical order
    dats$timestamp &lt;- factor(strftime(dats$timestamp,""%b""),levels = month.abb)
    ggplot(dats) +geom_boxplot(aes(x=timestamp,y=power))    +
      theme(axis.text.x = element_text(angle=90,hjust=1)) + xlab(""Time Period"") +ylab(""Power"")  
</code></pre>

<p>The final plot is:
<a href=""https://i.stack.imgur.com/RQx6m.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/RQx6m.png"" alt=""enter image description here""></a>
<strong>UPDATE</strong>
Without time conversion,i.e., directly based on POSIXct timestamps,I did it as</p>

<pre><code>ggplot(dats) +geom_boxplot(aes(x=timestamp,y=power, group=months(timestamp)))+
    theme(axis.text.x = element_text(angle=90,hjust=1)) + xlab(""Time Period"") +ylab(""Power"") +
    scale_x_datetime(breaks=""1 month"", labels = date_format(""%b""))
</code></pre>

<p>I want the same type of plot using POSIXct form.</p>"	 Note: Dataset used in this answer is entirely different than the one specified in question On conversion of POSIXct form to factor, following script can be used: The final plot is: UPDATE Without time conversion,i.e., directly based on POSIXct timestamps,I did it as I want the same type of plot using POSIXct form.
new_qs_22k.csv	How do I plot 2 datasets in d3?	0.999997	24005811	Flotchart with stack plugin, handling empty arrays	ajaxjsonchartsstackflot	24010367	"<p>You could replace</p>

<pre><code>var vals= [ d1, d2, d3];
</code></pre>

<p>with</p>

<pre><code>var vals = [];
if (d1 != [])
    vals.push(d1);
if (d2 != [])
    vals.push(d2);
if (d3 != [])
    vals.push(d3);
</code></pre>

<p>So only not-empty arrays are added to the plot data.</p>

<p>Btw: You overwrite d1, d2, d3 with the forth to sixth <code>getJSON</code> call. Is that what you want to do? You could then do without the first three <code>getJSON</code> calls since they do nothing for you.</p>"	"<p>You could replace</p>

<pre><code>var vals= [ d1, d2, d3];
</code></pre>

<p>with</p>

<pre><code>var vals = [];
if (d1 != [])
    vals.push(d1);
if (d2 != [])
    vals.push(d2);
if (d3 != [])
    vals.push(d3);
</code></pre>

<p>So only not-empty arrays are added to the plot data.</p>

<p>Btw: You overwrite d1, d2, d3 with the forth to sixth <code>getJSON</code> call. Is that what you want to do? You could then do without the first three <code>getJSON</code> calls since they do nothing for you.</p>"	 You could replace with So only not-empty arrays are added to the plot data. Btw: You overwrite d1, d2, d3 with the forth to sixth call. Is that what you want to do? You could then do without the first three calls since they do nothing for you.
new_qs_22k.csv	How do I plot 2 datasets in d3?	0.9999969	8840255	Django and interactive graph/network visualization	djangographvisualizationsocial-networking	8934411	"<p>I like <a href=""http://mbostock.github.com/d3/"" rel=""nofollow"">d3</a>. Here's an example of a <a href=""http://mbostock.github.com/d3/ex/force.html"" rel=""nofollow"">force-directed graph</a> (often used to display social networks).</p>

<p>It would be fairly easy to add the kind of click handling you're seeking to the d3 force example.</p>"	"<p>I like <a href=""http://mbostock.github.com/d3/"" rel=""nofollow"">d3</a>. Here's an example of a <a href=""http://mbostock.github.com/d3/ex/force.html"" rel=""nofollow"">force-directed graph</a> (often used to display social networks).</p>

<p>It would be fairly easy to add the kind of click handling you're seeking to the d3 force example.</p>"	 I like d3 . Here's an example of a force-directed graph (often used to display social networks). It would be fairly easy to add the kind of click handling you're seeking to the d3 force example.
new_qs_22k.csv	How do I plot 2 datasets in d3?	0.9999969	48331268	Display only values from the data set into X axis ticks	javascriptd3.jschartslinechart	48331540	"<p>This is the expected behaviour for a time scale. In D3, the axis is automatically generated, you don't have much control on the ticks.</p>

<p>The easiest alternative seems to be passing an array of the dates you have in your data to <code>tickValues</code>:</p>

<pre><code>var axis = d3.axisBottom(scale)
    .tickValues(uniqueValues);
</code></pre>

<p>Here, <code>uniqueValues</code> is an array with the dates you have in your CSV, filtered to only unique dates (otherwise you'll have several ticks in the same position).</p>

<p>here is the demo with the CSV you shared:</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""true"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code snippet-currently-hidden"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>var svg = d3.select(""svg"");
var csv = `date,close 
16-Dec-12,53.98
16-Dec-12,67.00
16-Dec-12,89.70
16-Dec-12,99.00
16-Dec-12,130.28
23-Dec-12,166.70
23-Dec-12,234.98
23-Dec-12,345.44
23-Dec-12,443.34
23-Dec-12,543.70
23-Dec-12,580.13
30-Dec-12,605.23
30-Dec-12,622.77
30-Dec-12,626.20
30-Dec-12,628.44
30-Dec-12,636.23
30-Dec-12,633.68`;
var data = d3.csvParse(csv, function(d) {
  d.date = d3.timeParse(""%d-%b-%y"")(d.date);
  return d
});
var uniqueValues = [...new Set(data.map(function(d) {
  return d.date.getTime()
}))].map(function(d) {
  return new Date(d);
});
var scale = d3.scaleTime()
  .range([30, 570])
  .domain(d3.extent(data, function(d) {
    return d.date
  }));
var axis = d3.axisBottom(scale)
  .tickValues(uniqueValues);
var gX = svg.append(""g"")
  .attr(""transform"", ""translate(0,50)"")
  .call(axis);</code></pre>
<pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;script src=""https://d3js.org/d3.v4.min.js""&gt;&lt;/script&gt;
&lt;svg width=""600"" height=""100""&gt;&lt;/svg&gt;</code></pre>
</div>
</div>
</p>

<p>PS: I'm using D3 v4 in the demo, but the principle is the same.</p>"	"<p>This is the expected behaviour for a time scale. In D3, the axis is automatically generated, you don't have much control on the ticks.</p>

<p>The easiest alternative seems to be passing an array of the dates you have in your data to <code>tickValues</code>:</p>

<pre><code>var axis = d3.axisBottom(scale)
    .tickValues(uniqueValues);
</code></pre>

<p>Here, <code>uniqueValues</code> is an array with the dates you have in your CSV, filtered to only unique dates (otherwise you'll have several ticks in the same position).</p>

<p>here is the demo with the CSV you shared:</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""true"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code snippet-currently-hidden"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>var svg = d3.select(""svg"");
var csv = `date,close 
16-Dec-12,53.98
16-Dec-12,67.00
16-Dec-12,89.70
16-Dec-12,99.00
16-Dec-12,130.28
23-Dec-12,166.70
23-Dec-12,234.98
23-Dec-12,345.44
23-Dec-12,443.34
23-Dec-12,543.70
23-Dec-12,580.13
30-Dec-12,605.23
30-Dec-12,622.77
30-Dec-12,626.20
30-Dec-12,628.44
30-Dec-12,636.23
30-Dec-12,633.68`;
var data = d3.csvParse(csv, function(d) {
  d.date = d3.timeParse(""%d-%b-%y"")(d.date);
  return d
});
var uniqueValues = [...new Set(data.map(function(d) {
  return d.date.getTime()
}))].map(function(d) {
  return new Date(d);
});
var scale = d3.scaleTime()
  .range([30, 570])
  .domain(d3.extent(data, function(d) {
    return d.date
  }));
var axis = d3.axisBottom(scale)
  .tickValues(uniqueValues);
var gX = svg.append(""g"")
  .attr(""transform"", ""translate(0,50)"")
  .call(axis);</code></pre>
<pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;script src=""https://d3js.org/d3.v4.min.js""&gt;&lt;/script&gt;
&lt;svg width=""600"" height=""100""&gt;&lt;/svg&gt;</code></pre>
</div>
</div>
</p>

<p>PS: I'm using D3 v4 in the demo, but the principle is the same.</p>"	 This is the expected behaviour for a time scale. In D3, the axis is automatically generated, you don't have much control on the ticks. The easiest alternative seems to be passing an array of the dates you have in your data to : Here, is an array with the dates you have in your CSV, filtered to only unique dates (otherwise you'll have several ticks in the same position). here is the demo with the CSV you shared: PS: I'm using D3 v4 in the demo, but the principle is the same.
new_qs_22k.csv	How can I animate a bar chart in Python?	0.99999726	35517726	c3 getting bar length and width or x/y coordinates	bar-chartc3.js	35551703	"<ol>
<li>You can access a chart's x and y scales via its 'internal' property to calculate points from the same data that was used to generate the bar chart as per this answer --></li>
</ol>

<p><a href=""https://stackoverflow.com/questions/31144955/how-do-i-use-retrieve-the-c3-scale-function-post-generate"">How do I use/retrieve the C3 scale function post generate?</a></p>

<ol start=""2"">
<li>If you want the coordinates of the rendered bars you can select them all with d3.selectAll("".c3-bar""), - replace 'd3' with a particular svg selection if you have multiple charts - but as they are path elements rather than rects you'd have to do some parsing of the path's 'd' attribute (d for path info, not data) to get useful x/y coords out of them</li>
</ol>

<p>Bear in mind in both cases the returned numbers will be offsets to some 'g' element container</p>"	"<ol>
<li>You can access a chart's x and y scales via its 'internal' property to calculate points from the same data that was used to generate the bar chart as per this answer --></li>
</ol>

<p><a href=""https://stackoverflow.com/questions/31144955/how-do-i-use-retrieve-the-c3-scale-function-post-generate"">How do I use/retrieve the C3 scale function post generate?</a></p>

<ol start=""2"">
<li>If you want the coordinates of the rendered bars you can select them all with d3.selectAll("".c3-bar""), - replace 'd3' with a particular svg selection if you have multiple charts - but as they are path elements rather than rects you'd have to do some parsing of the path's 'd' attribute (d for path info, not data) to get useful x/y coords out of them</li>
</ol>

<p>Bear in mind in both cases the returned numbers will be offsets to some 'g' element container</p>"	" You can access a chart's x and y scales via its 'internal' property to calculate points from the same data that was used to generate the bar chart as per this answer --> How do I use/retrieve the C3 scale function post generate? If you want the coordinates of the rendered bars you can select them all with d3.selectAll("".c3-bar""), - replace 'd3' with a particular svg selection if you have multiple charts - but as they are path elements rather than rects you'd have to do some parsing of the path's 'd' attribute (d for path info, not data) to get useful x/y coords out of them Bear in mind in both cases the returned numbers will be offsets to some 'g' element container"
new_qs_22k.csv	How can I animate a bar chart in Python?	0.99999714	47826641	Ngx-charts can't load bar charts directly with async pipe in angular	javascriptangularobservableangular-pipengx-charts	47827083	"<h1>Cause</h1>

<p>This is happening because the component cannot work with <code>null</code> values for <code>results</code>. </p>

<h1>Why?</h1>

<p>Async pipe is, as you say, used when you do not want to (or do not need to) subscribe in the component code, but do it in the template instead. Pipe, however, is a pure function: is has to return <em>something</em> each time it's called.</p>

<p>When th async pipe is called before data has arrived from the server, the pipe returns <code>null</code>, having no better value to offer.</p>

<p>Based on the screeshot of the error trace, it looks like <code>ngx-charts-bar-vertical</code> does not work when <code>results</code> is set to <code>null</code> and it breaks then.</p>

<h1>A fix</h1>

<p>You need to not render the bar chart component at all while data is not present. You can do this by utilizing the <code>NgIf</code> directive, which allows you to do a binding in the template with <code>as</code>. Super-useful for exactly these cases where you want to conditionally show a part of the template, but then re-use this value again.</p>

<pre><code>&lt;ngx-charts-bar-vertical *ngIf=""surveyAnswers | async as answers""
                         [results]=""answers""
&gt;&lt;/ngx-charts-bar-vertical&gt;
</code></pre>

<p>While <code>surveryAnswers</code> observable doesnt emit anything, the component will not be rendred, thus there will be no error. When it emits, <code>async</code> pipe will catch that, trigger CD and it won't be <code>null</code> anymore -- it will be a truthy value, which then gets fed into a variable called <code>answers</code> that we use to feed into the <code>results</code> input of the component.</p>"	"<h1>Cause</h1>

<p>This is happening because the component cannot work with <code>null</code> values for <code>results</code>. </p>

<h1>Why?</h1>

<p>Async pipe is, as you say, used when you do not want to (or do not need to) subscribe in the component code, but do it in the template instead. Pipe, however, is a pure function: is has to return <em>something</em> each time it's called.</p>

<p>When th async pipe is called before data has arrived from the server, the pipe returns <code>null</code>, having no better value to offer.</p>

<p>Based on the screeshot of the error trace, it looks like <code>ngx-charts-bar-vertical</code> does not work when <code>results</code> is set to <code>null</code> and it breaks then.</p>

<h1>A fix</h1>

<p>You need to not render the bar chart component at all while data is not present. You can do this by utilizing the <code>NgIf</code> directive, which allows you to do a binding in the template with <code>as</code>. Super-useful for exactly these cases where you want to conditionally show a part of the template, but then re-use this value again.</p>

<pre><code>&lt;ngx-charts-bar-vertical *ngIf=""surveyAnswers | async as answers""
                         [results]=""answers""
&gt;&lt;/ngx-charts-bar-vertical&gt;
</code></pre>

<p>While <code>surveryAnswers</code> observable doesnt emit anything, the component will not be rendred, thus there will be no error. When it emits, <code>async</code> pipe will catch that, trigger CD and it won't be <code>null</code> anymore -- it will be a truthy value, which then gets fed into a variable called <code>answers</code> that we use to feed into the <code>results</code> input of the component.</p>"	 Cause This is happening because the component cannot work with values for . Why? Async pipe is, as you say, used when you do not want to (or do not need to) subscribe in the component code, but do it in the template instead. Pipe, however, is a pure function: is has to return something each time it's called. When th async pipe is called before data has arrived from the server, the pipe returns , having no better value to offer. Based on the screeshot of the error trace, it looks like does not work when is set to and it breaks then. A fix You need to not render the bar chart component at all while data is not present. You can do this by utilizing the directive, which allows you to do a binding in the template with . Super-useful for exactly these cases where you want to conditionally show a part of the template, but then re-use this value again. While observable doesnt emit anything, the component will not be rendred, thus there will be no error. When it emits, pipe will catch that, trigger CD and it won't be anymore -- it will be a truthy value, which then gets fed into a variable called that we use to feed into the input of the component.
new_qs_22k.csv	How can I animate a bar chart in Python?	0.99999714	11900879	Jasper Bar Chart Label Truncation	jasper-reportsireportjfreechart	11910841	"<p>In short, no: there's no simple property you can set to ensure that the entire label gets shown. For the most part this is really a JFreeChart question rather than a JasperReports question, since it's JFreeChart which renders the chart image.</p>

<p>Often the simplest solution is to rotate the labels. This gives them more room. Try them at 45 or 90 degrees to see if that's an acceptable solution.</p>

<p>It's also possible to write a chart customizer to control the behavior more precisely. I wrote an article a while back about <a href=""http://mdahlman.wordpress.com/2011/04/17/chart-customizers-2/"" rel=""nofollow"">chart customizers</a> where I cover exactly the example of handling longer labels in bar charts. It might be useful for you.</p>"	"<p>In short, no: there's no simple property you can set to ensure that the entire label gets shown. For the most part this is really a JFreeChart question rather than a JasperReports question, since it's JFreeChart which renders the chart image.</p>

<p>Often the simplest solution is to rotate the labels. This gives them more room. Try them at 45 or 90 degrees to see if that's an acceptable solution.</p>

<p>It's also possible to write a chart customizer to control the behavior more precisely. I wrote an article a while back about <a href=""http://mdahlman.wordpress.com/2011/04/17/chart-customizers-2/"" rel=""nofollow"">chart customizers</a> where I cover exactly the example of handling longer labels in bar charts. It might be useful for you.</p>"	 In short, no: there's no simple property you can set to ensure that the entire label gets shown. For the most part this is really a JFreeChart question rather than a JasperReports question, since it's JFreeChart which renders the chart image. Often the simplest solution is to rotate the labels. This gives them more room. Try them at 45 or 90 degrees to see if that's an acceptable solution. It's also possible to write a chart customizer to control the behavior more precisely. I wrote an article a while back about chart customizers where I cover exactly the example of handling longer labels in bar charts. It might be useful for you.
new_qs_22k.csv	How can I animate a bar chart in Python?	0.99999714	21833783	SSRS: Custom bar width between multi-level categories	reporting-servicesssrs-2008bar-chart	21866526	"<p>As far as I know, there is no way to adjust the spacing between self-imposed groups of bars. However, there is a trick to get the desired affect. All you have to do is trick SSRS. In your query, you'll need to create empty bars with no labels. Without knowing how your query is structured, you can do it something like this:</p>

<pre><code>Select 'Group 1' as Group_Label --This would be equivalent to your Recursos or Credito Pessoal
    , 'Bar 1' as Bar_Label --This would be like T-3
    , 10 as Value_1 --This would be like the Red part of the bar
    , 20 as Value_2
    , '1' as Bar_Sort --This will come in handy later

Union All

Select 'Group 2' as Group_Label --This would be equivalent to your Recursos or Credito Pessoal
    , 'Bar 1' as Bar_Label --This would be like T-3
    , 15 as Value_1 --This would be like the Red part of the bar
    , 30 as Value_2
    , '2' as Bar_Sort --This will come in handy later

Union All

Select '' as Group_Label
    , '' as Bar_Label
    , 0 as Value_1
    , 0 as Value_2
    , 1.5 as Bar_Sort

Order by Bar_Sort
</code></pre>

<p>What you would get if you set this up is the Group 1 Bar 1 followed by an empty bar (with no labels) followed by Group 2 Bar 1. This puts what the user will see as a definitive space between the groups of bars, but you know is really just an empty set of values. I've used this successfully with Bar charts multiple times.</p>

<p>If this isn't making sense to you, create a <a href=""http://www.sqlfiddle.com/"" rel=""nofollow"">SQLfiddle</a> example and I can help you tweak your code to make this work.</p>"	"<p>As far as I know, there is no way to adjust the spacing between self-imposed groups of bars. However, there is a trick to get the desired affect. All you have to do is trick SSRS. In your query, you'll need to create empty bars with no labels. Without knowing how your query is structured, you can do it something like this:</p>

<pre><code>Select 'Group 1' as Group_Label --This would be equivalent to your Recursos or Credito Pessoal
    , 'Bar 1' as Bar_Label --This would be like T-3
    , 10 as Value_1 --This would be like the Red part of the bar
    , 20 as Value_2
    , '1' as Bar_Sort --This will come in handy later

Union All

Select 'Group 2' as Group_Label --This would be equivalent to your Recursos or Credito Pessoal
    , 'Bar 1' as Bar_Label --This would be like T-3
    , 15 as Value_1 --This would be like the Red part of the bar
    , 30 as Value_2
    , '2' as Bar_Sort --This will come in handy later

Union All

Select '' as Group_Label
    , '' as Bar_Label
    , 0 as Value_1
    , 0 as Value_2
    , 1.5 as Bar_Sort

Order by Bar_Sort
</code></pre>

<p>What you would get if you set this up is the Group 1 Bar 1 followed by an empty bar (with no labels) followed by Group 2 Bar 1. This puts what the user will see as a definitive space between the groups of bars, but you know is really just an empty set of values. I've used this successfully with Bar charts multiple times.</p>

<p>If this isn't making sense to you, create a <a href=""http://www.sqlfiddle.com/"" rel=""nofollow"">SQLfiddle</a> example and I can help you tweak your code to make this work.</p>"	 As far as I know, there is no way to adjust the spacing between self-imposed groups of bars. However, there is a trick to get the desired affect. All you have to do is trick SSRS. In your query, you'll need to create empty bars with no labels. Without knowing how your query is structured, you can do it something like this: What you would get if you set this up is the Group 1 Bar 1 followed by an empty bar (with no labels) followed by Group 2 Bar 1. This puts what the user will see as a definitive space between the groups of bars, but you know is really just an empty set of values. I've used this successfully with Bar charts multiple times. If this isn't making sense to you, create a SQLfiddle example and I can help you tweak your code to make this work.
new_qs_22k.csv	How can I animate a bar chart in Python?	0.999997	39776297	Chart.js - Creating a single bar chart with states	javascriptbar-chartchart.jschart.js2	41462816	"<p>Well, I didn't figure out a nice solution, but I found one.</p>

<p>So basically, as I described on the question I wanted to create a bar chart, but I also wanted that the chart would have different colors along the time...</p>

<p>Here's how I solved this.</p>

<p>First I create and array of colors, and calculate the percentage of time a color would be visible. And then I put it inside an array of colors, called ""activityGradientArray""</p>

<pre><code>var generateFilteredActivityGradientArray = function (){
            var filteredActivityColorWithSpaces = $scope.filteredActivityColorWithSpaces;

            //define ratio length
            var ratioActivity = (1.0) / filteredActivityColorWithSpaces.length;

            var newRatio = 0.0;
            var oldRatio = 0.0;
            var ratioCounter = 0.0;
            var oldColor = """";
            var newColor = """";

            var colorScheme = [];

            for (var i = 0; i &lt; filteredActivityColorWithSpaces.length; i++) {

                newColor = filteredActivityColorWithSpaces[i].color;

                if (oldColor != newColor) {
                    colorScheme.push({ratio: ratioCounter, color: newColor});

                    oldColor = newColor;
                    oldRatio = newRatio;
                }

                ratioCounter = ratioCounter + ratioActivity;
            }

            $scope.activityGradientArray = [];

            for (var i = 1; i &lt; colorScheme.length; i++) {
                $scope.activityGradientArray.push({ratio: colorScheme[i-1].ratio, color: colorScheme[i-1].color});
                $scope.activityGradientArray.push({ratio: colorScheme[i].ratio, color: colorScheme[i-1].color});
            }

            var lastPosition = colorScheme.length-1;
            $scope.activityGradientArray.push({ratio: colorScheme[lastPosition].ratio, color: colorScheme[lastPosition].color});
            $scope.activityGradientArray.push({ratio: 1, color: colorScheme[lastPosition].color});

        };
</code></pre>

<p>Then I extend the <code>Chart.controllers.line</code>, and use the activityGradientArray to apply a gradient to the <code>chart.chart.ctx</code>, using <code>addColorStop</code></p>

<pre><code>var chartControllersLine = function(){

            return Chart.controllers.line.extend({
                update: function() {

                    if( ($scope.filteredChart.temperature.isNull()) &amp;&amp; ($scope.filteredChart.activity.isNull()) ) {
                        return;
                    }

                    // get the min and max values
                    var minY = Math.min.apply(null, this.chart.data.datasets[$scope.CHART_DATASET_TEMPERATURE].data);
                    var maxY = Math.max.apply(null, this.chart.data.datasets[$scope.CHART_DATASET_TEMPERATURE].data);

                    $scope.minYValue = minY;

                    var yScale = this.getScaleForId(this.getDataset().yAxisID);
                    var xAxis = this.chart.scales['x-axis-0'];


                    if( (undefined == yScale) || (undefined == xAxis) ){
                        return;
                    }

                    var ctx = this.chart.chart.ctx;
                    // figure out the pixels for these and the value 0
                    var top = yScale.getPixelForValue(maxY)+5; //add
                    var bottom = yScale.getPixelForValue(minY)+5;
                    var left = xAxis.chart.chartArea.left;
                    var right = xAxis.chart.chartArea.right;

                    var minimumPixelPosition;
                    var maximumPixelPosition;
                    var minimumMarginPixelPosition;
                    var maximumMarginPixelPosition;

                    if( ($scope.homeConfig.rangeChartMin &gt; minY) ){
                        minimumPixelPosition = yScale.getPixelForValue($scope.homeConfig.rangeChartMin);

                    } else {
                        minimumPixelPosition = yScale.getPixelForValue(minY);
                    }

                    if( ($scope.homeConfig.rangeChartMax &lt; maxY) ) {
                        maximumPixelPosition = yScale.getPixelForValue($scope.homeConfig.rangeChartMax);
                    } else {
                        maximumPixelPosition = yScale.getPixelForValue(maxY);
                    }

                    var isAllOutside = false;
                    if( ( ($scope.homeConfig.rangeChartMax &gt; maxY) &amp;&amp; ($scope.homeConfig.rangeChartMin &gt; maxY) ) ||
                        ( ($scope.homeConfig.rangeChartMax &lt; minY) &amp;&amp; ($scope.homeConfig.rangeChartMin &lt; minY) ) ) {
                        isAllOutside = true;
                    }

                    var ratioMinimumTemperature = Math.abs( Math.min((minimumPixelPosition - top) / (bottom - top), 1) );
                    var ratioMaximumTemperature = Math.abs( Math.min((maximumPixelPosition - top) / (bottom - top), 1) );

                    var ratioMinimumMarginTemperature = Math.abs( Math.min(((minimumPixelPosition+5) - top) / (bottom - top), 1) );
                    var ratioMaximumMarginTemperature = Math.abs( Math.min(((maximumPixelPosition+5) - top) / (bottom - top), 1) );


                    if(ratioMinimumTemperature &lt; 0)
                        ratioMinimumTemperature = 0;
                    if(ratioMinimumTemperature &gt; 1)
                        ratioMinimumTemperature = 1;

                    if(ratioMaximumTemperature &lt; 0)
                        ratioMaximumTemperature = 0;
                    if(ratioMaximumTemperature &gt; 1)
                        ratioMaximumTemperature = 1;

                    if(!$scope.filteredChart.activity.isNull()) {

                        var gradientActivity = ctx.createLinearGradient(left, 0, right, 0);

                        for(var i = 0; i&lt;$scope.activityGradientArray.length; i++){
                            gradientActivity.addColorStop($scope.activityGradientArray[i].ratio, $scope.activityGradientArray[i].color);
                        }
                        this.chart.data.datasets[$scope.CHART_DATASET_ACTIVITY].borderColor = gradientActivity;

                    }

                    var auxApply = Chart.controllers.line.prototype.update.apply(this, arguments);

                    return auxApply;
                }
            });

        };
</code></pre>

<p>Here's is where I define the dataset:</p>

<pre><code> var lineChartData = function () {
            return  {
                xAxisID: ""x-axis-0"",
                labels: angular.isDefined($scope.filteredChart.labels) ? $scope.filteredChart.labels : [],
                datasets: [
                    {
                        yAxisID: ""y-axis-activity"",
                        label: ""Activity"",
                        fill: false,
                        data: angular.isDefined($scope.filteredChart.activity) ? $scope.filteredChart.activity : [],
                        borderWidth: 20,
                        pointRadius: 0,
                        borderColor: $scope.lineActivityColors,
                        borderCapStyle: 'butt',
                        borderDash: [],
                        borderDashOffset: 0.0,
                        borderJoinStyle: 'miter',
                        pointBorderWidth: 0,
                        pointHoverRadius: 5,
                        pointHitRadius: 10,

                    }]
        }


        };
</code></pre>

<p>And finally where I initialize the the chart with all of the above methods:</p>

<pre><code>$(document).ready(function() {
                var ctx = resetHomeChart();

                if(null == ctx)
                    return;

                $scope.pointTemperatureColors = [];
                $scope.lineActivityColors = [];

                Chart.defaults.NegativeTransparentLine = Chart.helpers.clone(Chart.defaults.line);
                Chart.controllers.NegativeTransparentLine = chartControllersLine();

                $scope.lineChart = new Chart(ctx, {
                    data: lineChartData(),
                    type: 'NegativeTransparentLine',
                    pointDotRadius: 10,
                    bezierCurve: false,
                    scaleShowVerticalLines: false,
                    scaleGridLineColor: ""black"",
                    options: options()
                });

                var maxTemperature = Math.max.apply(Math, $scope.lineChart.data.datasets[$scope.CHART_DATASET_TEMPERATURE].data.map(function(o) {
                    return o == null ? -Infinity : o;
                }));
                var minTemperature = Math.min.apply(Math, $scope.lineChart.data.datasets[$scope.CHART_DATASET_TEMPERATURE].data.map(function(o) {
                    return o == null ? Infinity : o;
                }));

                if( (Infinity == maxTemperature || -Infinity == maxTemperature) &amp;&amp; (Infinity == minTemperature || -Infinity == minTemperature) ){
                    maxTemperature = 0;
                    minTemperature = 0;
                }

                var yScaleMaxValue = maxTemperature + 2;
                var yScaleMinValue = minTemperature - 4;
                $scope.lineChart.options.scales.yAxes[0].ticks.max = Math.floor(yScaleMaxValue);
                $scope.lineChart.options.scales.yAxes[1].ticks.max = Math.floor(yScaleMaxValue);

                $scope.lineChart.options.scales.yAxes[0].ticks.min = Math.round(yScaleMinValue);
                $scope.lineChart.options.scales.yAxes[1].ticks.min = Math.round(yScaleMinValue);


                //adjust bar position on the chart
                for (var i = 0; i &lt; $scope.lineChart.data.datasets[$scope.CHART_DATASET_ACTIVITY].data.length; i++) {
                    if(null != $scope.lineChart.data.datasets[$scope.CHART_DATASET_ACTIVITY].data[i]) {
                        $scope.lineChart.data.datasets[$scope.CHART_DATASET_ACTIVITY].data[i] = yScaleMinValue + 2;
                    }
                }

                $scope.lineChart.update();

            });

        };
</code></pre>

<p>Again, this is not an ideal solution. It takes a bit more of processing than I would expect, but it works, at least it did for me...</p>

<p>If anyone would have a better solution, please share it</p>"	"<p>Well, I didn't figure out a nice solution, but I found one.</p>

<p>So basically, as I described on the question I wanted to create a bar chart, but I also wanted that the chart would have different colors along the time...</p>

<p>Here's how I solved this.</p>

<p>First I create and array of colors, and calculate the percentage of time a color would be visible. And then I put it inside an array of colors, called ""activityGradientArray""</p>

<pre><code>var generateFilteredActivityGradientArray = function (){
            var filteredActivityColorWithSpaces = $scope.filteredActivityColorWithSpaces;

            //define ratio length
            var ratioActivity = (1.0) / filteredActivityColorWithSpaces.length;

            var newRatio = 0.0;
            var oldRatio = 0.0;
            var ratioCounter = 0.0;
            var oldColor = """";
            var newColor = """";

            var colorScheme = [];

            for (var i = 0; i &lt; filteredActivityColorWithSpaces.length; i++) {

                newColor = filteredActivityColorWithSpaces[i].color;

                if (oldColor != newColor) {
                    colorScheme.push({ratio: ratioCounter, color: newColor});

                    oldColor = newColor;
                    oldRatio = newRatio;
                }

                ratioCounter = ratioCounter + ratioActivity;
            }

            $scope.activityGradientArray = [];

            for (var i = 1; i &lt; colorScheme.length; i++) {
                $scope.activityGradientArray.push({ratio: colorScheme[i-1].ratio, color: colorScheme[i-1].color});
                $scope.activityGradientArray.push({ratio: colorScheme[i].ratio, color: colorScheme[i-1].color});
            }

            var lastPosition = colorScheme.length-1;
            $scope.activityGradientArray.push({ratio: colorScheme[lastPosition].ratio, color: colorScheme[lastPosition].color});
            $scope.activityGradientArray.push({ratio: 1, color: colorScheme[lastPosition].color});

        };
</code></pre>

<p>Then I extend the <code>Chart.controllers.line</code>, and use the activityGradientArray to apply a gradient to the <code>chart.chart.ctx</code>, using <code>addColorStop</code></p>

<pre><code>var chartControllersLine = function(){

            return Chart.controllers.line.extend({
                update: function() {

                    if( ($scope.filteredChart.temperature.isNull()) &amp;&amp; ($scope.filteredChart.activity.isNull()) ) {
                        return;
                    }

                    // get the min and max values
                    var minY = Math.min.apply(null, this.chart.data.datasets[$scope.CHART_DATASET_TEMPERATURE].data);
                    var maxY = Math.max.apply(null, this.chart.data.datasets[$scope.CHART_DATASET_TEMPERATURE].data);

                    $scope.minYValue = minY;

                    var yScale = this.getScaleForId(this.getDataset().yAxisID);
                    var xAxis = this.chart.scales['x-axis-0'];


                    if( (undefined == yScale) || (undefined == xAxis) ){
                        return;
                    }

                    var ctx = this.chart.chart.ctx;
                    // figure out the pixels for these and the value 0
                    var top = yScale.getPixelForValue(maxY)+5; //add
                    var bottom = yScale.getPixelForValue(minY)+5;
                    var left = xAxis.chart.chartArea.left;
                    var right = xAxis.chart.chartArea.right;

                    var minimumPixelPosition;
                    var maximumPixelPosition;
                    var minimumMarginPixelPosition;
                    var maximumMarginPixelPosition;

                    if( ($scope.homeConfig.rangeChartMin &gt; minY) ){
                        minimumPixelPosition = yScale.getPixelForValue($scope.homeConfig.rangeChartMin);

                    } else {
                        minimumPixelPosition = yScale.getPixelForValue(minY);
                    }

                    if( ($scope.homeConfig.rangeChartMax &lt; maxY) ) {
                        maximumPixelPosition = yScale.getPixelForValue($scope.homeConfig.rangeChartMax);
                    } else {
                        maximumPixelPosition = yScale.getPixelForValue(maxY);
                    }

                    var isAllOutside = false;
                    if( ( ($scope.homeConfig.rangeChartMax &gt; maxY) &amp;&amp; ($scope.homeConfig.rangeChartMin &gt; maxY) ) ||
                        ( ($scope.homeConfig.rangeChartMax &lt; minY) &amp;&amp; ($scope.homeConfig.rangeChartMin &lt; minY) ) ) {
                        isAllOutside = true;
                    }

                    var ratioMinimumTemperature = Math.abs( Math.min((minimumPixelPosition - top) / (bottom - top), 1) );
                    var ratioMaximumTemperature = Math.abs( Math.min((maximumPixelPosition - top) / (bottom - top), 1) );

                    var ratioMinimumMarginTemperature = Math.abs( Math.min(((minimumPixelPosition+5) - top) / (bottom - top), 1) );
                    var ratioMaximumMarginTemperature = Math.abs( Math.min(((maximumPixelPosition+5) - top) / (bottom - top), 1) );


                    if(ratioMinimumTemperature &lt; 0)
                        ratioMinimumTemperature = 0;
                    if(ratioMinimumTemperature &gt; 1)
                        ratioMinimumTemperature = 1;

                    if(ratioMaximumTemperature &lt; 0)
                        ratioMaximumTemperature = 0;
                    if(ratioMaximumTemperature &gt; 1)
                        ratioMaximumTemperature = 1;

                    if(!$scope.filteredChart.activity.isNull()) {

                        var gradientActivity = ctx.createLinearGradient(left, 0, right, 0);

                        for(var i = 0; i&lt;$scope.activityGradientArray.length; i++){
                            gradientActivity.addColorStop($scope.activityGradientArray[i].ratio, $scope.activityGradientArray[i].color);
                        }
                        this.chart.data.datasets[$scope.CHART_DATASET_ACTIVITY].borderColor = gradientActivity;

                    }

                    var auxApply = Chart.controllers.line.prototype.update.apply(this, arguments);

                    return auxApply;
                }
            });

        };
</code></pre>

<p>Here's is where I define the dataset:</p>

<pre><code> var lineChartData = function () {
            return  {
                xAxisID: ""x-axis-0"",
                labels: angular.isDefined($scope.filteredChart.labels) ? $scope.filteredChart.labels : [],
                datasets: [
                    {
                        yAxisID: ""y-axis-activity"",
                        label: ""Activity"",
                        fill: false,
                        data: angular.isDefined($scope.filteredChart.activity) ? $scope.filteredChart.activity : [],
                        borderWidth: 20,
                        pointRadius: 0,
                        borderColor: $scope.lineActivityColors,
                        borderCapStyle: 'butt',
                        borderDash: [],
                        borderDashOffset: 0.0,
                        borderJoinStyle: 'miter',
                        pointBorderWidth: 0,
                        pointHoverRadius: 5,
                        pointHitRadius: 10,

                    }]
        }


        };
</code></pre>

<p>And finally where I initialize the the chart with all of the above methods:</p>

<pre><code>$(document).ready(function() {
                var ctx = resetHomeChart();

                if(null == ctx)
                    return;

                $scope.pointTemperatureColors = [];
                $scope.lineActivityColors = [];

                Chart.defaults.NegativeTransparentLine = Chart.helpers.clone(Chart.defaults.line);
                Chart.controllers.NegativeTransparentLine = chartControllersLine();

                $scope.lineChart = new Chart(ctx, {
                    data: lineChartData(),
                    type: 'NegativeTransparentLine',
                    pointDotRadius: 10,
                    bezierCurve: false,
                    scaleShowVerticalLines: false,
                    scaleGridLineColor: ""black"",
                    options: options()
                });

                var maxTemperature = Math.max.apply(Math, $scope.lineChart.data.datasets[$scope.CHART_DATASET_TEMPERATURE].data.map(function(o) {
                    return o == null ? -Infinity : o;
                }));
                var minTemperature = Math.min.apply(Math, $scope.lineChart.data.datasets[$scope.CHART_DATASET_TEMPERATURE].data.map(function(o) {
                    return o == null ? Infinity : o;
                }));

                if( (Infinity == maxTemperature || -Infinity == maxTemperature) &amp;&amp; (Infinity == minTemperature || -Infinity == minTemperature) ){
                    maxTemperature = 0;
                    minTemperature = 0;
                }

                var yScaleMaxValue = maxTemperature + 2;
                var yScaleMinValue = minTemperature - 4;
                $scope.lineChart.options.scales.yAxes[0].ticks.max = Math.floor(yScaleMaxValue);
                $scope.lineChart.options.scales.yAxes[1].ticks.max = Math.floor(yScaleMaxValue);

                $scope.lineChart.options.scales.yAxes[0].ticks.min = Math.round(yScaleMinValue);
                $scope.lineChart.options.scales.yAxes[1].ticks.min = Math.round(yScaleMinValue);


                //adjust bar position on the chart
                for (var i = 0; i &lt; $scope.lineChart.data.datasets[$scope.CHART_DATASET_ACTIVITY].data.length; i++) {
                    if(null != $scope.lineChart.data.datasets[$scope.CHART_DATASET_ACTIVITY].data[i]) {
                        $scope.lineChart.data.datasets[$scope.CHART_DATASET_ACTIVITY].data[i] = yScaleMinValue + 2;
                    }
                }

                $scope.lineChart.update();

            });

        };
</code></pre>

<p>Again, this is not an ideal solution. It takes a bit more of processing than I would expect, but it works, at least it did for me...</p>

<p>If anyone would have a better solution, please share it</p>"	" Well, I didn't figure out a nice solution, but I found one. So basically, as I described on the question I wanted to create a bar chart, but I also wanted that the chart would have different colors along the time... Here's how I solved this. First I create and array of colors, and calculate the percentage of time a color would be visible. And then I put it inside an array of colors, called ""activityGradientArray"" Then I extend the , and use the activityGradientArray to apply a gradient to the , using Here's is where I define the dataset: And finally where I initialize the the chart with all of the above methods: Again, this is not an ideal solution. It takes a bit more of processing than I would expect, but it works, at least it did for me... If anyone would have a better solution, please share it"
new_qs_22k.csv	I know how to create a line chart with matplotlib, how do I do it in R?	0.99999774	7882435	Pyplot - Label Plots	pythongraphingmatplotlib	7882619	"<p>Your code properly displays a legend, with Matplotlib 1.1 on Mac OS X, provided that:</p>

<ul>
<li>Matplotlib is put in interactive mode at the beginning: <code>plt.ion()</code></li>
<li>The code ends with <code>plt.show()</code>, for instance.</li>
</ul>

<p>Upgrading Matplotlib might also help.</p>

<p>A last possible solution would be to indeed plot each line separately with its own label: <code>plt.plot(&lt;single line data&gt;, label='Construction')</code>, etc., and the plot the legend with <code>plt.legend(loc='best')</code>.</p>"	"<p>Your code properly displays a legend, with Matplotlib 1.1 on Mac OS X, provided that:</p>

<ul>
<li>Matplotlib is put in interactive mode at the beginning: <code>plt.ion()</code></li>
<li>The code ends with <code>plt.show()</code>, for instance.</li>
</ul>

<p>Upgrading Matplotlib might also help.</p>

<p>A last possible solution would be to indeed plot each line separately with its own label: <code>plt.plot(&lt;single line data&gt;, label='Construction')</code>, etc., and the plot the legend with <code>plt.legend(loc='best')</code>.</p>"	 Your code properly displays a legend, with Matplotlib 1.1 on Mac OS X, provided that: Matplotlib is put in interactive mode at the beginning: The code ends with , for instance. Upgrading Matplotlib might also help. A last possible solution would be to indeed plot each line separately with its own label: , etc., and the plot the legend with .
new_qs_22k.csv	I know how to create a line chart with matplotlib, how do I do it in R?	0.9999976	34954070	Moving a stacked bar that that worked in Bokeh 0.9 to Bokeh 0.11	python-2.7bokehstacked-chart	35080225	"<p>I do not know if it is the only way of doing it, but the stacked bar chart in Bokeh 0.11 works if you put <strong>all the data in a column</strong>, rather than in a matrix. You then need to provide the matrix row and column indexes in corresponding dataframe columns, called <code>nr</code> and <code>rank</code> in the example code below. These are referred when calling the Bar method, where ""stack"" shall refer to the columns in your matrix example.</p>

<pre><code>import pandas as pd
from bokeh.charts import Bar, show

all_data={
'nr':  [1,2,3,4,5,
        1,2,3,4,5,
        1,2,3,4,5,
        1,2,3,4,5,
        1,2,3,4,5],
'rank':['First','First','First','First','First',
       'Second','Second','Second','Second','Second',
       'Third','Third','Third','Third','Third',
       'Fourth','Fourth','Fourth','Fourth','Fourth',
       'Fifth','Fifth','Fifth','Fifth','Fifth'],
'data':[27,10,32,8,9,
        22,27,10,6,5,
        33,18,11,14,6,
        20,31,8,16,6,
        9,14,10,15,2]
      }
df=pd.DataFrame(all_data)

p=Bar(df,label='nr',values='data',stack='rank',legend='top_right')
show(p)
</code></pre>

<p>A comment: The standard Bar chart palette only has six colors, as shown in your 10 rank example. I use the code snippet below, adapted from others, to generate as many distinct colors as needed for the bar chart. It uses a matplotlib colormap colormap as input.</p>

<pre><code>import matplotlib.cm as cm
import numpy as np

colormap =cm.get_cmap(""jet"")
different_colors=10
color_mapping=colormap(np.linspace(0,1,different_colors),1,True)
bokeh_palette=[""#%02x%02x%02x"" % (r, g, b) for r, g, b in color_mapping[:,0:3]]

p=Bar(df,label='nr',values='data',stack='rank',legend='top_right',palette=bokeh_palette)
show(p)
</code></pre>

<p>Here is a good page discussing how to choose <a href=""http://matplotlib.org/users/colormaps.html"" rel=""nofollow"">matplotlib colormaps</a>.</p>"	"<p>I do not know if it is the only way of doing it, but the stacked bar chart in Bokeh 0.11 works if you put <strong>all the data in a column</strong>, rather than in a matrix. You then need to provide the matrix row and column indexes in corresponding dataframe columns, called <code>nr</code> and <code>rank</code> in the example code below. These are referred when calling the Bar method, where ""stack"" shall refer to the columns in your matrix example.</p>

<pre><code>import pandas as pd
from bokeh.charts import Bar, show

all_data={
'nr':  [1,2,3,4,5,
        1,2,3,4,5,
        1,2,3,4,5,
        1,2,3,4,5,
        1,2,3,4,5],
'rank':['First','First','First','First','First',
       'Second','Second','Second','Second','Second',
       'Third','Third','Third','Third','Third',
       'Fourth','Fourth','Fourth','Fourth','Fourth',
       'Fifth','Fifth','Fifth','Fifth','Fifth'],
'data':[27,10,32,8,9,
        22,27,10,6,5,
        33,18,11,14,6,
        20,31,8,16,6,
        9,14,10,15,2]
      }
df=pd.DataFrame(all_data)

p=Bar(df,label='nr',values='data',stack='rank',legend='top_right')
show(p)
</code></pre>

<p>A comment: The standard Bar chart palette only has six colors, as shown in your 10 rank example. I use the code snippet below, adapted from others, to generate as many distinct colors as needed for the bar chart. It uses a matplotlib colormap colormap as input.</p>

<pre><code>import matplotlib.cm as cm
import numpy as np

colormap =cm.get_cmap(""jet"")
different_colors=10
color_mapping=colormap(np.linspace(0,1,different_colors),1,True)
bokeh_palette=[""#%02x%02x%02x"" % (r, g, b) for r, g, b in color_mapping[:,0:3]]

p=Bar(df,label='nr',values='data',stack='rank',legend='top_right',palette=bokeh_palette)
show(p)
</code></pre>

<p>Here is a good page discussing how to choose <a href=""http://matplotlib.org/users/colormaps.html"" rel=""nofollow"">matplotlib colormaps</a>.</p>"	" I do not know if it is the only way of doing it, but the stacked bar chart in Bokeh 0.11 works if you put all the data in a column , rather than in a matrix. You then need to provide the matrix row and column indexes in corresponding dataframe columns, called and in the example code below. These are referred when calling the Bar method, where ""stack"" shall refer to the columns in your matrix example. A comment: The standard Bar chart palette only has six colors, as shown in your 10 rank example. I use the code snippet below, adapted from others, to generate as many distinct colors as needed for the bar chart. It uses a matplotlib colormap colormap as input. Here is a good page discussing how to choose matplotlib colormaps ."
new_qs_22k.csv	I know how to create a line chart with matplotlib, how do I do it in R?	0.9999976	47467077	python plot multiple histograms	pythonmatplotlibplot	47468977	"<p>You could do something like this:</p>

<pre><code>import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

np.random.normal(0, 10)

df = pd.DataFrame({
        'v1': np.random.normal(0, 3, 20),
        'v2': np.random.normal(0, 3, 20),
        'v3': np.random.normal(0, 3, 20),
        'v4': np.random.normal(0, 3, 20),
        'v5': np.random.normal(0, 3, 20),
        'v6': np.random.normal(0, 3, 20),        
    })


# Generically define how many plots along and across
ncols = 3
nrows = int(np.ceil(len(df.columns) / (1.0*ncols)))
fig, axes = plt.subplots(nrows=nrows, ncols=ncols, figsize=(10, 10))

# Lazy counter so we can remove unwated axes
counter = 0
for i in range(nrows):
    for j in range(ncols):

        ax = axes[i][j]

        # Plot when we have data
        if counter &lt; len(df.columns):

            ax.hist(df[df.columns[counter]], bins=10, color='blue', alpha=0.5, label='{}'.format(df.columns[counter]))
            ax.set_xlabel('x')
            ax.set_ylabel('PDF')
            ax.set_ylim([0, 5])
            leg = ax.legend(loc='upper left')
            leg.draw_frame(False)

        # Remove axis when we no longer have data
        else:
            ax.set_axis_off()

        counter += 1

plt.show()
</code></pre>

<p>Results in:</p>

<p><a href=""https://i.stack.imgur.com/Hi306.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/Hi306.png"" alt=""enter image description here""></a></p>

<p>Adapted from: <a href=""https://stackoverflow.com/questions/31726643/how-do-i-get-multiple-subplots-in-matplotlib"">How do I get multiple subplots in matplotlib?</a></p>"	"<p>You could do something like this:</p>

<pre><code>import numpy as np
import pandas as pd
import matplotlib.pyplot as plt

np.random.normal(0, 10)

df = pd.DataFrame({
        'v1': np.random.normal(0, 3, 20),
        'v2': np.random.normal(0, 3, 20),
        'v3': np.random.normal(0, 3, 20),
        'v4': np.random.normal(0, 3, 20),
        'v5': np.random.normal(0, 3, 20),
        'v6': np.random.normal(0, 3, 20),        
    })


# Generically define how many plots along and across
ncols = 3
nrows = int(np.ceil(len(df.columns) / (1.0*ncols)))
fig, axes = plt.subplots(nrows=nrows, ncols=ncols, figsize=(10, 10))

# Lazy counter so we can remove unwated axes
counter = 0
for i in range(nrows):
    for j in range(ncols):

        ax = axes[i][j]

        # Plot when we have data
        if counter &lt; len(df.columns):

            ax.hist(df[df.columns[counter]], bins=10, color='blue', alpha=0.5, label='{}'.format(df.columns[counter]))
            ax.set_xlabel('x')
            ax.set_ylabel('PDF')
            ax.set_ylim([0, 5])
            leg = ax.legend(loc='upper left')
            leg.draw_frame(False)

        # Remove axis when we no longer have data
        else:
            ax.set_axis_off()

        counter += 1

plt.show()
</code></pre>

<p>Results in:</p>

<p><a href=""https://i.stack.imgur.com/Hi306.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/Hi306.png"" alt=""enter image description here""></a></p>

<p>Adapted from: <a href=""https://stackoverflow.com/questions/31726643/how-do-i-get-multiple-subplots-in-matplotlib"">How do I get multiple subplots in matplotlib?</a></p>"	 You could do something like this: Results in: Adapted from: How do I get multiple subplots in matplotlib?
new_qs_22k.csv	I know how to create a line chart with matplotlib, how do I do it in R?	0.9999976	40130128	Python matplotlib.pyplot: How to make a histogram with bins counts including right bin edge?	pythonmatplotlibhistogram	40130412	"<p>I do not think there is an option to do it explicitly in either matplotlib or numpy.</p>

<p>However, you may use <code>np.histogram()</code> with negative value of your <code>data</code> (and bins), then negate the output and plot it with <code>plt.bar()</code> function.</p>

<pre><code>bins = np.arange(min(data), max(data) + binwidth, binwidth)
hist, binsHist = np.histogram(-data, bins=sorted(-bins))
plt.plot(-binsHist[1:], -hist, np.diff(binHist))
</code></pre>"	"<p>I do not think there is an option to do it explicitly in either matplotlib or numpy.</p>

<p>However, you may use <code>np.histogram()</code> with negative value of your <code>data</code> (and bins), then negate the output and plot it with <code>plt.bar()</code> function.</p>

<pre><code>bins = np.arange(min(data), max(data) + binwidth, binwidth)
hist, binsHist = np.histogram(-data, bins=sorted(-bins))
plt.plot(-binsHist[1:], -hist, np.diff(binHist))
</code></pre>"	 I do not think there is an option to do it explicitly in either matplotlib or numpy. However, you may use with negative value of your (and bins), then negate the output and plot it with function.
new_qs_22k.csv	I know how to create a line chart with matplotlib, how do I do it in R?	0.9999976	23306807	matplotlib graph generation issue	pythonmatplotlib	23307014	<p>You should use <code>plt.close()</code> to close current instance of matplotlib. If it stays open and this function/script is called again, next figure would be plotted in the same figure. So add <code>plt.close()</code> after <code>plt.savefig()</code></p>	<p>You should use <code>plt.close()</code> to close current instance of matplotlib. If it stays open and this function/script is called again, next figure would be plotted in the same figure. So add <code>plt.close()</code> after <code>plt.savefig()</code></p>	 You should use to close current instance of matplotlib. If it stays open and this function/script is called again, next figure would be plotted in the same figure. So add after
new_qs_22k.csv	What is the easiest way to create a heat map of the US?	0.99999666	17280468	Data visualization in R	rvisualizationdata-visualization	17281228	"<p>This is basically what <code>ggplot2</code> is for, in my opinion. Here is a recreation of your data, along with a very basic plot.</p>

<pre><code># Recreate your data.
data&lt;-c(6,6,4,5,8,9,8,6,3,3,4,5,4,2,1,5,3,3,4,2,4,8,3,1,6,5,4,3,9,8,2,6,8,3,4,5,7,6,2,2,10,9,6,8,9,4,6,7)
list&lt;-split(data,rep(1:6,each=8))
names(list)&lt;-paste0('Block',1:6)

library(ggplot2)
library(reshape2)
dat&lt;-melt(list)[2:1]
names(dat)&lt;-c('Block','Value')
dat$brain.section&lt;-rep(1:8,6)

ggplot(dat,aes(x=brain.section,y=Value,group=Block)) + geom_line() + facet_grid(Block~.)
</code></pre>

<p><img src=""https://i.stack.imgur.com/a81WP.png"" alt=""enter image description here""></p>

<p>You can get really fancy with colours and layout, but you can use that as something to get you started if you don't know <code>ggplot2</code>.</p>

<p>Here is what a heat map of the same data would look like</p>

<pre><code>ggplot(dat,aes(x=brain.section,fill=Value,y=Block)) + geom_tile() 
</code></pre>

<p><img src=""https://i.stack.imgur.com/3uoXW.png"" alt=""enter image description here""></p>"	"<p>This is basically what <code>ggplot2</code> is for, in my opinion. Here is a recreation of your data, along with a very basic plot.</p>

<pre><code># Recreate your data.
data&lt;-c(6,6,4,5,8,9,8,6,3,3,4,5,4,2,1,5,3,3,4,2,4,8,3,1,6,5,4,3,9,8,2,6,8,3,4,5,7,6,2,2,10,9,6,8,9,4,6,7)
list&lt;-split(data,rep(1:6,each=8))
names(list)&lt;-paste0('Block',1:6)

library(ggplot2)
library(reshape2)
dat&lt;-melt(list)[2:1]
names(dat)&lt;-c('Block','Value')
dat$brain.section&lt;-rep(1:8,6)

ggplot(dat,aes(x=brain.section,y=Value,group=Block)) + geom_line() + facet_grid(Block~.)
</code></pre>

<p><img src=""https://i.stack.imgur.com/a81WP.png"" alt=""enter image description here""></p>

<p>You can get really fancy with colours and layout, but you can use that as something to get you started if you don't know <code>ggplot2</code>.</p>

<p>Here is what a heat map of the same data would look like</p>

<pre><code>ggplot(dat,aes(x=brain.section,fill=Value,y=Block)) + geom_tile() 
</code></pre>

<p><img src=""https://i.stack.imgur.com/3uoXW.png"" alt=""enter image description here""></p>"	 This is basically what is for, in my opinion. Here is a recreation of your data, along with a very basic plot. You can get really fancy with colours and layout, but you can use that as something to get you started if you don't know . Here is what a heat map of the same data would look like
new_qs_22k.csv	What is the easiest way to create a heat map of the US?	0.9999964	17820275	Lasagna plots in R	rgraph	17822042	"<p>Lasagna plots appear to be exactly heat maps, although the name is cute. Heat maps are plotted very well in other packages. Consider the first example plot in the code pointed out by Carl Witthoft. You can reproduce it in <code>ggplot</code> like this:</p>

<pre><code>## Create the data
palette &lt;- brewer.pal(4, ""PuOr"")[-2]
## the matrix containing data for Figure 02a
H.mat &lt;- matrix(NA, nrow=4, ncol=6)
H.mat[1, 1:6] = 100*c(2, 1, 1, 1, 1, 2)
H.mat[2, 1:6] = 100*c(2, 2, 2, 3, 2, 1)
H.mat[3, 1:6] = 100*c(2, 2, 1, 1, 1, 3)
H.mat[4, 1:6] = 100*c(3, 3, 2, 1, 2, 3)

library(ggplot2)
library(reshape2)
rownames(H.mat)&lt;-c('P1','T1','P2','T2')
colnames(H.mat)&lt;-seq(ncol(H.mat))
names(dimnames(H.mat))&lt;-c('Subject','Time')
H.df&lt;-melt(H.mat)
</code></pre>

<p>Depending on what you want you can get different types of colouring.</p>

<pre><code># For continuous values.
ggplot(H.df,aes(x=Time,y=Subject,fill=value)) + geom_tile(colour='black') 
</code></pre>

<p><img src=""https://i.stack.imgur.com/eaJvO.png"" alt=""enter image description here""></p>

<pre><code># If you consider the value to be categorical.
ggplot(H.df,aes(x=Time,y=Subject,fill=factor(value))) + 
  geom_tile(colour='black') 
</code></pre>

<p><img src=""https://i.stack.imgur.com/DrrSJ.png"" alt=""enter image description here""></p>

<pre><code># If you want those exact colours the author used:
col&lt;-palette[match(ordered(H.df$value),levels(ordered(H.df$value)))]
ggplot(H.df,aes(x=Time,y=Subject,fill=col)) + 
  geom_tile(colour='black') + scale_fill_identity()
</code></pre>

<p><img src=""https://i.stack.imgur.com/HijYp.png"" alt=""enter image description here""></p>"	"<p>Lasagna plots appear to be exactly heat maps, although the name is cute. Heat maps are plotted very well in other packages. Consider the first example plot in the code pointed out by Carl Witthoft. You can reproduce it in <code>ggplot</code> like this:</p>

<pre><code>## Create the data
palette &lt;- brewer.pal(4, ""PuOr"")[-2]
## the matrix containing data for Figure 02a
H.mat &lt;- matrix(NA, nrow=4, ncol=6)
H.mat[1, 1:6] = 100*c(2, 1, 1, 1, 1, 2)
H.mat[2, 1:6] = 100*c(2, 2, 2, 3, 2, 1)
H.mat[3, 1:6] = 100*c(2, 2, 1, 1, 1, 3)
H.mat[4, 1:6] = 100*c(3, 3, 2, 1, 2, 3)

library(ggplot2)
library(reshape2)
rownames(H.mat)&lt;-c('P1','T1','P2','T2')
colnames(H.mat)&lt;-seq(ncol(H.mat))
names(dimnames(H.mat))&lt;-c('Subject','Time')
H.df&lt;-melt(H.mat)
</code></pre>

<p>Depending on what you want you can get different types of colouring.</p>

<pre><code># For continuous values.
ggplot(H.df,aes(x=Time,y=Subject,fill=value)) + geom_tile(colour='black') 
</code></pre>

<p><img src=""https://i.stack.imgur.com/eaJvO.png"" alt=""enter image description here""></p>

<pre><code># If you consider the value to be categorical.
ggplot(H.df,aes(x=Time,y=Subject,fill=factor(value))) + 
  geom_tile(colour='black') 
</code></pre>

<p><img src=""https://i.stack.imgur.com/DrrSJ.png"" alt=""enter image description here""></p>

<pre><code># If you want those exact colours the author used:
col&lt;-palette[match(ordered(H.df$value),levels(ordered(H.df$value)))]
ggplot(H.df,aes(x=Time,y=Subject,fill=col)) + 
  geom_tile(colour='black') + scale_fill_identity()
</code></pre>

<p><img src=""https://i.stack.imgur.com/HijYp.png"" alt=""enter image description here""></p>"	 Lasagna plots appear to be exactly heat maps, although the name is cute. Heat maps are plotted very well in other packages. Consider the first example plot in the code pointed out by Carl Witthoft. You can reproduce it in like this: Depending on what you want you can get different types of colouring.
new_qs_22k.csv	What is the easiest way to create a heat map of the US?	0.99999595	51519602	Ticktext value does not fix ggplot2 facet_grid() breaking down when combined with ggplotly()	rggplot2ggplotly	51571482	"<p>So first things first: </p>

<p>In your case I am not even sure whether a <code>plotly</code> heatmap is what you need. In addition you should <strong>never</strong> convert a complicated <code>ggplot</code> to plotly. It will fail! In 90% of cases. Try recreating your plot in <code>plotly</code> or whereever you want it to end up. Anything else ends up in coding hell. </p>

<p>I started by doing some research: </p>

<ol>
<li><a href=""https://stackoverflow.com/questions/44861851/specifying-the-colors-in-a-plotly-heatmap"">Here</a> is a good description how to create heatmaps with different colors in <code>plotly</code></li>
<li><a href=""https://stackoverflow.com/questions/37285729/how-to-give-subtitles-for-subplot-in-plot-ly-using-r"">This</a> explains how you can create titles in subplots. </li>
</ol>

<p>From post 1 I know that I have to create a matrix for each level in your data. So I wrote a function for that: </p>

<pre><code>mymat&lt;-as.matrix(Gene_states22[,-1:-2])

### Creates a 1-NA dummy matrix for each level. The output is stored in a list
dummy_mat&lt;-function(mat,levels,names_col){
  mat_list&lt;-lapply(levels,function(x){
                            mat[mat!=x]=NA
                            mat[mat==x]=1
                            mymat=t(apply(mat,2,as.numeric))
                            colnames(mymat)=names_col
                            return(mymat)
                            })
  names(mat_list)=levels
  return(mat_list)
}
my_mat_list&lt;-dummy_mat(mymat,c('DF','low','normal','over'),Gene_states22$gene_symbol)

### Optional: The heatmap type is peculiar - I created a text-NA matrix for each category as well
text_mat&lt;-function(mat,levels,names_col){
  mat_list&lt;-lapply(levels,function(x){
                            mat[mat!=x]=NA
                            mat=t(mat)
                            colnames(mat)=names_col
                            return(mat)
                            })
  names(mat_list)=levels
  return(mat_list)
}
   my_mat_list_t&lt;-text_mat(mymat,c('DF','low','normal','over'),as.character(Gene_states22$gene_symbol))
</code></pre>

<p>In addition I needed colors for each level. These colors are created using some dataframe. You may write a similar (<code>lapply</code>-)loop here as well: </p>

<pre><code>DF_Color &lt;- data.frame(x = c(0,1), y = c(""#DEDEDE"", ""#DEDEDE""))
colnames(DF_Color) &lt;- NULL

lowColor &lt;- data.frame(x = c(0,1), y = c(""#00CCFF"", ""#00CCFF""))
colnames(lowColor) &lt;- NULL

normColor &lt;- data.frame(x = c(0,1), y = c(""#DEDE00"", ""#DEDE00""))
colnames(normColor) &lt;- NULL

overColor &lt;- data.frame(x = c(0,1), y = c(""#DE3333"", ""#DE3333""))
colnames(overColor) &lt;- NULL
</code></pre>

<p>In addition we need the columns in the matrix for each panel-category: </p>

<pre><code>mycols&lt;-lapply(levels(Gene_states22$panel),function(x) grep(x,Gene_states22$panel))
</code></pre>

<p>I stored this in a list as well. 
Next I use lapply-loop to plot. I store the values in a list and use <code>subplot</code> to put everything together: </p>

<pre><code>library(plotly)

p_list&lt;-lapply(1:length(mycols),function(j){
  columns&lt;-mycols[[j]]

p&lt;-plot_ly(
    type = ""heatmap""
) %&gt;% add_trace(
    y=rownames(my_mat_list$DF),x=colnames(my_mat_list$DF)[columns],
    z = my_mat_list$DF[,columns],
    xgap=3,ygap=3, text=my_mat_list_t$DF[,columns],hoverinfo=""x+y+text"",
    colorscale = DF_Color,
    colorbar = list(
        len = 0.3,
        y = 0.3,
        yanchor = 'top',
        title = 'DF series',
        tickvals = ''
    )
) %&gt;% add_trace(
  y=rownames(my_mat_list$low),x=colnames(my_mat_list$low)[columns],
    z = my_mat_list$low[,columns],
    xgap=3,ygap=3,text=my_mat_list_t$low[,columns],hoverinfo=""x+y+text"",
    colorscale = lowColor,
    colorbar = list(
        len = 0.3,
        y = 0.3,
        yanchor = 'top',
        title = 'low series',
        tickvals = ''
    )
) %&gt;% add_trace(
  y=rownames(my_mat_list$normal),x=colnames(my_mat_list$normal)[columns],
    z = my_mat_list$normal[,columns],
    xgap=3,ygap=3,text=my_mat_list_t$normal[,columns],hoverinfo=""x+y+text"",
    colorscale = normColor,
    colorbar = list(
        len = 0.3,
        y = 1,
        yanchor = 'top',
        title = 'normal series',
        tickvals = ''
    )
) %&gt;% add_trace(
  y=rownames(my_mat_list$over),x=colnames(my_mat_list$over)[columns],
    z = my_mat_list$over[,columns],
    xgap=3,ygap=3,text=my_mat_list_t$over[,columns],hoverinfo=""x+y+text"",
    colorscale = overColor,
    colorbar = list(
        len = 0.3,
        y = 1,
        yanchor = 'top',
        title = 'over series',
        tickvals = ''
    )
 )
return(p)
})

subplot(p_list[[1]],p_list[[2]],shareY = TRUE) %&gt;%
  layout(annotations = list(
 list(x = 0.2 , y = 1.05, text = levels(Gene_states22$panel)[1], showarrow = F, xref='paper', yref='paper'),
  list(x = 0.8 , y = 1.05, text = levels(Gene_states22$panel)[2], showarrow = F, xref='paper', yref='paper'))
)
</code></pre>

<p><a href=""https://i.stack.imgur.com/tbiv1.jpg"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/tbiv1.jpg"" alt=""enter image description here""></a></p>

<p><strong>POSSIBLE ISSUES</strong>:</p>

<ol>
<li>You have to become create around categories like <code>dfgh</code> which occur only once. If only one column is selected in <code>R</code>, the output is automatically transformed into a (numeric or character) <code>vector</code>-type. Thus maybe add an <code>as.matrix()</code> to all <code>z</code> and <code>text</code> arguments</li>
<li>hover-text doesn't really work. But <code>plotly</code> has a good documentation <a href=""https://plot.ly/r/text-and-annotations/"" rel=""nofollow noreferrer"">there</a>. You should be able to figure that out. </li>
<li>You also have to specify the width in the <code>subplot</code>-function. That will be fiddly if you have more than 10 categories. </li>
<li>Interactivity doesn't really work. You can't remove traces. Why? No idea. Do some research if you need it. I guess it is connected with the plot type. </li>
<li>I recommend specifying the extend of the plot(s) in px. That might make the tiles more similar.</li>
<li>Finally you will need some <a href=""https://plot.ly/r/reference/#layout-annotations"" rel=""nofollow noreferrer"">reference for the (subplot) titles</a> and you will need to adjust the margins of your plot. Such that the titles are visible. </li>
</ol>"	"<p>So first things first: </p>

<p>In your case I am not even sure whether a <code>plotly</code> heatmap is what you need. In addition you should <strong>never</strong> convert a complicated <code>ggplot</code> to plotly. It will fail! In 90% of cases. Try recreating your plot in <code>plotly</code> or whereever you want it to end up. Anything else ends up in coding hell. </p>

<p>I started by doing some research: </p>

<ol>
<li><a href=""https://stackoverflow.com/questions/44861851/specifying-the-colors-in-a-plotly-heatmap"">Here</a> is a good description how to create heatmaps with different colors in <code>plotly</code></li>
<li><a href=""https://stackoverflow.com/questions/37285729/how-to-give-subtitles-for-subplot-in-plot-ly-using-r"">This</a> explains how you can create titles in subplots. </li>
</ol>

<p>From post 1 I know that I have to create a matrix for each level in your data. So I wrote a function for that: </p>

<pre><code>mymat&lt;-as.matrix(Gene_states22[,-1:-2])

### Creates a 1-NA dummy matrix for each level. The output is stored in a list
dummy_mat&lt;-function(mat,levels,names_col){
  mat_list&lt;-lapply(levels,function(x){
                            mat[mat!=x]=NA
                            mat[mat==x]=1
                            mymat=t(apply(mat,2,as.numeric))
                            colnames(mymat)=names_col
                            return(mymat)
                            })
  names(mat_list)=levels
  return(mat_list)
}
my_mat_list&lt;-dummy_mat(mymat,c('DF','low','normal','over'),Gene_states22$gene_symbol)

### Optional: The heatmap type is peculiar - I created a text-NA matrix for each category as well
text_mat&lt;-function(mat,levels,names_col){
  mat_list&lt;-lapply(levels,function(x){
                            mat[mat!=x]=NA
                            mat=t(mat)
                            colnames(mat)=names_col
                            return(mat)
                            })
  names(mat_list)=levels
  return(mat_list)
}
   my_mat_list_t&lt;-text_mat(mymat,c('DF','low','normal','over'),as.character(Gene_states22$gene_symbol))
</code></pre>

<p>In addition I needed colors for each level. These colors are created using some dataframe. You may write a similar (<code>lapply</code>-)loop here as well: </p>

<pre><code>DF_Color &lt;- data.frame(x = c(0,1), y = c(""#DEDEDE"", ""#DEDEDE""))
colnames(DF_Color) &lt;- NULL

lowColor &lt;- data.frame(x = c(0,1), y = c(""#00CCFF"", ""#00CCFF""))
colnames(lowColor) &lt;- NULL

normColor &lt;- data.frame(x = c(0,1), y = c(""#DEDE00"", ""#DEDE00""))
colnames(normColor) &lt;- NULL

overColor &lt;- data.frame(x = c(0,1), y = c(""#DE3333"", ""#DE3333""))
colnames(overColor) &lt;- NULL
</code></pre>

<p>In addition we need the columns in the matrix for each panel-category: </p>

<pre><code>mycols&lt;-lapply(levels(Gene_states22$panel),function(x) grep(x,Gene_states22$panel))
</code></pre>

<p>I stored this in a list as well. 
Next I use lapply-loop to plot. I store the values in a list and use <code>subplot</code> to put everything together: </p>

<pre><code>library(plotly)

p_list&lt;-lapply(1:length(mycols),function(j){
  columns&lt;-mycols[[j]]

p&lt;-plot_ly(
    type = ""heatmap""
) %&gt;% add_trace(
    y=rownames(my_mat_list$DF),x=colnames(my_mat_list$DF)[columns],
    z = my_mat_list$DF[,columns],
    xgap=3,ygap=3, text=my_mat_list_t$DF[,columns],hoverinfo=""x+y+text"",
    colorscale = DF_Color,
    colorbar = list(
        len = 0.3,
        y = 0.3,
        yanchor = 'top',
        title = 'DF series',
        tickvals = ''
    )
) %&gt;% add_trace(
  y=rownames(my_mat_list$low),x=colnames(my_mat_list$low)[columns],
    z = my_mat_list$low[,columns],
    xgap=3,ygap=3,text=my_mat_list_t$low[,columns],hoverinfo=""x+y+text"",
    colorscale = lowColor,
    colorbar = list(
        len = 0.3,
        y = 0.3,
        yanchor = 'top',
        title = 'low series',
        tickvals = ''
    )
) %&gt;% add_trace(
  y=rownames(my_mat_list$normal),x=colnames(my_mat_list$normal)[columns],
    z = my_mat_list$normal[,columns],
    xgap=3,ygap=3,text=my_mat_list_t$normal[,columns],hoverinfo=""x+y+text"",
    colorscale = normColor,
    colorbar = list(
        len = 0.3,
        y = 1,
        yanchor = 'top',
        title = 'normal series',
        tickvals = ''
    )
) %&gt;% add_trace(
  y=rownames(my_mat_list$over),x=colnames(my_mat_list$over)[columns],
    z = my_mat_list$over[,columns],
    xgap=3,ygap=3,text=my_mat_list_t$over[,columns],hoverinfo=""x+y+text"",
    colorscale = overColor,
    colorbar = list(
        len = 0.3,
        y = 1,
        yanchor = 'top',
        title = 'over series',
        tickvals = ''
    )
 )
return(p)
})

subplot(p_list[[1]],p_list[[2]],shareY = TRUE) %&gt;%
  layout(annotations = list(
 list(x = 0.2 , y = 1.05, text = levels(Gene_states22$panel)[1], showarrow = F, xref='paper', yref='paper'),
  list(x = 0.8 , y = 1.05, text = levels(Gene_states22$panel)[2], showarrow = F, xref='paper', yref='paper'))
)
</code></pre>

<p><a href=""https://i.stack.imgur.com/tbiv1.jpg"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/tbiv1.jpg"" alt=""enter image description here""></a></p>

<p><strong>POSSIBLE ISSUES</strong>:</p>

<ol>
<li>You have to become create around categories like <code>dfgh</code> which occur only once. If only one column is selected in <code>R</code>, the output is automatically transformed into a (numeric or character) <code>vector</code>-type. Thus maybe add an <code>as.matrix()</code> to all <code>z</code> and <code>text</code> arguments</li>
<li>hover-text doesn't really work. But <code>plotly</code> has a good documentation <a href=""https://plot.ly/r/text-and-annotations/"" rel=""nofollow noreferrer"">there</a>. You should be able to figure that out. </li>
<li>You also have to specify the width in the <code>subplot</code>-function. That will be fiddly if you have more than 10 categories. </li>
<li>Interactivity doesn't really work. You can't remove traces. Why? No idea. Do some research if you need it. I guess it is connected with the plot type. </li>
<li>I recommend specifying the extend of the plot(s) in px. That might make the tiles more similar.</li>
<li>Finally you will need some <a href=""https://plot.ly/r/reference/#layout-annotations"" rel=""nofollow noreferrer"">reference for the (subplot) titles</a> and you will need to adjust the margins of your plot. Such that the titles are visible. </li>
</ol>"	" So first things first: In your case I am not even sure whether a heatmap is what you need. In addition you should never convert a complicated to plotly. It will fail! In 90% of cases. Try recreating your plot in or whereever you want it to end up. Anything else ends up in coding hell. I started by doing some research: Here is a good description how to create heatmaps with different colors in This explains how you can create titles in subplots. From post 1 I know that I have to create a matrix for each level in your data. So I wrote a function for that: In addition I needed colors for each level. These colors are created using some dataframe. You may write a similar ( -)loop here as well: In addition we need the columns in the matrix for each panel-category: I stored this in a list as well. 
Next I use lapply-loop to plot. I store the values in a list and use to put everything together: POSSIBLE ISSUES : You have to become create around categories like which occur only once. If only one column is selected in , the output is automatically transformed into a (numeric or character) -type. Thus maybe add an to all and arguments hover-text doesn't really work. But has a good documentation there . You should be able to figure that out. You also have to specify the width in the -function. That will be fiddly if you have more than 10 categories. Interactivity doesn't really work. You can't remove traces. Why? No idea. Do some research if you need it. I guess it is connected with the plot type. I recommend specifying the extend of the plot(s) in px. That might make the tiles more similar. Finally you will need some reference for the (subplot) titles and you will need to adjust the margins of your plot. Such that the titles are visible."
new_qs_22k.csv	What is the easiest way to create a heat map of the US?	0.9999958	12081843	R matrix plot with colour threshold and grid	rmatrixplotgridlines	12082247	"<p>I am not 100% sure if your data is in a matrix and you want a heatmap type plot. Or if it is in some other form and you want a scatterplot like those you link to. I just assumed your data is as described and that you want a heatmap. I imagine it is something like: </p>

<pre><code>   x=abs(rnorm(100*100,50,25))
    x=matrix(x,nrow=100)
</code></pre>

<p>So I would reshape the data so it looks like xy coordinates with:</p>

<pre><code>require(reshape2)
require(ggplot2)
x1=melt(x)
names(x1)=c(""x"",""y"",""color"")
</code></pre>

<p>Then I would make my cutoff into a factor:</p>

<pre><code>x1$color=factor(x1$color&gt;50)
levels(x1$color)=c(""lessthan50"",""more than 50"")
</code></pre>

<p>Then call ggplot with:      </p>

<pre><code>qplot(x, y, fill=color, data=x1,geom='tile')
</code></pre>

<p><img src=""https://i.stack.imgur.com/6K9HB.png"" alt=""enter image description here""></p>"	"<p>I am not 100% sure if your data is in a matrix and you want a heatmap type plot. Or if it is in some other form and you want a scatterplot like those you link to. I just assumed your data is as described and that you want a heatmap. I imagine it is something like: </p>

<pre><code>   x=abs(rnorm(100*100,50,25))
    x=matrix(x,nrow=100)
</code></pre>

<p>So I would reshape the data so it looks like xy coordinates with:</p>

<pre><code>require(reshape2)
require(ggplot2)
x1=melt(x)
names(x1)=c(""x"",""y"",""color"")
</code></pre>

<p>Then I would make my cutoff into a factor:</p>

<pre><code>x1$color=factor(x1$color&gt;50)
levels(x1$color)=c(""lessthan50"",""more than 50"")
</code></pre>

<p>Then call ggplot with:      </p>

<pre><code>qplot(x, y, fill=color, data=x1,geom='tile')
</code></pre>

<p><img src=""https://i.stack.imgur.com/6K9HB.png"" alt=""enter image description here""></p>"	 I am not 100% sure if your data is in a matrix and you want a heatmap type plot. Or if it is in some other form and you want a scatterplot like those you link to. I just assumed your data is as described and that you want a heatmap. I imagine it is something like: So I would reshape the data so it looks like xy coordinates with: Then I would make my cutoff into a factor: Then call ggplot with:
new_qs_22k.csv	What is the easiest way to create a heat map of the US?	0.9999958	36488866	Latitude and Longitude, x and y, and differences when plotting them: geosphere and ggmap	rggplot2latitude-longitudeggmapgeosphere	36489998	"<p>I try to avoid working in any coordinate system the uses degrees instead of distances. In the US I use our State Plane system constantly. It appears that Sweden uses the RT system. Once you get your coordinates out of degrees and into distances from a datum, then you can build your grid using more conventional distances. From there you can put your coordinates back into degrees if you like. </p>

<p>I use the <a href=""http://www.inside-r.org/packages/cran/sp/docs/spTransform"" rel=""nofollow"">spTranform</a> function for coordinate conversions and use I the <a href=""http://spatialreference.org/ref/epsg/3022/"" rel=""nofollow"">Spatial Reference</a> guide to get the reference codes for the coordinate systems. </p>

<pre><code>library(""ggmap"")
library(""RgoogleMaps"")
library(""geosphere"")
library(""sp"")

stockholm &lt;- get_map(""stockholm"", zoom=11)
ggmap(stockholm)

places &lt;- c('Tensta', 'Hanviken')

pos &lt;- data.frame(Places = places, lat = NA, lon = NA)
reflatlon &lt;- getGeoCode('Stockholm, Sweden')

for(i in 1:length(places)) {
  latlon &lt;- getGeoCode(paste0(places[i], ', Stockholm'))
  pos$lat[i] &lt;- as.numeric(latlon[1])
  pos$lon[i] &lt;- as.numeric(latlon[2])
}

p &lt;- SpatialPoints(data.frame(pos$lon, pos$lat), proj4string = CRS(""+init=epsg:4326""))
p &lt;- spTransform(p, CRS(""+init=epsg:3022""))

seqx &lt;- seq(min(p@coords[,1]), max(p@coords[,1]), by = 1000)
seqy &lt;- seq(min(p@coords[,2]), max(p@coords[,2]), by = 1000)

pgrid &lt;- expand.grid(seqx, seqy)
pgrid &lt;- SpatialPoints(pgrid, proj4string = CRS(""+init=epsg:3022""))
pgrid &lt;- spTransform(pgrid, CRS(""+init=epsg:4326""))
pgrid &lt;- data.frame(pgrid@coords)

names(pgrid) &lt;- c('lon', 'lat')

ggmap(stockholm) + geom_point(aes(x = lon, y = lat), data=pgrid)
</code></pre>"	"<p>I try to avoid working in any coordinate system the uses degrees instead of distances. In the US I use our State Plane system constantly. It appears that Sweden uses the RT system. Once you get your coordinates out of degrees and into distances from a datum, then you can build your grid using more conventional distances. From there you can put your coordinates back into degrees if you like. </p>

<p>I use the <a href=""http://www.inside-r.org/packages/cran/sp/docs/spTransform"" rel=""nofollow"">spTranform</a> function for coordinate conversions and use I the <a href=""http://spatialreference.org/ref/epsg/3022/"" rel=""nofollow"">Spatial Reference</a> guide to get the reference codes for the coordinate systems. </p>

<pre><code>library(""ggmap"")
library(""RgoogleMaps"")
library(""geosphere"")
library(""sp"")

stockholm &lt;- get_map(""stockholm"", zoom=11)
ggmap(stockholm)

places &lt;- c('Tensta', 'Hanviken')

pos &lt;- data.frame(Places = places, lat = NA, lon = NA)
reflatlon &lt;- getGeoCode('Stockholm, Sweden')

for(i in 1:length(places)) {
  latlon &lt;- getGeoCode(paste0(places[i], ', Stockholm'))
  pos$lat[i] &lt;- as.numeric(latlon[1])
  pos$lon[i] &lt;- as.numeric(latlon[2])
}

p &lt;- SpatialPoints(data.frame(pos$lon, pos$lat), proj4string = CRS(""+init=epsg:4326""))
p &lt;- spTransform(p, CRS(""+init=epsg:3022""))

seqx &lt;- seq(min(p@coords[,1]), max(p@coords[,1]), by = 1000)
seqy &lt;- seq(min(p@coords[,2]), max(p@coords[,2]), by = 1000)

pgrid &lt;- expand.grid(seqx, seqy)
pgrid &lt;- SpatialPoints(pgrid, proj4string = CRS(""+init=epsg:3022""))
pgrid &lt;- spTransform(pgrid, CRS(""+init=epsg:4326""))
pgrid &lt;- data.frame(pgrid@coords)

names(pgrid) &lt;- c('lon', 'lat')

ggmap(stockholm) + geom_point(aes(x = lon, y = lat), data=pgrid)
</code></pre>"	 I try to avoid working in any coordinate system the uses degrees instead of distances. In the US I use our State Plane system constantly. It appears that Sweden uses the RT system. Once you get your coordinates out of degrees and into distances from a datum, then you can build your grid using more conventional distances. From there you can put your coordinates back into degrees if you like. I use the spTranform function for coordinate conversions and use I the Spatial Reference guide to get the reference codes for the coordinate systems.
new_qs_22k.csv	How can I animate a choropleth in Tableau?	0.9999963	52138413	plotly.figure_factory.create_scatterplot stopped working?	pythonplotplotlyscatter-plot	52148045	"<p>As I see in github plotly.figure_factory at <a href=""https://github.com/plotly/plotly.py/blob/master/plotly/figure_factory/_county_choropleth.py"" rel=""nofollow noreferrer"">_county_choropleth</a> you need just call this in another way:</p>

<pre><code>from plotly.figure_factory._county_choropleth import create_choropleth
</code></pre>

<p>and call after:</p>

<pre><code>fig = create_choropleth(bla-bla)
py.plot(fig, filename='basic-choropleth')
</code></pre>

<p>In situation with <a href=""https://github.com/plotly/plotly.py/blob/master/plotly/figure_factory/_scatterplot.py"" rel=""nofollow noreferrer"">scatterplot</a> you will need rename <code>create_scatterplot</code> to just <code>scatterplot</code>:</p>

<pre><code>from plotly.figure_factory._scatterplot import scatterplot
</code></pre>

<p>and:</p>

<pre><code>fig = scatterplot(bla-bla)
py.plot(fig, filename='basic-scatter')
</code></pre>

<p>Also I found that when you called <code>create_choropleth</code> you need to install few packages <a href=""https://github.com/plotly/documentation/issues/959"" rel=""nofollow noreferrer"">link</a> to avoid troubles:</p>

<pre><code>pip install shapely
pip install geopandas
pip install pyshp
</code></pre>

<p>And don`t forget to update your plotly version:</p>

<pre><code>pip install --upgrade plotly
</code></pre>

<p>Hope this information could help you</p>"	"<p>As I see in github plotly.figure_factory at <a href=""https://github.com/plotly/plotly.py/blob/master/plotly/figure_factory/_county_choropleth.py"" rel=""nofollow noreferrer"">_county_choropleth</a> you need just call this in another way:</p>

<pre><code>from plotly.figure_factory._county_choropleth import create_choropleth
</code></pre>

<p>and call after:</p>

<pre><code>fig = create_choropleth(bla-bla)
py.plot(fig, filename='basic-choropleth')
</code></pre>

<p>In situation with <a href=""https://github.com/plotly/plotly.py/blob/master/plotly/figure_factory/_scatterplot.py"" rel=""nofollow noreferrer"">scatterplot</a> you will need rename <code>create_scatterplot</code> to just <code>scatterplot</code>:</p>

<pre><code>from plotly.figure_factory._scatterplot import scatterplot
</code></pre>

<p>and:</p>

<pre><code>fig = scatterplot(bla-bla)
py.plot(fig, filename='basic-scatter')
</code></pre>

<p>Also I found that when you called <code>create_choropleth</code> you need to install few packages <a href=""https://github.com/plotly/documentation/issues/959"" rel=""nofollow noreferrer"">link</a> to avoid troubles:</p>

<pre><code>pip install shapely
pip install geopandas
pip install pyshp
</code></pre>

<p>And don`t forget to update your plotly version:</p>

<pre><code>pip install --upgrade plotly
</code></pre>

<p>Hope this information could help you</p>"	 As I see in github plotly.figure_factory at _county_choropleth you need just call this in another way: and call after: In situation with scatterplot you will need rename to just : and: Also I found that when you called you need to install few packages link to avoid troubles: And don`t forget to update your plotly version: Hope this information could help you
new_qs_22k.csv	How can I animate a choropleth in Tableau?	0.9999962	10944621	Dynamically updating plot in matplotlib	pythonmatplotlibtkinter	10944967	"<blockquote>
  <p><em>Is there a way in which I can update the plot just by adding more point[s] to it...</em></p>
</blockquote>

<p>There are a number of ways of animating data in matplotlib, depending on the version you have. Have you seen the <a href=""http://www.scipy.org/Cookbook/Matplotlib/Animations"">matplotlib cookbook</a> examples? Also, check out the more modern <a href=""http://matplotlib.sourceforge.net/examples/animation/index.html"">animation examples</a> in the matplotlib documentation. Finally, the <a href=""http://matplotlib.sourceforge.net/api/animation_api.html"">animation API</a> defines a function <a href=""http://matplotlib.sourceforge.net/api/animation_api.html#matplotlib.animation.FuncAnimation"">FuncAnimation</a> which animates a function in time. This function could just be the function you use to acquire your data.</p>

<p>Each method basically sets the <code>data</code> property of the object being drawn, so doesn't require clearing the screen or figure. The <code>data</code> property can simply be extended, so you can keep the previous points and just keep adding to your line (or image or whatever you are drawing).</p>

<p>Given that you say that your data arrival time is uncertain your best bet is probably just to do something like:</p>

<pre><code>import matplotlib.pyplot as plt
import numpy

hl, = plt.plot([], [])

def update_line(hl, new_data):
    hl.set_xdata(numpy.append(hl.get_xdata(), new_data))
    hl.set_ydata(numpy.append(hl.get_ydata(), new_data))
    plt.draw()
</code></pre>

<p>Then when you receive data from the serial port just call <code>update_line</code>.</p>"	"<blockquote>
  <p><em>Is there a way in which I can update the plot just by adding more point[s] to it...</em></p>
</blockquote>

<p>There are a number of ways of animating data in matplotlib, depending on the version you have. Have you seen the <a href=""http://www.scipy.org/Cookbook/Matplotlib/Animations"">matplotlib cookbook</a> examples? Also, check out the more modern <a href=""http://matplotlib.sourceforge.net/examples/animation/index.html"">animation examples</a> in the matplotlib documentation. Finally, the <a href=""http://matplotlib.sourceforge.net/api/animation_api.html"">animation API</a> defines a function <a href=""http://matplotlib.sourceforge.net/api/animation_api.html#matplotlib.animation.FuncAnimation"">FuncAnimation</a> which animates a function in time. This function could just be the function you use to acquire your data.</p>

<p>Each method basically sets the <code>data</code> property of the object being drawn, so doesn't require clearing the screen or figure. The <code>data</code> property can simply be extended, so you can keep the previous points and just keep adding to your line (or image or whatever you are drawing).</p>

<p>Given that you say that your data arrival time is uncertain your best bet is probably just to do something like:</p>

<pre><code>import matplotlib.pyplot as plt
import numpy

hl, = plt.plot([], [])

def update_line(hl, new_data):
    hl.set_xdata(numpy.append(hl.get_xdata(), new_data))
    hl.set_ydata(numpy.append(hl.get_ydata(), new_data))
    plt.draw()
</code></pre>

<p>Then when you receive data from the serial port just call <code>update_line</code>.</p>"	 Is there a way in which I can update the plot just by adding more point[s] to it... There are a number of ways of animating data in matplotlib, depending on the version you have. Have you seen the matplotlib cookbook examples? Also, check out the more modern animation examples in the matplotlib documentation. Finally, the animation API defines a function FuncAnimation which animates a function in time. This function could just be the function you use to acquire your data. Each method basically sets the property of the object being drawn, so doesn't require clearing the screen or figure. The property can simply be extended, so you can keep the previous points and just keep adding to your line (or image or whatever you are drawing). Given that you say that your data arrival time is uncertain your best bet is probably just to do something like: Then when you receive data from the serial port just call .
new_qs_22k.csv	How can I animate a choropleth in Tableau?	0.99999547	25246900	tableau waterfall chart with mixed colors	colorsbar-charttableau	25248726	"<p>It is as simple as dragging the right field to Color, and adjusting the table calculation. </p>

<p>If it's a simple running sum (for the positioning of the bar), you need to go edit the table calculation, select Compute using Advanced..., then drag all fields to addressing. Then you need to sort your data by the master field (in your case the one that has Coffee, Coke,...) maximum (ascending or descending, doesn't matter).</p>

<p>This way you guarantee that the running sum is being applied to one category at a time (at not one color at a time or something like that).</p>

<p>It's really important to understand the concept of table calculations so you can understand what's going on, how Tableau is calculating stuff. Read this <a href=""http://onlinehelp.tableausoftware.com/current/pro/online/en-us/help.htm#calculations_tablecalculations_understanding_addressing.html"" rel=""nofollow"">http://onlinehelp.tableausoftware.com/current/pro/online/en-us/help.htm#calculations_tablecalculations_understanding_addressing.html</a></p>

<p>And if you actually understand what you're doing, it's easier to find a solution. For instance, this hack of Gantt Chart to make a waterfall. What goes on rows the chart will understand at starting point of the data, and what goes on size is, well, the size of the chart. You put negative values cause you want the bar to go down. 
That being said, dragging a field to color won't mess up with the size, but it will mess up with the running sum used to determine the starting points. How to solve it? make it calculate all the colors together. How to make it? Understand table calculations and reach my solution.</p>

<p>This is the simple approach, if your database or fields have some peculiarity, this might not work perfectly, and you'll need to explain so I can try to understand how to solve</p>"	"<p>It is as simple as dragging the right field to Color, and adjusting the table calculation. </p>

<p>If it's a simple running sum (for the positioning of the bar), you need to go edit the table calculation, select Compute using Advanced..., then drag all fields to addressing. Then you need to sort your data by the master field (in your case the one that has Coffee, Coke,...) maximum (ascending or descending, doesn't matter).</p>

<p>This way you guarantee that the running sum is being applied to one category at a time (at not one color at a time or something like that).</p>

<p>It's really important to understand the concept of table calculations so you can understand what's going on, how Tableau is calculating stuff. Read this <a href=""http://onlinehelp.tableausoftware.com/current/pro/online/en-us/help.htm#calculations_tablecalculations_understanding_addressing.html"" rel=""nofollow"">http://onlinehelp.tableausoftware.com/current/pro/online/en-us/help.htm#calculations_tablecalculations_understanding_addressing.html</a></p>

<p>And if you actually understand what you're doing, it's easier to find a solution. For instance, this hack of Gantt Chart to make a waterfall. What goes on rows the chart will understand at starting point of the data, and what goes on size is, well, the size of the chart. You put negative values cause you want the bar to go down. 
That being said, dragging a field to color won't mess up with the size, but it will mess up with the running sum used to determine the starting points. How to solve it? make it calculate all the colors together. How to make it? Understand table calculations and reach my solution.</p>

<p>This is the simple approach, if your database or fields have some peculiarity, this might not work perfectly, and you'll need to explain so I can try to understand how to solve</p>"	" It is as simple as dragging the right field to Color, and adjusting the table calculation. If it's a simple running sum (for the positioning of the bar), you need to go edit the table calculation, select Compute using Advanced..., then drag all fields to addressing. Then you need to sort your data by the master field (in your case the one that has Coffee, Coke,...) maximum (ascending or descending, doesn't matter). This way you guarantee that the running sum is being applied to one category at a time (at not one color at a time or something like that). It's really important to understand the concept of table calculations so you can understand what's going on, how Tableau is calculating stuff. Read this http://onlinehelp.tableausoftware.com/current/pro/online/en-us/help.htm#calculations_tablecalculations_understanding_addressing.html And if you actually understand what you're doing, it's easier to find a solution. For instance, this hack of Gantt Chart to make a waterfall. What goes on rows the chart will understand at starting point of the data, and what goes on size is, well, the size of the chart. You put negative values cause you want the bar to go down. 
That being said, dragging a field to color won't mess up with the size, but it will mess up with the running sum used to determine the starting points. How to solve it? make it calculate all the colors together. How to make it? Understand table calculations and reach my solution. This is the simple approach, if your database or fields have some peculiarity, this might not work perfectly, and you'll need to explain so I can try to understand how to solve"
new_qs_22k.csv	How can I animate a choropleth in Tableau?	0.99999547	52030865	Change direction of axis title and label in 3dplots in R?	rplotscatter-plotscatter3d	52032299	"<blockquote>
  <p>One is to make the vertical title of those axis horizontal </p>
</blockquote>

<p>To do this you need to hide the current label, and use the text() function to add a rotated label in the correct spot; as described here <a href=""https://stackoverflow.com/questions/42117769/rotate-y-axis-label-in-scatterplot3d-adjust-to-angle-of-axis#42118044"">Rotate y-axis label in scatterplot3d (adjust to angle of axis)</a></p>

<pre><code>set.seed(42)
scatterplot3d(rnorm(20), rnorm(20), rnorm(20), ylab = """")
text(x = 5, y = -2.5, ""Y-axis"", srt = 45)
</code></pre>

<blockquote>
  <p>and for example put a label ""first interval"" for 1 in x values and so one and so forth. How an I do it?</p>
</blockquote>

<p>From the documentation - <a href=""https://cran.r-project.org/web/packages/scatterplot3d/scatterplot3d.pdf"" rel=""nofollow noreferrer"">https://cran.r-project.org/web/packages/scatterplot3d/scatterplot3d.pdf</a>
Use the x.ticklabs attribute, for example:</p>

<pre><code>xlabs &lt;- c(""first interval"", ""second"", ""third"", ""fourth"", ""this is 5"")
scatterplot3d(x,y,z, pch =16,main=""3D V1 v.s V2"",xlab = ""Class"",ylab = ""V1"", zlab = ""V2"", x.ticklabs=xlabs)
</code></pre>

<blockquote>
  <p>Also, how can I make the points linear or plane instead of dots.</p>
</blockquote>

<p>Scatterplot3d offers ""lines"" and ""vertical lines"", for example:</p>

<pre><code>scatterplot3d(x,y,z , type=""l"", lwd=5, pch="" "")
#or
scatterplot3d(x,y,z , type=""h"", lwd=5, pch="" "")
</code></pre>"	"<blockquote>
  <p>One is to make the vertical title of those axis horizontal </p>
</blockquote>

<p>To do this you need to hide the current label, and use the text() function to add a rotated label in the correct spot; as described here <a href=""https://stackoverflow.com/questions/42117769/rotate-y-axis-label-in-scatterplot3d-adjust-to-angle-of-axis#42118044"">Rotate y-axis label in scatterplot3d (adjust to angle of axis)</a></p>

<pre><code>set.seed(42)
scatterplot3d(rnorm(20), rnorm(20), rnorm(20), ylab = """")
text(x = 5, y = -2.5, ""Y-axis"", srt = 45)
</code></pre>

<blockquote>
  <p>and for example put a label ""first interval"" for 1 in x values and so one and so forth. How an I do it?</p>
</blockquote>

<p>From the documentation - <a href=""https://cran.r-project.org/web/packages/scatterplot3d/scatterplot3d.pdf"" rel=""nofollow noreferrer"">https://cran.r-project.org/web/packages/scatterplot3d/scatterplot3d.pdf</a>
Use the x.ticklabs attribute, for example:</p>

<pre><code>xlabs &lt;- c(""first interval"", ""second"", ""third"", ""fourth"", ""this is 5"")
scatterplot3d(x,y,z, pch =16,main=""3D V1 v.s V2"",xlab = ""Class"",ylab = ""V1"", zlab = ""V2"", x.ticklabs=xlabs)
</code></pre>

<blockquote>
  <p>Also, how can I make the points linear or plane instead of dots.</p>
</blockquote>

<p>Scatterplot3d offers ""lines"" and ""vertical lines"", for example:</p>

<pre><code>scatterplot3d(x,y,z , type=""l"", lwd=5, pch="" "")
#or
scatterplot3d(x,y,z , type=""h"", lwd=5, pch="" "")
</code></pre>"	" One is to make the vertical title of those axis horizontal To do this you need to hide the current label, and use the text() function to add a rotated label in the correct spot; as described here Rotate y-axis label in scatterplot3d (adjust to angle of axis) and for example put a label ""first interval"" for 1 in x values and so one and so forth. How an I do it? From the documentation - https://cran.r-project.org/web/packages/scatterplot3d/scatterplot3d.pdf Use the x.ticklabs attribute, for example: Also, how can I make the points linear or plane instead of dots. Scatterplot3d offers ""lines"" and ""vertical lines"", for example:"
new_qs_22k.csv	How can I animate a choropleth in Tableau?	0.99999523	3213973	Poor performance of CGContextStrokePath while drawing a few lines and circles on iPhone	iphoneperformancexcodegraphics	3215039	"<p>Animating objects by redrawing them constantly is a bad way to go.  Quartz drawing is one of the slowest things you can do, UI-wise, because of the way that the display system works.</p>

<p>Instead, what you will want to do is create individual layers or views for each element that will be animated.  These layers or views will only be drawn once, and then cached.  When the layers move around, they won't be redrawn, just composited.  Done this way, even the slowest iOS devices (the original iPhone, iPhone 3G, and first generation iPod touch) can animate up to 100 layers at 60 frames per second.</p>

<p>Think of it like animating a cartoon.  Rather than have the animators redraw by hand every part of every frame, they use cells to reuse elements between frames that stay the same or just move without changing form.  This significantly reduces the effort of producing a cartoon.</p>"	"<p>Animating objects by redrawing them constantly is a bad way to go.  Quartz drawing is one of the slowest things you can do, UI-wise, because of the way that the display system works.</p>

<p>Instead, what you will want to do is create individual layers or views for each element that will be animated.  These layers or views will only be drawn once, and then cached.  When the layers move around, they won't be redrawn, just composited.  Done this way, even the slowest iOS devices (the original iPhone, iPhone 3G, and first generation iPod touch) can animate up to 100 layers at 60 frames per second.</p>

<p>Think of it like animating a cartoon.  Rather than have the animators redraw by hand every part of every frame, they use cells to reuse elements between frames that stay the same or just move without changing form.  This significantly reduces the effort of producing a cartoon.</p>"	 Animating objects by redrawing them constantly is a bad way to go.  Quartz drawing is one of the slowest things you can do, UI-wise, because of the way that the display system works. Instead, what you will want to do is create individual layers or views for each element that will be animated.  These layers or views will only be drawn once, and then cached.  When the layers move around, they won't be redrawn, just composited.  Done this way, even the slowest iOS devices (the original iPhone, iPhone 3G, and first generation iPod touch) can animate up to 100 layers at 60 frames per second. Think of it like animating a cartoon.  Rather than have the animators redraw by hand every part of every frame, they use cells to reuse elements between frames that stay the same or just move without changing form.  This significantly reduces the effort of producing a cartoon.
new_qs_22k.csv	How can I animate a choropleth in PowerBI?	0.99999654	52138413	plotly.figure_factory.create_scatterplot stopped working?	pythonplotplotlyscatter-plot	52148045	"<p>As I see in github plotly.figure_factory at <a href=""https://github.com/plotly/plotly.py/blob/master/plotly/figure_factory/_county_choropleth.py"" rel=""nofollow noreferrer"">_county_choropleth</a> you need just call this in another way:</p>

<pre><code>from plotly.figure_factory._county_choropleth import create_choropleth
</code></pre>

<p>and call after:</p>

<pre><code>fig = create_choropleth(bla-bla)
py.plot(fig, filename='basic-choropleth')
</code></pre>

<p>In situation with <a href=""https://github.com/plotly/plotly.py/blob/master/plotly/figure_factory/_scatterplot.py"" rel=""nofollow noreferrer"">scatterplot</a> you will need rename <code>create_scatterplot</code> to just <code>scatterplot</code>:</p>

<pre><code>from plotly.figure_factory._scatterplot import scatterplot
</code></pre>

<p>and:</p>

<pre><code>fig = scatterplot(bla-bla)
py.plot(fig, filename='basic-scatter')
</code></pre>

<p>Also I found that when you called <code>create_choropleth</code> you need to install few packages <a href=""https://github.com/plotly/documentation/issues/959"" rel=""nofollow noreferrer"">link</a> to avoid troubles:</p>

<pre><code>pip install shapely
pip install geopandas
pip install pyshp
</code></pre>

<p>And don`t forget to update your plotly version:</p>

<pre><code>pip install --upgrade plotly
</code></pre>

<p>Hope this information could help you</p>"	"<p>As I see in github plotly.figure_factory at <a href=""https://github.com/plotly/plotly.py/blob/master/plotly/figure_factory/_county_choropleth.py"" rel=""nofollow noreferrer"">_county_choropleth</a> you need just call this in another way:</p>

<pre><code>from plotly.figure_factory._county_choropleth import create_choropleth
</code></pre>

<p>and call after:</p>

<pre><code>fig = create_choropleth(bla-bla)
py.plot(fig, filename='basic-choropleth')
</code></pre>

<p>In situation with <a href=""https://github.com/plotly/plotly.py/blob/master/plotly/figure_factory/_scatterplot.py"" rel=""nofollow noreferrer"">scatterplot</a> you will need rename <code>create_scatterplot</code> to just <code>scatterplot</code>:</p>

<pre><code>from plotly.figure_factory._scatterplot import scatterplot
</code></pre>

<p>and:</p>

<pre><code>fig = scatterplot(bla-bla)
py.plot(fig, filename='basic-scatter')
</code></pre>

<p>Also I found that when you called <code>create_choropleth</code> you need to install few packages <a href=""https://github.com/plotly/documentation/issues/959"" rel=""nofollow noreferrer"">link</a> to avoid troubles:</p>

<pre><code>pip install shapely
pip install geopandas
pip install pyshp
</code></pre>

<p>And don`t forget to update your plotly version:</p>

<pre><code>pip install --upgrade plotly
</code></pre>

<p>Hope this information could help you</p>"	 As I see in github plotly.figure_factory at _county_choropleth you need just call this in another way: and call after: In situation with scatterplot you will need rename to just : and: Also I found that when you called you need to install few packages link to avoid troubles: And don`t forget to update your plotly version: Hope this information could help you
new_qs_22k.csv	How can I animate a choropleth in PowerBI?	0.9999963	10944621	Dynamically updating plot in matplotlib	pythonmatplotlibtkinter	10944967	"<blockquote>
  <p><em>Is there a way in which I can update the plot just by adding more point[s] to it...</em></p>
</blockquote>

<p>There are a number of ways of animating data in matplotlib, depending on the version you have. Have you seen the <a href=""http://www.scipy.org/Cookbook/Matplotlib/Animations"">matplotlib cookbook</a> examples? Also, check out the more modern <a href=""http://matplotlib.sourceforge.net/examples/animation/index.html"">animation examples</a> in the matplotlib documentation. Finally, the <a href=""http://matplotlib.sourceforge.net/api/animation_api.html"">animation API</a> defines a function <a href=""http://matplotlib.sourceforge.net/api/animation_api.html#matplotlib.animation.FuncAnimation"">FuncAnimation</a> which animates a function in time. This function could just be the function you use to acquire your data.</p>

<p>Each method basically sets the <code>data</code> property of the object being drawn, so doesn't require clearing the screen or figure. The <code>data</code> property can simply be extended, so you can keep the previous points and just keep adding to your line (or image or whatever you are drawing).</p>

<p>Given that you say that your data arrival time is uncertain your best bet is probably just to do something like:</p>

<pre><code>import matplotlib.pyplot as plt
import numpy

hl, = plt.plot([], [])

def update_line(hl, new_data):
    hl.set_xdata(numpy.append(hl.get_xdata(), new_data))
    hl.set_ydata(numpy.append(hl.get_ydata(), new_data))
    plt.draw()
</code></pre>

<p>Then when you receive data from the serial port just call <code>update_line</code>.</p>"	"<blockquote>
  <p><em>Is there a way in which I can update the plot just by adding more point[s] to it...</em></p>
</blockquote>

<p>There are a number of ways of animating data in matplotlib, depending on the version you have. Have you seen the <a href=""http://www.scipy.org/Cookbook/Matplotlib/Animations"">matplotlib cookbook</a> examples? Also, check out the more modern <a href=""http://matplotlib.sourceforge.net/examples/animation/index.html"">animation examples</a> in the matplotlib documentation. Finally, the <a href=""http://matplotlib.sourceforge.net/api/animation_api.html"">animation API</a> defines a function <a href=""http://matplotlib.sourceforge.net/api/animation_api.html#matplotlib.animation.FuncAnimation"">FuncAnimation</a> which animates a function in time. This function could just be the function you use to acquire your data.</p>

<p>Each method basically sets the <code>data</code> property of the object being drawn, so doesn't require clearing the screen or figure. The <code>data</code> property can simply be extended, so you can keep the previous points and just keep adding to your line (or image or whatever you are drawing).</p>

<p>Given that you say that your data arrival time is uncertain your best bet is probably just to do something like:</p>

<pre><code>import matplotlib.pyplot as plt
import numpy

hl, = plt.plot([], [])

def update_line(hl, new_data):
    hl.set_xdata(numpy.append(hl.get_xdata(), new_data))
    hl.set_ydata(numpy.append(hl.get_ydata(), new_data))
    plt.draw()
</code></pre>

<p>Then when you receive data from the serial port just call <code>update_line</code>.</p>"	 Is there a way in which I can update the plot just by adding more point[s] to it... There are a number of ways of animating data in matplotlib, depending on the version you have. Have you seen the matplotlib cookbook examples? Also, check out the more modern animation examples in the matplotlib documentation. Finally, the animation API defines a function FuncAnimation which animates a function in time. This function could just be the function you use to acquire your data. Each method basically sets the property of the object being drawn, so doesn't require clearing the screen or figure. The property can simply be extended, so you can keep the previous points and just keep adding to your line (or image or whatever you are drawing). Given that you say that your data arrival time is uncertain your best bet is probably just to do something like: Then when you receive data from the serial port just call .
new_qs_22k.csv	How can I animate a choropleth in PowerBI?	0.9999956	3213973	Poor performance of CGContextStrokePath while drawing a few lines and circles on iPhone	iphoneperformancexcodegraphics	3215039	"<p>Animating objects by redrawing them constantly is a bad way to go.  Quartz drawing is one of the slowest things you can do, UI-wise, because of the way that the display system works.</p>

<p>Instead, what you will want to do is create individual layers or views for each element that will be animated.  These layers or views will only be drawn once, and then cached.  When the layers move around, they won't be redrawn, just composited.  Done this way, even the slowest iOS devices (the original iPhone, iPhone 3G, and first generation iPod touch) can animate up to 100 layers at 60 frames per second.</p>

<p>Think of it like animating a cartoon.  Rather than have the animators redraw by hand every part of every frame, they use cells to reuse elements between frames that stay the same or just move without changing form.  This significantly reduces the effort of producing a cartoon.</p>"	"<p>Animating objects by redrawing them constantly is a bad way to go.  Quartz drawing is one of the slowest things you can do, UI-wise, because of the way that the display system works.</p>

<p>Instead, what you will want to do is create individual layers or views for each element that will be animated.  These layers or views will only be drawn once, and then cached.  When the layers move around, they won't be redrawn, just composited.  Done this way, even the slowest iOS devices (the original iPhone, iPhone 3G, and first generation iPod touch) can animate up to 100 layers at 60 frames per second.</p>

<p>Think of it like animating a cartoon.  Rather than have the animators redraw by hand every part of every frame, they use cells to reuse elements between frames that stay the same or just move without changing form.  This significantly reduces the effort of producing a cartoon.</p>"	 Animating objects by redrawing them constantly is a bad way to go.  Quartz drawing is one of the slowest things you can do, UI-wise, because of the way that the display system works. Instead, what you will want to do is create individual layers or views for each element that will be animated.  These layers or views will only be drawn once, and then cached.  When the layers move around, they won't be redrawn, just composited.  Done this way, even the slowest iOS devices (the original iPhone, iPhone 3G, and first generation iPod touch) can animate up to 100 layers at 60 frames per second. Think of it like animating a cartoon.  Rather than have the animators redraw by hand every part of every frame, they use cells to reuse elements between frames that stay the same or just move without changing form.  This significantly reduces the effort of producing a cartoon.
new_qs_22k.csv	How can I animate a choropleth in PowerBI?	0.99999475	12730225	How to realize the DRAWING processing in Processing?	arraysarraylistdrawingprocessinglinear-algebra	12733633	"<p>In processing all of the drawing happens in a loop. An easy way to create animated sequences like you describe is to use frameCount to drive it and using the modulus function % is a good way to create a loop. For example, to animate along the x axis:</p>

<pre><code>void draw() {
   float x = 50;
   float y = 50;
   float lineLength = 50;
   int framesToAnimate = 60;
   line(x,y,x+float(frameCount % framesToAnimate)/framesToAnimate*lineLength, y);
}
</code></pre>

<p>Note: strange things will happen if you don't cast / convert to a float</p>

<p>I use this pretty often to animate other features such as the color.</p>

<pre><code>fill(color(127 + sin(float(frameCount)/90)*127, 0, 0, 127));
</code></pre>

<p>If you want to get more advanced, setting vectors and coordinates with <a href=""http://processing.org/reference/PVector.html"" rel=""nofollow"">PVector</a>. There is a pretty good tutorial on <a href=""http://www.shiffman.net/teaching/nature/vectors/"" rel=""nofollow"">Daniel Shiffman's site</a>.</p>"	"<p>In processing all of the drawing happens in a loop. An easy way to create animated sequences like you describe is to use frameCount to drive it and using the modulus function % is a good way to create a loop. For example, to animate along the x axis:</p>

<pre><code>void draw() {
   float x = 50;
   float y = 50;
   float lineLength = 50;
   int framesToAnimate = 60;
   line(x,y,x+float(frameCount % framesToAnimate)/framesToAnimate*lineLength, y);
}
</code></pre>

<p>Note: strange things will happen if you don't cast / convert to a float</p>

<p>I use this pretty often to animate other features such as the color.</p>

<pre><code>fill(color(127 + sin(float(frameCount)/90)*127, 0, 0, 127));
</code></pre>

<p>If you want to get more advanced, setting vectors and coordinates with <a href=""http://processing.org/reference/PVector.html"" rel=""nofollow"">PVector</a>. There is a pretty good tutorial on <a href=""http://www.shiffman.net/teaching/nature/vectors/"" rel=""nofollow"">Daniel Shiffman's site</a>.</p>"	 In processing all of the drawing happens in a loop. An easy way to create animated sequences like you describe is to use frameCount to drive it and using the modulus function % is a good way to create a loop. For example, to animate along the x axis: Note: strange things will happen if you don't cast / convert to a float I use this pretty often to animate other features such as the color. If you want to get more advanced, setting vectors and coordinates with PVector . There is a pretty good tutorial on Daniel Shiffman's site .
new_qs_22k.csv	How can I animate a choropleth in PowerBI?	0.99999464	31128227	How to continuously stream data points from dynamically growing list using matplotlib.animation for real time graphing?	pythonlistanimationmatplotlibdata-modeling	31233157	"<p>I don't have a twitter key to test your full code, however here is a code sample that you can adapt to animate a plot. A disadvantage of this approach is that you need to kill the process to stop the animation. This example plots the average along with the raw data, for illustration.</p>

<pre><code>import numpy
from pylab import *
import time

class StdOutListener():
  def __init__(self):
    self.start_time = time.time()
    self.x = []
    self.y = []
    self.my_average = []
    self.line_actual, = plot(self.x, self.y)                  # line stores a Line2D we can update
    self.line_average, = plot(self.x, self.my_average)       # line stores a Line2D we can update


  def on_data(self, new_value):
    time_delta = time.time() - self.start_time                # on our x axis we store time since start
    self.x.append(time_delta)
    self.y.append(new_value)
    self.my_average.append(numpy.mean(self.y))
    self.line_actual.set_data(self.x, self.y)
    self.line_average.set_data(self.x, self.my_average)
    ylim([min(self.y), max(self.y)])        # update axes to fit the data
    xlim([min(self.x), max(self.x)])
    draw()                                  # redraw the plot

ion()                                       # ion() allows matplotlib to update animations.

out_listener = StdOutListener()
for i in range(1000):
  out_listener.on_data(i + numpy.random.randint(-5,5))
</code></pre>"	"<p>I don't have a twitter key to test your full code, however here is a code sample that you can adapt to animate a plot. A disadvantage of this approach is that you need to kill the process to stop the animation. This example plots the average along with the raw data, for illustration.</p>

<pre><code>import numpy
from pylab import *
import time

class StdOutListener():
  def __init__(self):
    self.start_time = time.time()
    self.x = []
    self.y = []
    self.my_average = []
    self.line_actual, = plot(self.x, self.y)                  # line stores a Line2D we can update
    self.line_average, = plot(self.x, self.my_average)       # line stores a Line2D we can update


  def on_data(self, new_value):
    time_delta = time.time() - self.start_time                # on our x axis we store time since start
    self.x.append(time_delta)
    self.y.append(new_value)
    self.my_average.append(numpy.mean(self.y))
    self.line_actual.set_data(self.x, self.y)
    self.line_average.set_data(self.x, self.my_average)
    ylim([min(self.y), max(self.y)])        # update axes to fit the data
    xlim([min(self.x), max(self.x)])
    draw()                                  # redraw the plot

ion()                                       # ion() allows matplotlib to update animations.

out_listener = StdOutListener()
for i in range(1000):
  out_listener.on_data(i + numpy.random.randint(-5,5))
</code></pre>"	 I don't have a twitter key to test your full code, however here is a code sample that you can adapt to animate a plot. A disadvantage of this approach is that you need to kill the process to stop the animation. This example plots the average along with the raw data, for illustration.
new_qs_22k.csv	How can I animate a choropleth in d3?	0.9999968	8840255	Django and interactive graph/network visualization	djangographvisualizationsocial-networking	8934411	"<p>I like <a href=""http://mbostock.github.com/d3/"" rel=""nofollow"">d3</a>. Here's an example of a <a href=""http://mbostock.github.com/d3/ex/force.html"" rel=""nofollow"">force-directed graph</a> (often used to display social networks).</p>

<p>It would be fairly easy to add the kind of click handling you're seeking to the d3 force example.</p>"	"<p>I like <a href=""http://mbostock.github.com/d3/"" rel=""nofollow"">d3</a>. Here's an example of a <a href=""http://mbostock.github.com/d3/ex/force.html"" rel=""nofollow"">force-directed graph</a> (often used to display social networks).</p>

<p>It would be fairly easy to add the kind of click handling you're seeking to the d3 force example.</p>"	 I like d3 . Here's an example of a force-directed graph (often used to display social networks). It would be fairly easy to add the kind of click handling you're seeking to the d3 force example.
new_qs_22k.csv	How can I animate a choropleth in d3?	0.99999666	12007141	D3.js force directed graph, reduce edge crossings by making edges repel each other	javascriptgraphd3.jsforce-layout	38134664	"<p><strong>Unfortunately, the answer to your question does not exist.</strong></p>

<p>There is no built-in mechanism in D3 that repels edges or minimizes edge crossings. You would think it wouldn't be that hard to implement a charge on an edge, but here we are.</p>

<p>Furthermore, there doesn't seem to be any mechanism <strong>anywhere</strong> that reduces edge crossings in general. I've looked through dozens of visualization libraries and layout algorithms, and none of them deal with reducing edge crossings on a generic undirected graph.</p>

<p>There are a number of algorithms that work well for planar graphs, or 2-level graphs, or other simplifications. <a href=""https://github.com/cpettitt/dagre/wiki"" rel=""noreferrer"">dagre</a> works well in theory for 2-level graphs, although the utter lack of documentation makes it almost impossible to work with.</p>

<p>Part of the reason for this is that laying out graphs is <strong>hard</strong>. In particular, minimizing edge crossings is NP-hard, so I suspect that most layout designers hit that problem, bang their head against the keyboard a few times, and give up.</p>

<p>If anyone does come up with a good library for this, please publish it for the rest of us :)</p>"	"<p><strong>Unfortunately, the answer to your question does not exist.</strong></p>

<p>There is no built-in mechanism in D3 that repels edges or minimizes edge crossings. You would think it wouldn't be that hard to implement a charge on an edge, but here we are.</p>

<p>Furthermore, there doesn't seem to be any mechanism <strong>anywhere</strong> that reduces edge crossings in general. I've looked through dozens of visualization libraries and layout algorithms, and none of them deal with reducing edge crossings on a generic undirected graph.</p>

<p>There are a number of algorithms that work well for planar graphs, or 2-level graphs, or other simplifications. <a href=""https://github.com/cpettitt/dagre/wiki"" rel=""noreferrer"">dagre</a> works well in theory for 2-level graphs, although the utter lack of documentation makes it almost impossible to work with.</p>

<p>Part of the reason for this is that laying out graphs is <strong>hard</strong>. In particular, minimizing edge crossings is NP-hard, so I suspect that most layout designers hit that problem, bang their head against the keyboard a few times, and give up.</p>

<p>If anyone does come up with a good library for this, please publish it for the rest of us :)</p>"	 Unfortunately, the answer to your question does not exist. There is no built-in mechanism in D3 that repels edges or minimizes edge crossings. You would think it wouldn't be that hard to implement a charge on an edge, but here we are. Furthermore, there doesn't seem to be any mechanism anywhere that reduces edge crossings in general. I've looked through dozens of visualization libraries and layout algorithms, and none of them deal with reducing edge crossings on a generic undirected graph. There are a number of algorithms that work well for planar graphs, or 2-level graphs, or other simplifications. dagre works well in theory for 2-level graphs, although the utter lack of documentation makes it almost impossible to work with. Part of the reason for this is that laying out graphs is hard . In particular, minimizing edge crossings is NP-hard, so I suspect that most layout designers hit that problem, bang their head against the keyboard a few times, and give up. If anyone does come up with a good library for this, please publish it for the rest of us :)
new_qs_22k.csv	How can I animate a choropleth in d3?	0.9999963	52138413	plotly.figure_factory.create_scatterplot stopped working?	pythonplotplotlyscatter-plot	52148045	"<p>As I see in github plotly.figure_factory at <a href=""https://github.com/plotly/plotly.py/blob/master/plotly/figure_factory/_county_choropleth.py"" rel=""nofollow noreferrer"">_county_choropleth</a> you need just call this in another way:</p>

<pre><code>from plotly.figure_factory._county_choropleth import create_choropleth
</code></pre>

<p>and call after:</p>

<pre><code>fig = create_choropleth(bla-bla)
py.plot(fig, filename='basic-choropleth')
</code></pre>

<p>In situation with <a href=""https://github.com/plotly/plotly.py/blob/master/plotly/figure_factory/_scatterplot.py"" rel=""nofollow noreferrer"">scatterplot</a> you will need rename <code>create_scatterplot</code> to just <code>scatterplot</code>:</p>

<pre><code>from plotly.figure_factory._scatterplot import scatterplot
</code></pre>

<p>and:</p>

<pre><code>fig = scatterplot(bla-bla)
py.plot(fig, filename='basic-scatter')
</code></pre>

<p>Also I found that when you called <code>create_choropleth</code> you need to install few packages <a href=""https://github.com/plotly/documentation/issues/959"" rel=""nofollow noreferrer"">link</a> to avoid troubles:</p>

<pre><code>pip install shapely
pip install geopandas
pip install pyshp
</code></pre>

<p>And don`t forget to update your plotly version:</p>

<pre><code>pip install --upgrade plotly
</code></pre>

<p>Hope this information could help you</p>"	"<p>As I see in github plotly.figure_factory at <a href=""https://github.com/plotly/plotly.py/blob/master/plotly/figure_factory/_county_choropleth.py"" rel=""nofollow noreferrer"">_county_choropleth</a> you need just call this in another way:</p>

<pre><code>from plotly.figure_factory._county_choropleth import create_choropleth
</code></pre>

<p>and call after:</p>

<pre><code>fig = create_choropleth(bla-bla)
py.plot(fig, filename='basic-choropleth')
</code></pre>

<p>In situation with <a href=""https://github.com/plotly/plotly.py/blob/master/plotly/figure_factory/_scatterplot.py"" rel=""nofollow noreferrer"">scatterplot</a> you will need rename <code>create_scatterplot</code> to just <code>scatterplot</code>:</p>

<pre><code>from plotly.figure_factory._scatterplot import scatterplot
</code></pre>

<p>and:</p>

<pre><code>fig = scatterplot(bla-bla)
py.plot(fig, filename='basic-scatter')
</code></pre>

<p>Also I found that when you called <code>create_choropleth</code> you need to install few packages <a href=""https://github.com/plotly/documentation/issues/959"" rel=""nofollow noreferrer"">link</a> to avoid troubles:</p>

<pre><code>pip install shapely
pip install geopandas
pip install pyshp
</code></pre>

<p>And don`t forget to update your plotly version:</p>

<pre><code>pip install --upgrade plotly
</code></pre>

<p>Hope this information could help you</p>"	 As I see in github plotly.figure_factory at _county_choropleth you need just call this in another way: and call after: In situation with scatterplot you will need rename to just : and: Also I found that when you called you need to install few packages link to avoid troubles: And don`t forget to update your plotly version: Hope this information could help you
new_qs_22k.csv	How can I animate a choropleth in d3?	0.9999962	48331268	Display only values from the data set into X axis ticks	javascriptd3.jschartslinechart	48331540	"<p>This is the expected behaviour for a time scale. In D3, the axis is automatically generated, you don't have much control on the ticks.</p>

<p>The easiest alternative seems to be passing an array of the dates you have in your data to <code>tickValues</code>:</p>

<pre><code>var axis = d3.axisBottom(scale)
    .tickValues(uniqueValues);
</code></pre>

<p>Here, <code>uniqueValues</code> is an array with the dates you have in your CSV, filtered to only unique dates (otherwise you'll have several ticks in the same position).</p>

<p>here is the demo with the CSV you shared:</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""true"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code snippet-currently-hidden"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>var svg = d3.select(""svg"");
var csv = `date,close 
16-Dec-12,53.98
16-Dec-12,67.00
16-Dec-12,89.70
16-Dec-12,99.00
16-Dec-12,130.28
23-Dec-12,166.70
23-Dec-12,234.98
23-Dec-12,345.44
23-Dec-12,443.34
23-Dec-12,543.70
23-Dec-12,580.13
30-Dec-12,605.23
30-Dec-12,622.77
30-Dec-12,626.20
30-Dec-12,628.44
30-Dec-12,636.23
30-Dec-12,633.68`;
var data = d3.csvParse(csv, function(d) {
  d.date = d3.timeParse(""%d-%b-%y"")(d.date);
  return d
});
var uniqueValues = [...new Set(data.map(function(d) {
  return d.date.getTime()
}))].map(function(d) {
  return new Date(d);
});
var scale = d3.scaleTime()
  .range([30, 570])
  .domain(d3.extent(data, function(d) {
    return d.date
  }));
var axis = d3.axisBottom(scale)
  .tickValues(uniqueValues);
var gX = svg.append(""g"")
  .attr(""transform"", ""translate(0,50)"")
  .call(axis);</code></pre>
<pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;script src=""https://d3js.org/d3.v4.min.js""&gt;&lt;/script&gt;
&lt;svg width=""600"" height=""100""&gt;&lt;/svg&gt;</code></pre>
</div>
</div>
</p>

<p>PS: I'm using D3 v4 in the demo, but the principle is the same.</p>"	"<p>This is the expected behaviour for a time scale. In D3, the axis is automatically generated, you don't have much control on the ticks.</p>

<p>The easiest alternative seems to be passing an array of the dates you have in your data to <code>tickValues</code>:</p>

<pre><code>var axis = d3.axisBottom(scale)
    .tickValues(uniqueValues);
</code></pre>

<p>Here, <code>uniqueValues</code> is an array with the dates you have in your CSV, filtered to only unique dates (otherwise you'll have several ticks in the same position).</p>

<p>here is the demo with the CSV you shared:</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""true"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code snippet-currently-hidden"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>var svg = d3.select(""svg"");
var csv = `date,close 
16-Dec-12,53.98
16-Dec-12,67.00
16-Dec-12,89.70
16-Dec-12,99.00
16-Dec-12,130.28
23-Dec-12,166.70
23-Dec-12,234.98
23-Dec-12,345.44
23-Dec-12,443.34
23-Dec-12,543.70
23-Dec-12,580.13
30-Dec-12,605.23
30-Dec-12,622.77
30-Dec-12,626.20
30-Dec-12,628.44
30-Dec-12,636.23
30-Dec-12,633.68`;
var data = d3.csvParse(csv, function(d) {
  d.date = d3.timeParse(""%d-%b-%y"")(d.date);
  return d
});
var uniqueValues = [...new Set(data.map(function(d) {
  return d.date.getTime()
}))].map(function(d) {
  return new Date(d);
});
var scale = d3.scaleTime()
  .range([30, 570])
  .domain(d3.extent(data, function(d) {
    return d.date
  }));
var axis = d3.axisBottom(scale)
  .tickValues(uniqueValues);
var gX = svg.append(""g"")
  .attr(""transform"", ""translate(0,50)"")
  .call(axis);</code></pre>
<pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;script src=""https://d3js.org/d3.v4.min.js""&gt;&lt;/script&gt;
&lt;svg width=""600"" height=""100""&gt;&lt;/svg&gt;</code></pre>
</div>
</div>
</p>

<p>PS: I'm using D3 v4 in the demo, but the principle is the same.</p>"	 This is the expected behaviour for a time scale. In D3, the axis is automatically generated, you don't have much control on the ticks. The easiest alternative seems to be passing an array of the dates you have in your data to : Here, is an array with the dates you have in your CSV, filtered to only unique dates (otherwise you'll have several ticks in the same position). here is the demo with the CSV you shared: PS: I'm using D3 v4 in the demo, but the principle is the same.
new_qs_22k.csv	How can I animate a choropleth in d3?	0.9999962	10944621	Dynamically updating plot in matplotlib	pythonmatplotlibtkinter	10944967	"<blockquote>
  <p><em>Is there a way in which I can update the plot just by adding more point[s] to it...</em></p>
</blockquote>

<p>There are a number of ways of animating data in matplotlib, depending on the version you have. Have you seen the <a href=""http://www.scipy.org/Cookbook/Matplotlib/Animations"">matplotlib cookbook</a> examples? Also, check out the more modern <a href=""http://matplotlib.sourceforge.net/examples/animation/index.html"">animation examples</a> in the matplotlib documentation. Finally, the <a href=""http://matplotlib.sourceforge.net/api/animation_api.html"">animation API</a> defines a function <a href=""http://matplotlib.sourceforge.net/api/animation_api.html#matplotlib.animation.FuncAnimation"">FuncAnimation</a> which animates a function in time. This function could just be the function you use to acquire your data.</p>

<p>Each method basically sets the <code>data</code> property of the object being drawn, so doesn't require clearing the screen or figure. The <code>data</code> property can simply be extended, so you can keep the previous points and just keep adding to your line (or image or whatever you are drawing).</p>

<p>Given that you say that your data arrival time is uncertain your best bet is probably just to do something like:</p>

<pre><code>import matplotlib.pyplot as plt
import numpy

hl, = plt.plot([], [])

def update_line(hl, new_data):
    hl.set_xdata(numpy.append(hl.get_xdata(), new_data))
    hl.set_ydata(numpy.append(hl.get_ydata(), new_data))
    plt.draw()
</code></pre>

<p>Then when you receive data from the serial port just call <code>update_line</code>.</p>"	"<blockquote>
  <p><em>Is there a way in which I can update the plot just by adding more point[s] to it...</em></p>
</blockquote>

<p>There are a number of ways of animating data in matplotlib, depending on the version you have. Have you seen the <a href=""http://www.scipy.org/Cookbook/Matplotlib/Animations"">matplotlib cookbook</a> examples? Also, check out the more modern <a href=""http://matplotlib.sourceforge.net/examples/animation/index.html"">animation examples</a> in the matplotlib documentation. Finally, the <a href=""http://matplotlib.sourceforge.net/api/animation_api.html"">animation API</a> defines a function <a href=""http://matplotlib.sourceforge.net/api/animation_api.html#matplotlib.animation.FuncAnimation"">FuncAnimation</a> which animates a function in time. This function could just be the function you use to acquire your data.</p>

<p>Each method basically sets the <code>data</code> property of the object being drawn, so doesn't require clearing the screen or figure. The <code>data</code> property can simply be extended, so you can keep the previous points and just keep adding to your line (or image or whatever you are drawing).</p>

<p>Given that you say that your data arrival time is uncertain your best bet is probably just to do something like:</p>

<pre><code>import matplotlib.pyplot as plt
import numpy

hl, = plt.plot([], [])

def update_line(hl, new_data):
    hl.set_xdata(numpy.append(hl.get_xdata(), new_data))
    hl.set_ydata(numpy.append(hl.get_ydata(), new_data))
    plt.draw()
</code></pre>

<p>Then when you receive data from the serial port just call <code>update_line</code>.</p>"	 Is there a way in which I can update the plot just by adding more point[s] to it... There are a number of ways of animating data in matplotlib, depending on the version you have. Have you seen the matplotlib cookbook examples? Also, check out the more modern animation examples in the matplotlib documentation. Finally, the animation API defines a function FuncAnimation which animates a function in time. This function could just be the function you use to acquire your data. Each method basically sets the property of the object being drawn, so doesn't require clearing the screen or figure. The property can simply be extended, so you can keep the previous points and just keep adding to your line (or image or whatever you are drawing). Given that you say that your data arrival time is uncertain your best bet is probably just to do something like: Then when you receive data from the serial port just call .
