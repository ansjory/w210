user_input	similarity	q_id	q_title	tags	accepted_answer_id	a_body	a_cleaned_body
Is there a way to visualize the distribution of my data?	0.9999957	7688275	save yaxis legends as a separate grob?	rggplot2	15642634.0	"<p>This question has been sitting long enough, that it is time to document an answer for posterity.</p>

<p>The short answer is that highly-customized data visualizations cannot be done using function wrappers from the 'lattice' and 'ggplot2' packages.  The purpose of a function wrapper is to take some of the decisions out of your hands, so you will always be limited to the decisions originally envisioned by the function coder.  I highly recommend everyone learn the 'lattice' or 'ggplot2' packages, but these packages are more useful for data exploration than for being creative with data visualizations.</p>

<p><strong>This answer is for those who want to create a customized visual.</strong>  The following process may take half a day, but that is significantly less time than it would take to hack the 'lattice' or 'ggplot2' packages into the shape you want.  This isn't a criticism of either of those packages; it's just a byproduct of their purpose.  When you need a creative visual for a publication or client, 4 or 5 hours of your day is nothing compared to the payoff.</p>

<p>The work to make a customized visual is pretty simple with the 'grid' package, but that doesn't mean the math behind it is always simple.  Most of the work in this example is actually the math and not the graphic.</p>

<p><strong>Preface</strong>: There are some things you should know before you being working with the base 'grid' package for your visuals.  The first is that 'grid' works off the idea of viewports.  These are plotting spaces that allow you to reference from within that space, ignoring the rest of the graphic.  This is important, because it allows you to make graphics without having to scale your work into fractions of the entire space.  It's a lot like the layout options in the base plotting functions, except that they can overlap, be rotated, and made transparent.</p>

<p>Units are another thing to know.  The viewports each have a variety of units that you can use to indicate positions and sizes.  You can see the whole list in the 'grid' documentation, but there are only a few that I use very often: npc, native, strwidth, and lines.  Npc units start at (0,0) in the bottom left and go to c(1,1) in the upper right.  Native units use an 'xscale' and 'yscale' to create what is essentially a plotting space for data.  Strwidth units tell you how wide a certain string of text would be once printed on the graphic.  Lines units tell you how tall a line of text would be once printed on the graphic.  Since multiple types of units are always available, you should get in the habit of always either explicitly defining a number with a 'unit' function or specifying the 'default.units' argument from within your drawing functions.</p>

<p>Finally, you have the ability to specify justifications for all your objects' locations.  This is HUGE.  It means you can specify the location of a shape and then say how you want that shape horizontally and vertically justified (center, left, right, bottom, top).  You can line up things perfectly this way by referencing the location of other objects.</p>

<hr>

<p><strong>This is what we are making</strong>:  This isn't a perfect graphic, since I'm having to guess what the OP wants, but it is enough to get us on our way to a perfect graphic.</p>

<p><img src=""https://i.stack.imgur.com/Op7l1.png"" alt=""demo graph""></p>

<hr>

<p><strong>Step 1</strong>: Load up some libraries to work with.  When you want to do highly-customized visuals, use the 'grid' package.  It's the base set of functions that wrappers like 'lattice' and 'ggplot2' are calling.  When you want to work with dates, use the 'lubridate' package, because IT MAKES YOUR LIFE BETTER.  This last one is a personal preference: when I'm going to doing any sort of data summary work, I like to use the 'plyr' package.  It allows me to quickly shape my data into aggregate forms.</p>

<pre><code>library(grid)
library(lubridate)
library(plyr)
</code></pre>

<p><strong>Sample data generation</strong>: This isn't necessary if you already have your data, but for this example, I'm creating a set of sample data.  You can play around with it by changing the user settings for the data generation.  The script is flexible and will adapt to the data generated.  Feel free to add more websites and play around with the lambda values.</p>

<pre><code>    set.seed(1)

#############################################
# User settings for the data generation.    #
#############################################

# Set number of hours to generate data for.
time_Periods &lt;- 100

# Set starting datetime in m/d/yyyy hh:mm format.
start_Datetime &lt;- ""2/24/2013 00:00""

# Specify a list of websites along with a
# Poisson lambda to represent the average
# number of hits in a given time period.
df_Websites &lt;- read.table(text=""
url lambda
http://www.asitenoonereallyvisits.com 1
http://www.asitesomepeoplevisit.com 10
http://www.asitesomemorepeoplevisit.com 20
http://www.asiteevenmorepeoplevisit.com 40
http://www.asiteeveryonevisits.com 80
"", header=TRUE, sep="" "")

#############################################
# Generate the data.                        #
#############################################

# Initialize lists to hold hit data and
# website names.
hits &lt;- list()
websites &lt;- list()

# For each time period and for each website,
# flip a coin to see if any visitors come.  If
# visitors come, use a Poisson distribution to
# see how many come.
# Also initialize the list of website names.
for (i in 1:nrow(df_Websites)){
    hits[[i]] &lt;- rbinom(time_Periods, 1, 0.5) * rpois(time_Periods, df_Websites$lambda[i])
    websites[[i]] &lt;- rep(df_Websites$url[i], time_Periods)
}

# Initialize list of time periods.
datetimes &lt;- mdy_hm(start_Datetime) + hours(1:time_Periods)

# Tie the data into a data frame and erase rows with no hits.
# This is what the real data is more likely to look like
# after import and cleaning.
df_Hits &lt;- data.frame(datetime=rep(datetimes, nrow(df_Websites)), hits=unlist(hits), website=unlist(websites))
df_Hits &lt;- df_Hits[df_Hits$hits &gt; 0,]

# Clean up data-generation variables.
rm(list=ls()[ls()!=""df_Hits""])
</code></pre>

<p><strong>Step 2</strong>: Now, we need to decide how we want our graphic to work.  It's useful to separate things like sizes and colors into a different section of your code, so you can quickly make changes.  Here, I've chosen some basic settings that should produce a decent graphic.  You'll notice that a few of the size settings are using the 'unit' function.  This is one of the amazing things about the 'grid' package.  You can use various units to describe space on your graphic.  For instance, <code>unit(1, ""lines"")</code> is the height of one line of text.  This makes laying out a graphic significantly easier.</p>

<pre><code>#############################################
# User settings for the graphic.            #
#############################################

# Specify the window width and height and
# pixels per inch.
device_Width=12
device_Height=4.5
pixels_Per_Inch &lt;- 100

# Specify the bin width (in hours) of the
# upper histogram.
bin_Width &lt;- 2

# Specify a padding size for separating text
# from other plot elements.
padding &lt;- unit(1, ""strwidth"", ""W"")

# Specify the bin cut-off values for the hit
# counts and the corresponding colors.  The
# cutoff should be the maximum value to be
# contained in the bin.
bin_Settings &lt;- read.table(text=""
cutoff color
10 'darkblue'
20 'deepskyblue'
40 'purple'
80 'magenta'
160 'red'
"", header=TRUE, sep="" "")

# Specify the size of the histogram plots 
# in 'grid' units.  Override only if necessary.
# histogram_Size &lt;- unit(6, ""lines"")
histogram_Size &lt;- unit(nrow(bin_Settings) + 1, ""lines"")

# Set the background color for distinguishing
# between rows of data.
row_Background &lt;- ""gray90""

# Set the color for the date lines.
date_Color &lt;- ""gray40""

# Set the color for marker lines on histograms.
marker_Color &lt;- ""gray80""

# Set the fontsize for labels.
label_Size &lt;- 10
</code></pre>

<p><strong>Step 3</strong>: It's time to make the graphic.  I have limited space for explanations in an SO answer, so I will summarize and then leave the code comments to explain the details.  In a nutshell, I'm calculating how big everything will be and then making the plots one at a time.  For each plot, I format my data first, so I can specify the viewport appropriately.  Then I lay down labels that need to be behind the data, and then I plot the data.  At the end, I ""pop"" the viewport to finalize it.</p>

<pre><code>    #############################################
# Make the graphic.                         #
#############################################

# Make sure bin cutoffs are in increasing order.
# This way, we can make assumptions later.
bin_Settings &lt;- bin_Settings[order(bin_Settings$cutoff),]

# Initialize plot window.
# Make sure you always specify the pixels per
# inch, so you have an appropriately scaled
# graphic for output.
windows(
    width=device_Width,
    height=device_Height,
    xpinch=pixels_Per_Inch,
    ypinch=pixels_Per_Inch)
grid.newpage()

# Push an initial viewport, so we can set the
# font size to use in calculating label widths.
pushViewport(viewport(gp=gpar(fontsize=label_Size)))

# Find the list of websites in the data.
unique_Urls &lt;- as.character(unique(df_Hits$website))

# Calculate the width of the website
# urls once printed on the screen.
label_Width &lt;- list()
for (i in 1:length(unique_Urls)){
    label_Width[[i]] &lt;- convertWidth(unit(1, ""strwidth"", unique_Urls[i]), ""npc"")
}
# Use the maximum url width plus two padding.
x_Label_Margin &lt;- unit(max(unlist(label_Width)), ""npc"") + padding * 2

# Calculate a height for the date labels plus two padding.
y_Label_Margin &lt;- unit(1, ""strwidth"", ""99/99/9999"") + padding * 2

# Calculate size of main plot after making
# room for histogram and label margins.
main_Width &lt;- unit(1, ""npc"") - histogram_Size - x_Label_Margin
main_Height &lt;- unit(1, ""npc"") - histogram_Size - y_Label_Margin

# Calculate x values, using the minimum datetime
# as zero, and counting the hours between each
# datetime and the minimum.
x_Values &lt;- as.integer((df_Hits$datetime - min(df_Hits$datetime)))/60^2

# Initialize main plotting area
pushViewport(viewport(
    x=x_Label_Margin,
    y=y_Label_Margin,
    width=main_Width,
    height=main_Height,
    xscale=c(-1, max(x_Values) + 1),
    yscale=c(0, length(unique_Urls) + 1),
    just=c(""left"", ""bottom""),
    gp=gpar(fontsize=label_Size)))

# Put grey background behind every other website
# to make data easier to read, and write urls as
# y-labels.
for (i in 1:length(unique_Urls)){
    if (i%%2==0){
        grid.rect(
            x=unit(-1, ""npc""),
            y=i,
            width=unit(2, ""npc""),
            height=1,
            default.units=""native"",
            just=c(""left"", ""center""),
            gp=gpar(col=row_Background, fill=row_Background))
    }

    grid.text(
        unique_Urls[i],
        x=unit(0, ""npc"") - padding,
        y=i,
        default.units=""native"",
        just=c(""right"", ""center""))
}

# Find the hour offset of the minimum date value.
time_Offset &lt;- as.integer(format(min(df_Hits$datetime), ""%H""))

# Find the dates in the data.
x_Labels &lt;- unique(format(df_Hits$datetime, ""%m/%d/%Y""))

# Find where the days begin in the data.
midnight_Locations &lt;- (0:max(x_Values))[(0:max(x_Values)+time_Offset)%%24==0]

# Write the appropriate date labels on the x-axis
# where the days begin.
grid.text(
    x_Labels,
    x=midnight_Locations,
    y=unit(0, ""npc"") - padding,
    default.units=""native"",
    just=c(""right"", ""center""),
    rot=90)

# Draw lines to vertically mark when days begin.
grid.polyline(
    x=c(midnight_Locations, midnight_Locations),
    y=unit(c(rep(0, length(midnight_Locations)), rep(1, length(midnight_Locations))), ""npc""),
    default.units=""native"",
    id=rep(midnight_Locations, 2),
    gp=gpar(lty=2, col=date_Color))

# Initialize bin assignment variable.
bin_Assignment &lt;- 1

# Calculate which bin each hit value belongs in.
for (i in 1:nrow(bin_Settings)){
    bin_Assignment &lt;- bin_Assignment + ifelse(df_Hits$hits&gt;bin_Settings$cutoff[i], 1, 0)
}

# Draw points, coloring according to the bin settings.
grid.points(
    x=x_Values,
    y=match(df_Hits$website, unique_Urls),
    pch=19,
    size=unit(1, ""native""),
    gp=gpar(col=as.character(bin_Settings$color[bin_Assignment]), alpha=0.5))

# Finalize the main plotting area.
popViewport()

# Create the bins for the upper histogram.
bins &lt;- ddply(
    data.frame(df_Hits, bin_Assignment, mid=floor(x_Values/bin_Width)*bin_Width+bin_Width/2),
    .(bin_Assignment, mid),
    summarize,
    freq=length(hits))

# Initialize upper histogram area
pushViewport(viewport(
    x=x_Label_Margin,
    y=y_Label_Margin + main_Height,
    width=main_Width,
    height=histogram_Size,
    xscale=c(-1, max(x_Values) + 1),
    yscale=c(0, max(bins$freq) * 1.05),
    just=c(""left"", ""bottom""),
    gp=gpar(fontsize=label_Size)))


# Calculate where to put four value markers.
marker_Interval &lt;- floor(max(bins$freq)/4)
digits &lt;- nchar(marker_Interval)
marker_Interval &lt;- round(marker_Interval, -digits+1)

# Draw horizontal lines to mark values.
grid.polyline(
    x=unit(c(rep(0,4), rep(1,4)), ""npc""),
    y=c(1:4 * marker_Interval, 1:4 * marker_Interval),
    default.units=""native"",
    id=rep(1:4, 2),
    gp=gpar(lty=2, col=marker_Color))

# Write value labels for each marker.
grid.text(
    1:4 * marker_Interval,
    x=unit(0, ""npc"") - padding,
    y=1:4 * marker_Interval,
    default.units=""native"",
    just=c(""right"", ""center""))

# Finalize upper histogram area, so we
# can turn it back on but with clipping.
popViewport()

# Initialize upper histogram area again,
# but with clipping turned on.
pushViewport(viewport(
    x=x_Label_Margin,
    y=y_Label_Margin + main_Height,
    width=main_Width,
    height=histogram_Size,
    xscale=c(-1, max(x_Values) + 1),
    yscale=c(0, max(bins$freq) * 1.05),
    just=c(""left"", ""bottom""),
    gp=gpar(fontsize=label_Size),
    clip=""on""))

# Draw bars for each bin.
for (i in 1:nrow(bin_Settings)){
    active_Bin &lt;- bins[bins$bin_Assignment==i,]
    if (nrow(active_Bin)&gt;0){
        for (j in 1:nrow(active_Bin)){
            grid.rect(
                x=active_Bin$mid[j],
                y=0,
                width=bin_Width,
                height=active_Bin$freq[j],
                default.units=""native"",
                just=c(""center"",""bottom""),
                gp=gpar(col=as.character(bin_Settings$color[i]), fill=as.character(bin_Settings$color[i]), alpha=1/nrow(bin_Settings)))
        }
    }
}

# Draw x-axis.
grid.lines(x=unit(c(0, 1), ""npc""), y=0, default.units=""native"")

# Finalize upper histogram area.
popViewport()

# Calculate the frequencies for each website and bin.
freq_Data &lt;- ddply(
    data.frame(df_Hits, bin_Assignment),
    .(website, bin_Assignment),
    summarize,
    freq=length(hits))

# Create the line data for the side histogram.
line_Data &lt;- matrix(0, nrow=length(unique_Urls)+2, ncol=nrow(bin_Settings))
for (i in 1:nrow(freq_Data)){
    line_Data[match(freq_Data$website[i], unique_Urls)+1,freq_Data$bin_Assignment[i]] &lt;- freq_Data$freq[i]
}


# Initialize side histogram area
pushViewport(viewport(
    x=x_Label_Margin + main_Width,
    y=y_Label_Margin,
    width=histogram_Size,
    height=main_Height,
    xscale=c(0, max(line_Data) * 1.05),
    yscale=c(0, length(unique_Urls) + 1),
    just=c(""left"", ""bottom""),
    gp=gpar(fontsize=label_Size)))

# Calculate where to put four value markers.
marker_Interval &lt;- floor(max(line_Data)/4)
digits &lt;- nchar(marker_Interval)
marker_Interval &lt;- round(marker_Interval, -digits+1)

# Draw vertical lines to mark values.
grid.polyline(
    x=c(1:4 * marker_Interval, 1:4 * marker_Interval),
    y=unit(c(rep(0,4), rep(1,4)), ""npc""),
    default.units=""native"",
    id=rep(1:4, 2),
    gp=gpar(lty=2, col=marker_Color))

# Write value labels for each marker.
grid.text(
    1:4 * marker_Interval,
    x=1:4 * marker_Interval,
    y=unit(0, ""npc"") - padding,
    default.units=""native"",
    just=c(""center"", ""top""))

# Draw lines for each bin setting.
grid.polyline(
    x=array(line_Data),
    y=rep(0:(length(unique_Urls)+1), nrow(bin_Settings)),
    default.units=""native"",
    id=array(t(matrix(1:nrow(bin_Settings), nrow=nrow(bin_Settings), ncol=length(unique_Urls)+2))),
    gp=gpar(col=as.character(bin_Settings$color)))

# Draw vertical line for the y-axis.
grid.lines(x=0, y=c(0, length(unique_Urls)+1), default.units=""native"")

# Finalize side histogram area.
popViewport()

# Draw legend.
# Draw box behind legend headers.
grid.rect(
    x=0,
    y=1,
    width=unit(1, ""strwidth"", names(bin_Settings)[1]) + unit(1, ""strwidth"", names(bin_Settings)[2]) + 3 * padding,
    height=unit(1, ""lines""),
    default.units=""npc"",
    just=c(""left"",""top""),
    gp=gpar(col=row_Background, fill=row_Background))

# Draw legend headers from bin_Settings variable.
grid.text(
    names(bin_Settings)[1],
    x=padding,
    y=1,
    default.units=""npc"",
    just=c(""left"",""top""))

grid.text(
    names(bin_Settings)[2],
    x=unit(1, ""strwidth"", names(bin_Settings)[1]) + 2 * padding,
    y=1,
    default.units=""npc"",
    just=c(""left"",""top""))

# For each row in the bin_Settings variable,
# write the cutoff values and the color associated.
# Write the color name in the color it specifies.
for (i in 1:nrow(bin_Settings)){
    grid.text(
        bin_Settings$cutoff[i],
        x=unit(1, ""strwidth"", names(bin_Settings)[1]) + padding,
        y=unit(1, ""npc"") - i * unit(1, ""lines""),
        default.units=""npc"",
        just=c(""right"",""top""))

    grid.text(
        bin_Settings$color[i],
        x=unit(1, ""strwidth"", names(bin_Settings)[1]) + 2 * padding,
        y=unit(1, ""npc"") - i * unit(1, ""lines""),
        default.units=""npc"",
        just=c(""left"",""top""),
        gp=gpar(col=as.character(bin_Settings$color[i])))
}
</code></pre>"	" This question has been sitting long enough, that it is time to document an answer for posterity. The short answer is that highly-customized data visualizations cannot be done using function wrappers from the 'lattice' and 'ggplot2' packages.  The purpose of a function wrapper is to take some of the decisions out of your hands, so you will always be limited to the decisions originally envisioned by the function coder.  I highly recommend everyone learn the 'lattice' or 'ggplot2' packages, but these packages are more useful for data exploration than for being creative with data visualizations. This answer is for those who want to create a customized visual. The following process may take half a day, but that is significantly less time than it would take to hack the 'lattice' or 'ggplot2' packages into the shape you want.  This isn't a criticism of either of those packages; it's just a byproduct of their purpose.  When you need a creative visual for a publication or client, 4 or 5 hours of your day is nothing compared to the payoff. The work to make a customized visual is pretty simple with the 'grid' package, but that doesn't mean the math behind it is always simple.  Most of the work in this example is actually the math and not the graphic. Preface : There are some things you should know before you being working with the base 'grid' package for your visuals.  The first is that 'grid' works off the idea of viewports.  These are plotting spaces that allow you to reference from within that space, ignoring the rest of the graphic.  This is important, because it allows you to make graphics without having to scale your work into fractions of the entire space.  It's a lot like the layout options in the base plotting functions, except that they can overlap, be rotated, and made transparent. Units are another thing to know.  The viewports each have a variety of units that you can use to indicate positions and sizes.  You can see the whole list in the 'grid' documentation, but there are only a few that I use very often: npc, native, strwidth, and lines.  Npc units start at (0,0) in the bottom left and go to c(1,1) in the upper right.  Native units use an 'xscale' and 'yscale' to create what is essentially a plotting space for data.  Strwidth units tell you how wide a certain string of text would be once printed on the graphic.  Lines units tell you how tall a line of text would be once printed on the graphic.  Since multiple types of units are always available, you should get in the habit of always either explicitly defining a number with a 'unit' function or specifying the 'default.units' argument from within your drawing functions. Finally, you have the ability to specify justifications for all your objects' locations.  This is HUGE.  It means you can specify the location of a shape and then say how you want that shape horizontally and vertically justified (center, left, right, bottom, top).  You can line up things perfectly this way by referencing the location of other objects. This is what we are making :  This isn't a perfect graphic, since I'm having to guess what the OP wants, but it is enough to get us on our way to a perfect graphic. Step 1 : Load up some libraries to work with.  When you want to do highly-customized visuals, use the 'grid' package.  It's the base set of functions that wrappers like 'lattice' and 'ggplot2' are calling.  When you want to work with dates, use the 'lubridate' package, because IT MAKES YOUR LIFE BETTER.  This last one is a personal preference: when I'm going to doing any sort of data summary work, I like to use the 'plyr' package.  It allows me to quickly shape my data into aggregate forms. Sample data generation : This isn't necessary if you already have your data, but for this example, I'm creating a set of sample data.  You can play around with it by changing the user settings for the data generation.  The script is flexible and will adapt to the data generated.  Feel free to add more websites and play around with the lambda values. Step 2 : Now, we need to decide how we want our graphic to work.  It's useful to separate things like sizes and colors into a different section of your code, so you can quickly make changes.  Here, I've chosen some basic settings that should produce a decent graphic.  You'll notice that a few of the size settings are using the 'unit' function.  This is one of the amazing things about the 'grid' package.  You can use various units to describe space on your graphic.  For instance, is the height of one line of text.  This makes laying out a graphic significantly easier. Step 3 : It's time to make the graphic.  I have limited space for explanations in an SO answer, so I will summarize and then leave the code comments to explain the details.  In a nutshell, I'm calculating how big everything will be and then making the plots one at a time.  For each plot, I format my data first, so I can specify the viewport appropriately.  Then I lay down labels that need to be behind the data, and then I plot the data.  At the end, I ""pop"" the viewport to finalize it."
Is there a way to visualize the distribution of my data?	0.9999957	36205526	Tooltip bug with dynamic google charts	javascriptsvgdynamicchartstimeline	36206232.0	"<p>So I found the solution , </p>

<pre><code>container = document.getElementById('' + youridentifier + '');
chart = new google.visualization.Timeline(container);
chart.draw(dataSet, options);
</code></pre>

<p>Every time you ""redraw"" the google chart you have to create a new visualization  object .</p>"	" So I found the solution , Every time you ""redraw"" the google chart you have to create a new visualization  object ."
Is there a way to visualize the distribution of my data?	0.9999956	50689123	Making a solid contour using seaborn in Python	pythonplotseaborn	50689263.0	"<p>You are referring to a <code>kdeplot</code> here. This usually needs some contours to make sense. I.e. from a single contour you cannot know the distribution of the data. </p>

<p>But if you still want to have a single contour, you may use the <code>n_levels</code> argument and set it to <code>1</code>.</p>

<pre><code>import matplotlib.pyplot as plt
import numpy as np; np.random.seed(10)
import seaborn as sns; sns.set(color_codes=True)
mean, cov = [0, 2], [(1, .5), (.5, 1)]
x, y = np.random.multivariate_normal(mean, cov, size=50).T

ax = sns.kdeplot(x, y, n_levels=1, cmap=""Purples_d"", shade=True, shade_lowest=True)

plt.show()
</code></pre>

<p><a href=""https://i.stack.imgur.com/hKs7w.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/hKs7w.png"" alt=""enter image description here""></a></p>"	 You are referring to a here. This usually needs some contours to make sense. I.e. from a single contour you cannot know the distribution of the data. But if you still want to have a single contour, you may use the argument and set it to .
Is there a way to visualize the distribution of my data?	0.99999523	15468622	Facebook search API without locale	facebookapifacebook-graph-apisearchlocale	15549177.0	"<p>I don't think so. </p>

<p>If you try a different query without specifying the locale e.g., <code>search?q=obama&amp;type=post</code> then you'll most likely see some results. Facebook defaults to the locale of the account you are using to search.</p>

<p>A search for <code>tnt.fm/mmci8</code> returns no results for me because it is not available in my default <code>en_US</code> locale. Your post is only available in the <code>pt_BR</code> locale. </p>

<p>It looks like the only options for searching are: </p>

<ol>
<li>Default locale</li>
<li>A specified locale </li>
</ol>"	 I don't think so. If you try a different query without specifying the locale e.g., then you'll most likely see some results. Facebook defaults to the locale of the account you are using to search. A search for returns no results for me because it is not available in my default locale. Your post is only available in the locale. It looks like the only options for searching are: Default locale A specified locale
Is there a way to visualize the distribution of my data?	0.9999949	15053686	Networkx: Overlapping edges when visualizing MultiGraph	pythonpython-2.7matplotlibgraphviznetworkx	15069150.0	<p>Unfortunately not.   It is technically possible to do but so far nobody has written the code.</p>	 Unfortunately not.   It is technically possible to do but so far nobody has written the code.
How do I show data on a map?	0.9999957	56212612	"Calling a hook (useMutation) inside an event handler error: ""Hooks can only be called inside of the body of a function component"""	reactjsgraphqlreact-hooksmutation	56212940.0	"<blockquote>
  <p>So, how do I call a mutation inside an event handler?</p>
</blockquote>

<ol>
<li><strong>Hooks are ONLY for functional components</strong>, not for class based (use apollo <code>client.mutation()</code> or <code>&lt;Mutation/&gt;</code> component)</li>
<li><code>useMutation</code> returns function intended to be used on demand - this function must be used in event handler, not entire <code>useMutation</code></li>
</ol>

<p>react-apollo-hooks project description contains an example of <a href=""https://github.com/trojanowski/react-apollo-hooks#usemutation"" rel=""nofollow noreferrer"">usemutation</a> used with event handler.</p>"	 So, how do I call a mutation inside an event handler? Hooks are ONLY for functional components , not for class based (use apollo or component) returns function intended to be used on demand - this function must be used in event handler, not entire react-apollo-hooks project description contains an example of usemutation used with event handler.
How do I show data on a map?	0.9999951	1095419	Is there an API for openstreetmap?	apigeospatialopenstreetmap	16789444.0	"<p>I've found a great API for reading Openstreetmap data; <a href=""http://mapserver.org/mapscript/index.html#mapscript"" rel=""nofollow"">Mapscript</a>.
This is an interface to MapServer, which is able to read *.map and *.shp files. It is able to use a spatial index and is therefore potentially extremely fast. I've done random polygon lookups (checking if a polygon intersects land) of the world coastline shape file in 40 ms.</p>"	" I've found a great API for reading Openstreetmap data; Mapscript .
This is an interface to MapServer, which is able to read *.map and *.shp files. It is able to use a spatial index and is therefore potentially extremely fast. I've done random polygon lookups (checking if a polygon intersects land) of the world coastline shape file in 40 ms."
How do I show data on a map?	0.99999475	34715002	How to validated geography polygon in SQL server 2008?	sql-server-2008validationpolygongeospatialgeography	48818388.0	"<p>This is working for me on SQL Server 2008. After loading the shape as a geometry, use <code>MakeValid()</code> to correct it, then reload into a geography.</p>

<pre><code>declare @gt nvarchar(max)
declare @gm geometry
declare @gmvalid geometry

set @gmvalid = @gm.MakeValid()

  set @gt = @gmvalid.STAsText()

  --select @gt
  if LEFT(@gt,7 ) = 'POLYGON'
  begin
  set @gg = geography::STPolyFromText(@gt, 4326)
  end
  else
  begin
  set @gg = geography::STMPolyFromText(@gt, 4326)
  end
</code></pre>"	 This is working for me on SQL Server 2008. After loading the shape as a geometry, use to correct it, then reload into a geography.
How do I show data on a map?	0.99999464	36205526	Tooltip bug with dynamic google charts	javascriptsvgdynamicchartstimeline	36206232.0	"<p>So I found the solution , </p>

<pre><code>container = document.getElementById('' + youridentifier + '');
chart = new google.visualization.Timeline(container);
chart.draw(dataSet, options);
</code></pre>

<p>Every time you ""redraw"" the google chart you have to create a new visualization  object .</p>"	" So I found the solution , Every time you ""redraw"" the google chart you have to create a new visualization  object ."
How do I show data on a map?	0.9999945	2768762	Why should I use floats?	iphonequartz-graphics	2768945.0	"<p>If you draw <a href=""http://en.wikipedia.org/wiki/Anti-aliasing"" rel=""nofollow noreferrer"">anti-aliased</a> geometry, you need fractional coordinates.</p>

<p>If your geometry might be rescaled by the underlying API to display on a variety of screens you need fractional coordinates.</p>

<p>If you want to be able to tell the API to rotate, scale or shear your geometry you need fractional coordinates.</p>

<p>If you want to be able to break a line from A to C into a piece from A to B and a piece from B to C, and have them join up to look just like the original line, then you need fractional coordinates.</p>

<p>If you want to have a high precision internal representation of your geometry that's independent of the low precision details of the underlying display hardware, you need fractional coordinates.</p>

<p>If your API doesn't do these things now, but you need it to support these things in the next version without breaking compatibility, then you need fractional coordinates.</p>"	 If you draw anti-aliased geometry, you need fractional coordinates. If your geometry might be rescaled by the underlying API to display on a variety of screens you need fractional coordinates. If you want to be able to tell the API to rotate, scale or shear your geometry you need fractional coordinates. If you want to be able to break a line from A to C into a piece from A to B and a piece from B to C, and have them join up to look just like the original line, then you need fractional coordinates. If you want to have a high precision internal representation of your geometry that's independent of the low precision details of the underlying display hardware, you need fractional coordinates. If your API doesn't do these things now, but you need it to support these things in the next version without breaking compatibility, then you need fractional coordinates.
How can I illustrate changes in my data over time?	0.9999962	50540904	Python: Plotting multiple Scatter plots in one figure	python-3.xmatplotlib	50689216.0	"<p>If you want to observe the development over time, a line plot with markers is probably better to see the change in each category:</p>

<pre><code>import pandas as pd
from matplotlib import pyplot as plt
import matplotlib.cm as cm

sample = [  ['For business', 0.7616104043587437],
            ['For home and cottages', 0.6890139579274699],
            ['Consumer electronics', 0.039868871866136635],
            ['Personal things', 0.7487893699793786],
            ['Services', 0.747226678171249],
            ['Services', 0.23463661173977313],
            ['Animals', 0.6504301798258314],
            ['For home and cottages', 0.49567857024037665],
            ['For home and cottages', 0.9852681814098107],
            ['Transportation', 0.8134867587477912],
            ['Animals', 0.49988690699674654],
            ['Consumer electronics', 0.15086800344617235],
            ['For business', 0.9485494576819328],
            ['Hobbies and Leisure', 0.25766871111905243],
            ['For home and cottages', 0.31704508627659533],
            ['Animals', 0.6192114570078333],
            ['Personal things', 0.5755788287287359],
            ['Hobbies and Leisure', 0.10106922056341394],
            ['Animals', 0.16834618003738577],
            ['Consumer electronics', 0.7570803588496894] ]

train = pd.DataFrame(data=sample,  columns=['parent_category_name','deal_probability'])
parent_categories = train['parent_category_name'].unique()

fig, ax = plt.subplots(figsize=(10,8))
colors = iter(cm.rainbow(np.linspace(0, 1, len(parent_categories))))

for parent_category in parent_categories:
    ax.plot(range(len(train[train[""parent_category_name""] == parent_category])), 
            sorted(train[train[""parent_category_name""] == parent_category].deal_probability.values),
            color = next(colors),
            marker = ""o"",
            label = parent_category)

plt.ylabel('likelihood that an ad actually sold something', fontsize=12)
plt.title('Distribution of likelihood that an ad actually sold something')
plt.legend(loc = ""best"")
plt.show()
</code></pre>

<p>Output:</p>

<p><a href=""https://i.stack.imgur.com/oCRDx.jpg"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/oCRDx.jpg"" alt=""enter image description here""></a></p>

<p>But since this is an arbitrary scale and you sort the data, in my opinion you can even better see the spread in a categorical plot:</p>

<pre><code>train = pd.DataFrame(data=sample,  columns=['parent_category_name','deal_probability'])
parent_categories = train['parent_category_name'].unique()

fig, ax = plt.subplots(figsize=(18,9))
colors = iter(cm.rainbow(np.linspace(0, 1, len(parent_categories))))

for parent_category in parent_categories:
    ax.scatter(
        train[train[""parent_category_name""] == parent_category].parent_category_name.values, 
        train[train[""parent_category_name""] == parent_category].deal_probability.values,
        color = next(colors),
        label = parent_category
    )

plt.ylabel('likelihood that an ad actually sold something', fontsize=12)
plt.title('Distribution of likelihood that an ad actually sold something')
plt.legend(loc = ""best"")
plt.show()
</code></pre>

<p>Output:</p>

<p><a href=""https://i.stack.imgur.com/V30fT.jpg"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/V30fT.jpg"" alt=""enter image description here""></a></p>"	 If you want to observe the development over time, a line plot with markers is probably better to see the change in each category: Output: But since this is an arbitrary scale and you sort the data, in my opinion you can even better see the spread in a categorical plot: Output:
How can I illustrate changes in my data over time?	0.9999958	44449149	Putting labels on a bar chart in R with ggplot2	rggplot2labelsgeom-bar	44450937.0	"<p>I really could't understand your data, so I made up my own:</p>

<pre><code>Days = c(""Monday"", ""Tuesday"", ""Thursday"", ""Friday"")
Pizzas = c(40, 50, 10, 25)
Pizzadf = as.data.frame(cbind(Days, Pizzas))
Pizzadf$Pizzas = as.numeric(as.character(Pizzadf$Pizzas))

Pizzadf

ggplot(data = Pizzadf, aes(x = Days, y = Pizzas))+ 
  geom_bar(stat = ""identity"", fill = ""steelblue"") + 
  geom_text(aes(label=Pizzas), vjust=-0.3, size=3.5) + 
  theme_minimal()
</code></pre>

<p>Try to modify and adjust.</p>"	 I really could't understand your data, so I made up my own: Try to modify and adjust.
How can I illustrate changes in my data over time?	0.99999547	14952712	Plotting a hysteresis loop with jFreeChart	javajfreechart	14967205.0	"<blockquote>
  <p>How can I change the line color as well the symbols representing the data points. I want all of them to be uniform.</p>
</blockquote>

<p>It appears you've settled on <code>JFreeChart</code> for your view. Synthesizing a few other comments,</p>

<ul>
<li><p>You can make the colors and shapes of your several series homogeneous by providing a <code>DrawingSupplier</code>, as suggested <a href=""https://stackoverflow.com/a/14820173/230513"">here</a> and shown <a href=""http://www.jfree.org/forum/viewtopic.php?f=3&amp;t=115314#p174197"" rel=""nofollow noreferrer"">here</a>.</p></li>
<li><p>You can combine the series into a <a href=""http://docs.oracle.com/javase/7/docs/api/java/awt/geom/GeneralPath.html"" rel=""nofollow noreferrer""><code>GeneralPath</code></a> and estimate the area as outlined <a href=""https://stackoverflow.com/a/14175838/230513"">here</a>.</p></li>
</ul>"	 How can I change the line color as well the symbols representing the data points. I want all of them to be uniform. It appears you've settled on for your view. Synthesizing a few other comments, You can make the colors and shapes of your several series homogeneous by providing a , as suggested here and shown here . You can combine the series into a and estimate the area as outlined here .
How can I illustrate changes in my data over time?	0.99999523	28874088	Change the digits of numbers in Venndiagram	rgraphdigitvenn-diagram	28875937.0	"<p>To complete my comment, you can create your own function by modifying a bit the original function, like this:</p>

<pre><code>draw.quintuple.venn_mod &lt;- function (area1, area2, area3, area4, area5, n12, n13, n14, n15, 
                                     n23, n24, n25, n34, n35, n45, n123, n124, n125, n134, n135, 
                                     n145, n234, n235, n245, n345, n1234, n1235, n1245, n1345, 
                                     n2345, n12345, category = rep("""", 5),
                                     lwd = rep(2, 5), lty = rep(""solid"", 5),
                                     col = rep(""black"", 5), fill = NULL, alpha = rep(0.5, 5), 
                                     label.col = rep(""black"", 31), cex = rep(1, 31), 
                                     fontface = rep(""plain"", 31), fontfamily = rep(""serif"", 31), 
                                     cat.pos = c(0, 287.5, 215, 145, 70), cat.dist = rep(0.2, 5), cat.col = rep(""black"", 5), cat.cex = rep(1, 5), cat.fontface = rep(""plain"", 5), cat.fontfamily = rep(""serif"", 5), cat.just = rep(list(c(0.5, 0.5)), 5), rotation.degree = 0, rotation.centre = c(0.5, 0.5), ind = TRUE, 
                                     dig=2, ...) # add a parameter for number of digits by which to round your values
{
    if (length(category) == 1) {
        cat &lt;- rep(category, 5)
    }
    else if (length(category) != 5) {
        stop(""Unexpected parameter length for 'category'"")
    }
    if (length(lwd) == 1) {
        lwd &lt;- rep(lwd, 5)
    }
    else if (length(lwd) != 5) {
        stop(""Unexpected parameter length for 'lwd'"")
    }
    if (length(lty) == 1) {
        lty &lt;- rep(lty, 5)
    }
    else if (length(lty) != 5) {
        stop(""Unexpected parameter length for 'lty'"")
    }
    if (length(col) == 1) {
        col &lt;- rep(col, 5)
    }
    else if (length(col) != 5) {
        stop(""Unexpected parameter length for 'col'"")
    }
    if (length(label.col) == 1) {
        label.col &lt;- rep(label.col, 31)
    }
    else if (length(label.col) != 31) {
        stop(""Unexpected parameter length for 'label.col'"")
    }
    if (length(cex) == 1) {
        cex &lt;- rep(cex, 31)
    }
    else if (length(cex) != 31) {
        stop(""Unexpected parameter length for 'cex'"")
    }
    if (length(fontface) == 1) {
        fontface &lt;- rep(fontface, 31)
    }
    else if (length(fontface) != 31) {
        stop(""Unexpected parameter length for 'fontface'"")
    }
    if (length(fontfamily) == 1) {
        fontfamily &lt;- rep(fontfamily, 31)
    }
    else if (length(fontfamily) != 31) {
        stop(""Unexpected parameter length for 'fontfamily'"")
    }
    if (length(fill) == 1) {
        fill &lt;- rep(fill, 5)
    }
    else if (length(fill) != 5 &amp; length(fill) != 0) {
        stop(""Unexpected parameter length for 'fill'"")
    }
    if (length(alpha) == 1) {
        alpha &lt;- rep(alpha, 5)
    }
    else if (length(alpha) != 5 &amp; length(alpha) != 0) {
        stop(""Unexpected parameter length for 'alpha'"")
    }
    if (length(cat.pos) == 1) {
        cat.pos &lt;- rep(cat.pos, 5)
    }
    else if (length(cat.pos) != 5) {
        stop(""Unexpected parameter length for 'cat.pos'"")
    }
    if (length(cat.dist) == 1) {
        cat.dist &lt;- rep(cat.dist, 5)
    }
    else if (length(cat.dist) != 5) {
        stop(""Unexpected parameter length for 'cat.dist'"")
    }
    if (length(cat.col) == 1) {
        cat.col &lt;- rep(cat.col, 5)
    }
    else if (length(cat.col) != 5) {
        stop(""Unexpected parameter length for 'cat.col'"")
    }
    if (length(cat.cex) == 1) {
        cat.cex &lt;- rep(cat.cex, 5)
    }
    else if (length(cat.cex) != 5) {
        stop(""Unexpected parameter length for 'cat.cex'"")
    }
    if (length(cat.fontface) == 1) {
        cat.fontface &lt;- rep(cat.fontface, 5)
    }
    else if (length(cat.fontface) != 5) {
        stop(""Unexpected parameter length for 'cat.fontface'"")
    }
    if (length(cat.fontfamily) == 1) {
        cat.fontfamily &lt;- rep(cat.fontfamily, 5)
    }
    else if (length(cat.fontfamily) != 5) {
        stop(""Unexpected parameter length for 'cat.fontfamily'"")
    }
    if (!(class(cat.just) == ""list"" &amp; length(cat.just) == 5 &amp; 
        length(cat.just[[1]]) == 2 &amp; length(cat.just[[2]]) == 
        2 &amp; length(cat.just[[3]]) == 2 &amp; length(cat.just[[4]]) == 
        2 &amp; length(cat.just[[5]]) == 2)) {
        stop(""Unexpected parameter format for 'cat.just'"")
    }
    cat.pos &lt;- cat.pos + rotation.degree
# for each a.., modify the computation to add a rounding step
    a31 &lt;- round(n12345, dig)
    a30 &lt;- round(n1234 - a31, dig)
    a29 &lt;- round(n1235 - a31, dig)
    a28 &lt;- round(n1245 - a31, dig)
    a27 &lt;- round(n1345 - a31, dig)
    a26 &lt;- round(n2345 - a31, dig)
    a25 &lt;- round(n245 - a26 - a28 - a31, dig)
    a24 &lt;- round(n234 - a26 - a30 - a31, dig)
    a23 &lt;- round(n134 - a27 - a30 - a31, dig)
    a22 &lt;- round(n123 - a29 - a30 - a31, dig)
    a21 &lt;- round(n235 - a26 - a29 - a31, dig)
    a20 &lt;- round(n125 - a28 - a29 - a31, dig)
    a19 &lt;- round(n124 - a28 - a30 - a31, dig)
    a18 &lt;- round(n145 - a27 - a28 - a31, dig)
    a17 &lt;- round(n135 - a27 - a29 - a31, dig)
    a16 &lt;- round(n345 - a26 - a27 - a31, dig)
    a15 &lt;- round(n45 - a18 - a25 - a16 - a28 - a27 - a26 - a31, dig)
    a14 &lt;- round(n24 - a19 - a24 - a25 - a30 - a28 - a26 - a31, dig)
    a13 &lt;- round(n34 - a16 - a23 - a24 - a26 - a27 - a30 - a31, dig)
    a12 &lt;- round(n13 - a17 - a22 - a23 - a27 - a29 - a30 - a31, dig)
    a11 &lt;- round(n23 - a21 - a22 - a24 - a26 - a29 - a30 - a31, dig)
    a10 &lt;- round(n25 - a20 - a21 - a25 - a26 - a28 - a29 - a31, dig)
    a9 &lt;- round(n12 - a19 - a20 - a22 - a28 - a29 - a30 - a31, dig)
    a8 &lt;- round(n14 - a18 - a19 - a23 - a27 - a28 - a30 - a31, dig)
    a7 &lt;- round(n15 - a17 - a18 - a20 - a27 - a28 - a29 - a31, dig)
    a6 &lt;- round(n35 - a16 - a17 - a21 - a26 - a27 - a29 - a31, dig)
    a5 &lt;- round(area5 - a6 - a7 - a15 - a16 - a17 - a18 - a25 - a26 - 
        a27 - a28 - a31 - a20 - a29 - a21 - a10, dig)
    a4 &lt;- round(area4 - a13 - a14 - a15 - a16 - a23 - a24 - a25 - a26 - 
        a27 - a28 - a31 - a18 - a19 - a8 - a30, dig)
    a3 &lt;- round(area3 - a21 - a11 - a12 - a13 - a29 - a22 - a23 - a24 - 
        a30 - a31 - a26 - a27 - a16 - a6 - a17, dig)
    a2 &lt;- round(area2 - a9 - a10 - a19 - a20 - a21 - a11 - a28 - a29 - 
        a31 - a22 - a30 - a26 - a25 - a24 - a14, dig)
    a1 &lt;- round(area1 - a7 - a8 - a18 - a17 - a19 - a9 - a27 - a28 - 
        a31 - a20 - a30 - a29 - a22 - a23 - a12, dig)
    areas &lt;- c(a1, a2, a3, a4, a5, a6, a7, a8, a9, a10, a11, 
        a12, a13, a14, a15, a16, a17, a18, a19, a20, a21, a22, 
        a23, a24, a25, a26, a27, a28, a29, a30, a31)
    areas.error &lt;- c(""a1 &lt;- area1 - a7 - a8 - a18 - a17 - a19 - a9 - a27 - a28 - a31 - a20 - a30 - a29 - a22 - a23 - a12"", 
        ""a2 &lt;- area2 - a9 - a10 - a19 - a20 - a21 - a11 - a28 - a29 - a31 - a22 - a30 - a26 - a25 - a24 - a14"", 
        ""a3 &lt;- area3 - a21 - a11 - a12 - a13 - a29 - a22 - a23 - a24 - a30 - a31 - a26 - a27 - a16 - a6 - a17"", 
        ""a4 &lt;- area4 - a13 - a14 - a15 - a16 - a23 - a24 - a25 - a26 - a27 - a28 - a31 - a18 - a19 - a8 - a30"", 
        ""a5 &lt;- area5 - a6 - a7 - a15 - a16 - a17 - a18 - a25 - a26 - a27 - a28 - a31 - a20 - a29 - a21 - a10"", 
        ""a6 &lt;- n35 - a16 - a17 - a21 - a26 - a27 - a29 - a31"", 
        ""a7 &lt;- n15 - a17 - a18 - a20 - a27 - a28 - a29 - a31"", 
        ""a8 &lt;- n14 - a18 - a19 - a23 - a27 - a28 - a30 - a31"", 
        ""a9 &lt;- n12 - a19 - a20 - a22 - a28 - a29 - a30 - a31"", 
        ""a10 &lt;- n25 - a20 - a21 - a25 - a26 - a28 - a29 - a31"", 
        ""a11 &lt;- n23 - a21 - a22 - a24 - a26 - a29 - a30 - a31"", 
        ""a12 &lt;- n13 - a17 - a22 - a23 - a27 - a29 - a30 - a31"", 
        ""a13 &lt;- n34 - a16 - a23 - a24 - a26 - a27 - a30 - a31"", 
        ""a14 &lt;- n24 - a19 - a24 - a25 - a30 - a28 - a26 - a31"", 
        ""a15 &lt;- n45 - a18 - a25 - a16 - a28 - a27 - a26 - a31"", 
        ""a16 &lt;- n345 - a26 - a27 - a31"", ""a17 &lt;- n135 - a27 - a29 - a31"", 
        ""a18 &lt;- n145 - a27 - a28 - a31"", ""a19 &lt;- n124 - a28 - a30 - a31"", 
        ""a20 &lt;- n125 - a28 - a29 - a31"", ""a21 &lt;- n235 - a26 - a29 - a31"", 
        ""a22 &lt;- n123 - a29 - a30 - a31"", ""a23 &lt;- n134 - a27 - a30 - a31"", 
        ""a24 &lt;- n234 - a26 - a30 - a31"", ""a25 &lt;- n245 - a26 - a28 - a31"", 
        ""a26 &lt;- n2345 - a31"", ""a27 &lt;- n1345 - a31"", ""a28 &lt;- n1245 - a31"", 
        ""a29 &lt;- n1235 - a31"", ""a30 &lt;- n1234 - a31"", ""a31 &lt;- n12345"")
    for (i in 1:length(areas)) {
        if (areas[i] &lt; 0) {
            stop(paste(""Impossible:"", areas.error[i], ""produces negative area""))
        }
    }
    grob.list &lt;- gList()
    dist &lt;- 0.13
    a &lt;- 0.24
    b &lt;- 0.46
    init.angle &lt;- -20
    ellipse.positions &lt;- matrix(nrow = 5, ncol = 3)
    colnames(ellipse.positions) &lt;- c(""x"", ""y"", ""rotation"")
    ellipse.positions[1, ] &lt;- c(0.5 + dist * sin(init.angle * 
        pi/180), 0.5 + dist * cos(init.angle * pi/180), 0)
    ellipse.positions[2, ] &lt;- c(0.5 - dist * cos((288 + init.angle - 
        270) * pi/180), 0.5 + dist * sin((288 + init.angle - 
        270) * pi/180), -110)
    ellipse.positions[3, ] &lt;- c(0.5 - dist * sin((216 + init.angle - 
        180) * pi/180), 0.5 - dist * cos((216 + init.angle - 
        180) * pi/180), 145)
    ellipse.positions[4, ] &lt;- c(0.5 + dist * sin((180 - 144 - 
        init.angle) * pi/180), 0.5 - dist * cos((180 - 144 - 
        init.angle) * pi/180), 35)
    ellipse.positions[5, ] &lt;- c(0.5 + dist * cos((init.angle + 
        72 - 90) * pi/180), 0.5 - dist * sin((init.angle + 72 - 
        90) * pi/180), -72.5)
    for (i in 1:5) {
        grob.list &lt;- gList(grob.list, VennDiagram::ellipse(x = ellipse.positions[i, 
            ""x""], y = ellipse.positions[i, ""y""], a = a, b = b, 
            rotation = ellipse.positions[i, ""rotation""], gp = gpar(lty = 0, 
                fill = fill[i], alpha = alpha[i])))
    }
    for (i in 1:5) {
        grob.list &lt;- gList(grob.list, VennDiagram::ellipse(x = ellipse.positions[i, 
            ""x""], y = ellipse.positions[i, ""y""], a = a, b = b, 
            rotation = ellipse.positions[i, ""rotation""], gp = gpar(lwd = lwd[i], 
                lty = lty[i], col = col[i], fill = ""transparent"")))
    }
    label.matrix &lt;- matrix(nrow = 31, ncol = 3)
    colnames(label.matrix) &lt;- c(""label"", ""x"", ""y"")
    label.matrix[1, ] &lt;- c(a1, 0.4555, 0.9322)
    label.matrix[2, ] &lt;- c(a2, 0.08, 0.6)
    label.matrix[3, ] &lt;- c(a3, 0.3, 0.1)
    label.matrix[4, ] &lt;- c(a4, 0.79, 0.17)
    label.matrix[5, ] &lt;- c(a5, 0.9, 0.68)
    label.matrix[6, ] &lt;- c(a6, 0.74, 0.695)
    label.matrix[7, ] &lt;- c(a7, 0.63, 0.805)
    label.matrix[8, ] &lt;- c(a8, 0.4, 0.795)
    label.matrix[9, ] &lt;- c(a9, 0.255, 0.715)
    label.matrix[10, ] &lt;- c(a10, 0.193, 0.48)
    label.matrix[11, ] &lt;- c(a11, 0.225, 0.333)
    label.matrix[12, ] &lt;- c(a12, 0.42, 0.205)
    label.matrix[13, ] &lt;- c(a13, 0.572, 0.18)
    label.matrix[14, ] &lt;- c(a14, 0.753, 0.32)
    label.matrix[15, ] &lt;- c(a15, 0.823, 0.47)
    label.matrix[16, ] &lt;- c(a16, 0.747, 0.582)
    label.matrix[17, ] &lt;- c(a17, 0.662, 0.75)
    label.matrix[18, ] &lt;- c(a18, 0.488, 0.761)
    label.matrix[19, ] &lt;- c(a19, 0.323, 0.737)
    label.matrix[20, ] &lt;- c(a20, 0.253, 0.573)
    label.matrix[21, ] &lt;- c(a21, 0.225, 0.395)
    label.matrix[22, ] &lt;- c(a22, 0.355, 0.29)
    label.matrix[23, ] &lt;- c(a23, 0.515, 0.205)
    label.matrix[24, ] &lt;- c(a24, 0.655, 0.29)
    label.matrix[25, ] &lt;- c(a25, 0.783, 0.42)
    label.matrix[26, ] &lt;- c(a26, 0.72, 0.445)
    label.matrix[27, ] &lt;- c(a27, 0.605, 0.701)
    label.matrix[28, ] &lt;- c(a28, 0.342, 0.668)
    label.matrix[29, ] &lt;- c(a29, 0.294, 0.41)
    label.matrix[30, ] &lt;- c(a30, 0.522, 0.273)
    label.matrix[31, ] &lt;- c(a31, 0.5, 0.5)
    for (i in 1:nrow(label.matrix)) {
        tmp &lt;- textGrob(label = label.matrix[i, ""label""], x = label.matrix[i, 
            ""x""], y = label.matrix[i, ""y""], gp = gpar(col = label.col[i], 
            cex = cex[i], fontface = fontface[i], fontfamily = fontfamily[i]))
        grob.list &lt;- gList(grob.list, tmp)
    }
    cat.pos.x &lt;- c(0.4555, 0.08, 0.3, 0.79, 0.9)
    cat.pos.y &lt;- c(0.9322, 0.6, 0.1, 0.17, 0.68)
    for (i in 1:5) {
        this.cat.pos &lt;- find.cat.pos(x = cat.pos.x[i], y = cat.pos.y[i], 
            pos = cat.pos[i], dist = cat.dist[i])
        grob.list &lt;- gList(grob.list, textGrob(label = category[i], 
            x = this.cat.pos$x, y = this.cat.pos$y, just = cat.just[[i]], 
            gp = gpar(col = cat.col[i], cex = cat.cex[i], fontface = cat.fontface[i], 
                fontfamily = cat.fontfamily[i])))
    }
    grob.list &lt;- VennDiagram::adjust.venn(VennDiagram::rotate.venn.degrees(grob.list, 
        rotation.degree, rotation.centre[1], rotation.centre[2]), 
        ...)
    if (ind) {
        grid.draw(grob.list)
    }
    return(grob.list)
}
</code></pre>

<p>with your data, you'll get:</p>

<pre><code>draw.quintuple.venn_mod(area1 = data[1,1],area2 = data[1,2],area3 = data[1,3],area4 = data[1,4],area5 = data[1,5],n12 = data[1,6],n13 = data[1,7],n14 = data[1,8],n15 = data[1,9],n23 = data[1,10],n24 = data[1,11],n25 = data[1,12],n34 = data[1,13],n35 = data[1,14],n45 = data[1,15],n123 = data[1,16],n124 = data[1,17],n125 = data[1,18],n134 = data[1,20],n135 = data[1,19],n145 = data[1,21],n234 = data[1,22],n235 = data[1,23],n245 = data[1,24],n345 = data[1,25],n1234 = data[1,26],n1235 = data[1,27],n1245 = data[1,28],n1345 = data[1,29],n2345 = data[1,30],
    n12345 = data[1,31],
    fill = c(""#1f77b4"", ""#FF7F0E"", ""#2ca04e"", ""#d62728"", ""pink""),
    lwd = rep(1, 5),
    lty = ""dashed"",
    cex = 1,
    cat.cex = 2,
    cat.col =  c(""#1f77b4"", ""#FF7F0E"", ""#2ca04e"", ""#d62728"", ""pink""))
</code></pre>

<p><img src=""https://i.stack.imgur.com/ABfRY.png"" alt=""enter image description here""></p>"	 To complete my comment, you can create your own function by modifying a bit the original function, like this: with your data, you'll get:
How can I illustrate changes in my data over time?	0.9999951	54157246	How to solve this plotting problem in serial communication?	pythonpython-3.xpython-2.7matplotlibserial-port	54159235.0	"<p>This answer is not as elegant as using the <a href=""https://matplotlib.org/api/animation_api.html"" rel=""nofollow noreferrer"">animation-api</a> - but it works.</p>

<p>You have to adapt quite a lot - for sake of giving a <a href=""https://stackoverflow.com/help/mcve"">Minimal, Complete, and Verifiable example</a> I had to implement my own ""serial"" dataprovider:</p>

<pre><code>from itertools import cycle 
data = [0,0,0,0,0,0,0,0,0,2,25,64,92,119,132,139,124,123,103,71,38,3]
cyc = cycle(data)

def serial():
    from random import randint
    def create_data():
        for k in range(randint(2,3)): 
            yield next(cyc) 
    return list(create_data())
</code></pre>

<p>One way to solve it:</p>

<p>You need to get the the axes of your plot as well to adjust the ""area"" that is shown, then you need to supply correct x-values as ""time"" and the y-values as reading from serial (you can increment a ""how many data received"" variable on each draw for the <em>time</em>):</p>

<pre><code>from tkinter import *
from matplotlib import pyplot as plt 


fig, ax = plt.subplots() 
ax.set_ylim(-200, 200)
ax.set_xlim(0,110)
fig.show()
fig.canvas.draw() 

time = 0
last = 0
while True:
    # ""animate"" x-axis
    if time &gt; 100:
        ax.set_xlim(time-100,time+10)
    data = serial()
    print(data)
    # add the last datapoint again so you get a continuous curve
    plt.plot([time-1]+[time+x for x in range(len(data))], [last]+data)
    # increment time
    time += len(data)
    # remember last data-value
    last = data[-1]
    fig.canvas.draw()
</code></pre>

<p>To get (text output omitted - it just repeats the data from above differently chunked):</p>

<p><a href=""https://i.stack.imgur.com/BquKk.gif"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/BquKk.gif"" alt=""animation""></a> </p>

<p>You can see by the colored line-segments which data was added together.</p>"	" This answer is not as elegant as using the animation-api - but it works. You have to adapt quite a lot - for sake of giving a Minimal, Complete, and Verifiable example I had to implement my own ""serial"" dataprovider: One way to solve it: You need to get the the axes of your plot as well to adjust the ""area"" that is shown, then you need to supply correct x-values as ""time"" and the y-values as reading from serial (you can increment a ""how many data received"" variable on each draw for the time ): To get (text output omitted - it just repeats the data from above differently chunked): You can see by the colored line-segments which data was added together."
Is there a way to show a “heatmap” of my data?	0.9999969	34939093	Create a checkerboard plot with unbalanced rows and colums	pythonmatplotlib	34939213.0	"<p>You can use seaborn library or matplotlib to generate heatmap. Firstly, convert it to pandas dataframe to handle missing values.</p>

<pre><code>import pandas as pd
df = pd.DataFrame([[1,4,5],[34,70,1,5], [43,89,4,11],[22,76,4]])
%matplotlib inline
from matplotlib import pyplot as plt
import seaborn as sns
sns.heatmap(df)
plt.show()
</code></pre>

<p>Result looks something like this.
<a href=""https://i.stack.imgur.com/fqpel.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/fqpel.png"" alt=""enter image description here""></a></p>"	 You can use seaborn library or matplotlib to generate heatmap. Firstly, convert it to pandas dataframe to handle missing values. Result looks something like this.
Is there a way to show a “heatmap” of my data?	0.99999595	51103125	Build a heatmap in Pandas	pythonpandasdata-visualizationheatmap	51103197.0	"<p>You can use the seaborn package to make pretty nice heatmaps.Assuming your data as you have above is stored in a pandas dataframe called df,</p>

<pre><code>import matplotlib.pyplot as plt
import seaborn as sns
df = df.pivot(""week"", ""day"", ""number of launchings"")
ax = sns.heatmap(df)
plt.show()
</code></pre>

<p>should give you what you're looking for. You might want to create a new column for weeks that are numbered 1,2,3... so that it would be easier to read</p>"	 You can use the seaborn package to make pretty nice heatmaps.Assuming your data as you have above is stored in a pandas dataframe called df, should give you what you're looking for. You might want to create a new column for weeks that are numbered 1,2,3... so that it would be easier to read
Is there a way to show a “heatmap” of my data?	0.9999943	2982929	plotting results of hierarchical clustering ontop of a matrix of data in python	pythoncluster-analysismachine-learningmatplotlibscipy	3011894.0	"<p>The question does not define <em>matrix</em> very well: ""matrix of values"", ""matrix of data"". I assume that you mean a <em>distance matrix</em>. In other words, element D_ij in the symmetric nonnegative N-by-N <em>distance matrix</em> D denotes the distance between two feature vectors, x_i and x_j. Is that correct?</p>

<p>If so, then try this (edited June 13, 2010, to reflect two different dendrograms):</p>

<pre><code>import scipy
import pylab
import scipy.cluster.hierarchy as sch
from scipy.spatial.distance import squareform


# Generate random features and distance matrix.
x = scipy.rand(40)
D = scipy.zeros([40,40])
for i in range(40):
    for j in range(40):
        D[i,j] = abs(x[i] - x[j])

condensedD = squareform(D)

# Compute and plot first dendrogram.
fig = pylab.figure(figsize=(8,8))
ax1 = fig.add_axes([0.09,0.1,0.2,0.6])
Y = sch.linkage(condensedD, method='centroid')
Z1 = sch.dendrogram(Y, orientation='left')
ax1.set_xticks([])
ax1.set_yticks([])

# Compute and plot second dendrogram.
ax2 = fig.add_axes([0.3,0.71,0.6,0.2])
Y = sch.linkage(condensedD, method='single')
Z2 = sch.dendrogram(Y)
ax2.set_xticks([])
ax2.set_yticks([])

# Plot distance matrix.
axmatrix = fig.add_axes([0.3,0.1,0.6,0.6])
idx1 = Z1['leaves']
idx2 = Z2['leaves']
D = D[idx1,:]
D = D[:,idx2]
im = axmatrix.matshow(D, aspect='auto', origin='lower', cmap=pylab.cm.YlGnBu)
axmatrix.set_xticks([])
axmatrix.set_yticks([])

# Plot colorbar.
axcolor = fig.add_axes([0.91,0.1,0.02,0.6])
pylab.colorbar(im, cax=axcolor)
fig.show()
fig.savefig('dendrogram.png')
</code></pre>

<p><a href=""https://i.stack.imgur.com/Z2tvi.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/Z2tvi.png"" alt=""Plot""></a></p>

<p>Good luck! Let me know if you need more help.</p>

<hr>

<p>Edit: For different colors, adjust the <code>cmap</code> attribute in <code>imshow</code>. See the <a href=""http://www.scipy.org/Cookbook/Matplotlib/Show_colormaps"" rel=""noreferrer"">scipy/matplotlib docs</a> for examples. That page also describes how to create your own colormap. For convenience, I recommend using a preexisting colormap. In my example, I used <code>YlGnBu</code>.</p>

<hr>

<p>Edit: <code>add_axes</code> (<a href=""http://matplotlib.sourceforge.net/api/figure_api.html?highlight=add_axes#matplotlib.figure.Figure.add_axes"" rel=""noreferrer"">see documentation here</a>) accepts a list or tuple: <code>(left, bottom, width, height)</code>. For example, <code>(0.5,0,0.5,1)</code> adds an <code>Axes</code> on the right half of the figure. <code>(0,0.5,1,0.5)</code> adds an <code>Axes</code> on the top half of the figure.</p>

<p>Most people probably use <code>add_subplot</code> for its convenience. I like <code>add_axes</code> for its control.</p>

<p>To remove the border, use <code>add_axes([left,bottom,width,height], frame_on=False)</code>. <a href=""http://matplotlib.sourceforge.net/examples/pylab_examples/manual_axis.html"" rel=""noreferrer"">See example here.</a></p>"	" The question does not define matrix very well: ""matrix of values"", ""matrix of data"". I assume that you mean a distance matrix . In other words, element D_ij in the symmetric nonnegative N-by-N distance matrix D denotes the distance between two feature vectors, x_i and x_j. Is that correct? If so, then try this (edited June 13, 2010, to reflect two different dendrograms): Good luck! Let me know if you need more help. Edit: For different colors, adjust the attribute in . See the scipy/matplotlib docs for examples. That page also describes how to create your own colormap. For convenience, I recommend using a preexisting colormap. In my example, I used . Edit: ( see documentation here ) accepts a list or tuple: . For example, adds an on the right half of the figure. adds an on the top half of the figure. Most people probably use for its convenience. I like for its control. To remove the border, use . See example here."
Is there a way to show a “heatmap” of my data?	0.99999416	37529116	How to plot a heat map with irregular data in ordinates in ggplot?	rggplot2heatmap	37530156.0	"<p>You can use <code>akima</code> to interpolate the function into a form suitable for heat map plots.</p>

<pre><code>library(akima)
library(ggplot2) 
my.df.interp &lt;- interp(x = my.df$theta, y = my.df$x, z = my.df$y, nx = 30, ny = 30) 
my.df.interp.xyz &lt;- as.data.frame(interp2xyz(my.df.interp))
names(my.df.interp.xyz) &lt;- c(""theta"", ""x"", ""y"")

ggplot(my.df.interp.xyz, aes(x = theta, y = x, fill = y)) + geom_tile() + 
scale_fill_gradient(low = ""blue"", high = ""red"")
</code></pre>

<p><a href=""https://i.stack.imgur.com/3cBH4.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/3cBH4.png"" alt=""enter image description here""></a></p>

<p>If you wish to use a different resolution you can change the <code>nx</code> and <code>ny</code> arguments to <code>interp</code>.</p>

<p>Another way to do it with just <code>ggplot2</code> is to use <code>stat_summary_2d</code>.</p>

<pre><code>library(ggplot2)
ggplot(my.df, aes(x = theta, y = x, z = y)) + stat_summary_2d(binwidth = 0.3) + 
scale_fill_gradient(low = ""blue"", high = ""red"")
</code></pre>

<p><a href=""https://i.stack.imgur.com/FeYAd.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/FeYAd.png"" alt=""enter image description here""></a></p>"	 You can use to interpolate the function into a form suitable for heat map plots. If you wish to use a different resolution you can change the and arguments to . Another way to do it with just is to use .
Is there a way to show a “heatmap” of my data?	0.99999416	8230638	Parallel Coordinates plot in Matplotlib	pythonmatplotlibparallel-coordinates	8241606.0	"<p>I'm sure there is a better way of doing it, but here's a quick-and-dirty one (a really dirty one): </p>

<pre><code>#!/usr/bin/python
import numpy as np
import matplotlib.pyplot as plt
import matplotlib.ticker as ticker

#vectors to plot: 4D for this example
y1=[1,2.3,8.0,2.5]
y2=[1.5,1.7,2.2,2.9]

x=[1,2,3,8] # spines

fig,(ax,ax2,ax3) = plt.subplots(1, 3, sharey=False)

# plot the same on all the subplots
ax.plot(x,y1,'r-', x,y2,'b-')
ax2.plot(x,y1,'r-', x,y2,'b-')
ax3.plot(x,y1,'r-', x,y2,'b-')

# now zoom in each of the subplots 
ax.set_xlim([ x[0],x[1]])
ax2.set_xlim([ x[1],x[2]])
ax3.set_xlim([ x[2],x[3]])

# set the x axis ticks 
for axx,xx in zip([ax,ax2,ax3],x[:-1]):
  axx.xaxis.set_major_locator(ticker.FixedLocator([xx]))
ax3.xaxis.set_major_locator(ticker.FixedLocator([x[-2],x[-1]]))  # the last one

# EDIT: add the labels to the rightmost spine
for tick in ax3.yaxis.get_major_ticks():
  tick.label2On=True

# stack the subplots together
plt.subplots_adjust(wspace=0)

plt.show()
</code></pre>

<p>This is essentially based on a (much nicer) one by Joe Kingon, <a href=""https://stackoverflow.com/questions/5656798/python-matplotlib-is-there-a-way-to-make-a-discontinuous-axis"">Python/Matplotlib - Is there a way to make a discontinuous axis?</a>. You might also want to have a look at the other answer to the same question. </p>

<p>In this example I don't even attempt at scaling the vertical scales, since it depends on what exactly you are trying to achieve.    </p>

<p>EDIT: Here is the result<img src=""https://i.stack.imgur.com/4BZGP.png"" alt=""enter image description here""></p>"	 I'm sure there is a better way of doing it, but here's a quick-and-dirty one (a really dirty one): This is essentially based on a (much nicer) one by Joe Kingon, Python/Matplotlib - Is there a way to make a discontinuous axis? . You might also want to have a look at the other answer to the same question. In this example I don't even attempt at scaling the vertical scales, since it depends on what exactly you are trying to achieve. EDIT: Here is the result
How can I present a picture of a network?	0.99999475	1138460	How does Facebook Sharer select Images and other metadata when sharing my URL?	facebookopengraphfacebook-sharer	7623986.0	"<h3>How do I tell Facebook which image to use when my page gets shared?</h3>

<p>Facebook has a set of <a href=""https://developers.facebook.com/docs/opengraphprotocol/"" rel=""noreferrer"">open-graph meta tags</a> that it looks at to decide which image to show.  </p>

<p>The keys one for the Facebook image are:</p>



<pre class=""lang-html prettyprint-override""><code>&lt;meta property=""og:image"" content=""http://ia.media-imdb.com/rock.jpg""/&gt;
&lt;meta property=""og:image:secure_url"" content=""https://secure.example.com/ogp.jpg"" /&gt;
</code></pre>

<p>and it should be present inside the <code>&lt;head&gt;&lt;/head&gt;</code> tag at the top of your page.  </p>

<p>If these tags are not present, it will look for their older method of specifying an image: <code>&lt;link rel=""image_src"" href=""/myimage.jpg""/&gt;</code>.  If neither are present, Facebook will look at the content of your page and choose images from your page that meet its share image criteria: Image must be at least 200px by 200px, have a maximum aspect ratio of 3:1, and in PNG, JPEG or GIF format. </p>

<p><strong>Can I specify multiple images to allow the user to select an image?</strong></p>

<p>Yes, you just need to add multiple image meta tags in the order you want them to appear in. The user will then be presented with an image selector dialog:<br>
<img src=""https://i.stack.imgur.com/WyErv.png"" alt=""Facebook Image Selector""></p>

<p><strong>I specified the appropriate image meta tags. Why isn't Facebook accepting the changes?</strong></p>

<p>Once a url has been shared, Facebook's crawler, which has a user agent of <code>facebookexternalhit/1.1 (+https://www.facebook.com/externalhit_uatext.php)</code>, will access your page and cache the meta information.  To force Facebook servers to clear the cache, use the <a href=""https://developers.facebook.com/tools/debug"" rel=""noreferrer"">Facebook Url Debugger / Linter Tool</a> that they <a href=""https://developers.facebook.com/blog/post/390/"" rel=""noreferrer"">launched in June 2010</a> to refresh the cache and troubleshoot any meta tag issues on your page.  </p>

<p>Also, the images on the page must be publicly accessible to the Facebook crawler.  You should specify absolute url's like <a href=""http://example.com/yourimage.jpg"" rel=""noreferrer"">http://example.com/yourimage.jpg</a> instead of just /yourimage.jpg.  </p>

<p><strong>Can I update these meta tags with client side code like Javascript or jQuery?</strong>
No.  Much like search engine crawlers, the Facebook scraper does not execute scripts so whatever meta tags are present when the page is downloaded are the meta tags that are used for image selection.</p>

<p><strong>Adding these tags causes my page to no longer validate. How can I fix this?</strong></p>

<p>You can add the necessary Facebook namespaces to your  tag and your page should then pass validation:</p>

<pre class=""lang-html prettyprint-override""><code>&lt;html xmlns=""http://www.w3.org/1999/xhtml""
      xmlns:og=""http://ogp.me/ns#""
      xmlns:fb=""https://www.facebook.com/2008/fbml""&gt;  
</code></pre>"	 How do I tell Facebook which image to use when my page gets shared? Facebook has a set of open-graph meta tags that it looks at to decide which image to show. The keys one for the Facebook image are: and it should be present inside the tag at the top of your page. If these tags are not present, it will look for their older method of specifying an image: .  If neither are present, Facebook will look at the content of your page and choose images from your page that meet its share image criteria: Image must be at least 200px by 200px, have a maximum aspect ratio of 3:1, and in PNG, JPEG or GIF format. Can I specify multiple images to allow the user to select an image? Yes, you just need to add multiple image meta tags in the order you want them to appear in. The user will then be presented with an image selector dialog: I specified the appropriate image meta tags. Why isn't Facebook accepting the changes? Once a url has been shared, Facebook's crawler, which has a user agent of , will access your page and cache the meta information.  To force Facebook servers to clear the cache, use the Facebook Url Debugger / Linter Tool that they launched in June 2010 to refresh the cache and troubleshoot any meta tag issues on your page. Also, the images on the page must be publicly accessible to the Facebook crawler.  You should specify absolute url's like http://example.com/yourimage.jpg instead of just /yourimage.jpg. Can I update these meta tags with client side code like Javascript or jQuery? No.  Much like search engine crawlers, the Facebook scraper does not execute scripts so whatever meta tags are present when the page is downloaded are the meta tags that are used for image selection. Adding these tags causes my page to no longer validate. How can I fix this? You can add the necessary Facebook namespaces to your  tag and your page should then pass validation:
How can I present a picture of a network?	0.9999945	56212612	"Calling a hook (useMutation) inside an event handler error: ""Hooks can only be called inside of the body of a function component"""	reactjsgraphqlreact-hooksmutation	56212940.0	"<blockquote>
  <p>So, how do I call a mutation inside an event handler?</p>
</blockquote>

<ol>
<li><strong>Hooks are ONLY for functional components</strong>, not for class based (use apollo <code>client.mutation()</code> or <code>&lt;Mutation/&gt;</code> component)</li>
<li><code>useMutation</code> returns function intended to be used on demand - this function must be used in event handler, not entire <code>useMutation</code></li>
</ol>

<p>react-apollo-hooks project description contains an example of <a href=""https://github.com/trojanowski/react-apollo-hooks#usemutation"" rel=""nofollow noreferrer"">usemutation</a> used with event handler.</p>"	 So, how do I call a mutation inside an event handler? Hooks are ONLY for functional components , not for class based (use apollo or component) returns function intended to be used on demand - this function must be used in event handler, not entire react-apollo-hooks project description contains an example of usemutation used with event handler.
How can I present a picture of a network?	0.9999939	1193631	how to make jmeter output graphs	graphjmeter	1193674.0	"<p>A simple way would be to right click on a Graph Result to ""Save Node as Image"".</p>"	" A simple way would be to right click on a Graph Result to ""Save Node as Image""."
How can I present a picture of a network?	0.9999939	51105775	Plotting huge trees with vis.js	javascriptchartsvis.jsvis.js-network	51144805.0	"<p>Wait, your fiddle doesn't have all the options you mention in your post. For instance, the network is not shown at all before several minutes passes, but if you add <code>physics: { stabilization: false }</code> it is shown at once (although it is not static at that point and slowly relaxes). Moreover, adding <code>barnesHut: { ... }</code> to <code>physics</code> and adjusting <code>springConstant</code> changes the speed of relaxation.</p>

<p>But here's a tricky part: compare the unrelaxed tree (with <code>stabilization: false</code>) that you have with vis.js 4.21.0 and the one that you <a href=""https://jsfiddle.net/pfqbjvLt/30/"" rel=""nofollow noreferrer"">get</a> with 4.19.1! It looks much nicer:</p>

<p><a href=""https://i.stack.imgur.com/sybUr.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/sybUr.png"" alt=""enter image description here""></a></p>

<p>than this mess:</p>

<p><a href=""https://i.stack.imgur.com/8QzyW.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/8QzyW.png"" alt=""enter image description here""></a></p>

<p>This was <a href=""https://stackoverflow.com/q/46927541/3995261"">reported earlier</a> and probably deserves more digging but what I can say for sure is 4.19.1 makes the initial tree much nicer to see stuff even before getting relaxed. With this version you can even go <code>physcis: false</code> and get this:</p>

<p><a href=""https://i.stack.imgur.com/qbJ0I.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/qbJ0I.png"" alt=""enter image description here""></a></p>

<p>I'd consider using this approach although it has drawbacks:</p>

<p><a href=""https://i.stack.imgur.com/zc4T4.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/zc4T4.png"" alt=""enter image description here""></a></p>

<p>the version with physics suffers from that to some extent too, so...</p>"	 Wait, your fiddle doesn't have all the options you mention in your post. For instance, the network is not shown at all before several minutes passes, but if you add it is shown at once (although it is not static at that point and slowly relaxes). Moreover, adding to and adjusting changes the speed of relaxation. But here's a tricky part: compare the unrelaxed tree (with ) that you have with vis.js 4.21.0 and the one that you get with 4.19.1! It looks much nicer: than this mess: This was reported earlier and probably deserves more digging but what I can say for sure is 4.19.1 makes the initial tree much nicer to see stuff even before getting relaxed. With this version you can even go and get this: I'd consider using this approach although it has drawbacks: the version with physics suffers from that to some extent too, so...
How can I present a picture of a network?	0.9999938	14952712	Plotting a hysteresis loop with jFreeChart	javajfreechart	14967205.0	"<blockquote>
  <p>How can I change the line color as well the symbols representing the data points. I want all of them to be uniform.</p>
</blockquote>

<p>It appears you've settled on <code>JFreeChart</code> for your view. Synthesizing a few other comments,</p>

<ul>
<li><p>You can make the colors and shapes of your several series homogeneous by providing a <code>DrawingSupplier</code>, as suggested <a href=""https://stackoverflow.com/a/14820173/230513"">here</a> and shown <a href=""http://www.jfree.org/forum/viewtopic.php?f=3&amp;t=115314#p174197"" rel=""nofollow noreferrer"">here</a>.</p></li>
<li><p>You can combine the series into a <a href=""http://docs.oracle.com/javase/7/docs/api/java/awt/geom/GeneralPath.html"" rel=""nofollow noreferrer""><code>GeneralPath</code></a> and estimate the area as outlined <a href=""https://stackoverflow.com/a/14175838/230513"">here</a>.</p></li>
</ul>"	 How can I change the line color as well the symbols representing the data points. I want all of them to be uniform. It appears you've settled on for your view. Synthesizing a few other comments, You can make the colors and shapes of your several series homogeneous by providing a , as suggested here and shown here . You can combine the series into a and estimate the area as outlined here .
How can I plot a comparison of two data sets?	0.99999666	56098735	I am not able to plot mean line over my bar graph which I made using unstack method	pandasmatplotlibplotbar-chartmean	56099015.0	"<p>So, I tried recreating what I think is your problem, using random data:</p>

<pre><code>import numpy as np
import pandas as pd
import matplotlib.pyplot as plt


np.random.seed(123)
df = pd.DataFrame(
    {
        'a':np.random.randint(0,10,100),
        'b':np.random.randint(0,10,100),
        'c':np.random.randint(0,10,100),}
)

df.groupby('a').sum().unstack().plot(kind='bar')
</code></pre>

<p><a href=""https://i.stack.imgur.com/5d8M6.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/5d8M6.png"" alt=""barplot""></a></p>

<p>I think your problem is, that this line:</p>

<pre><code>mean = df.groupby('a').sum().mean()
</code></pre>

<p>returns the mean for every group:</p>

<pre><code>b    48.7
c    42.1
dtype: float64
</code></pre>

<p>Then, you call</p>

<pre><code>plt.axhline(mean)
</code></pre>

<p>Which wants to plot exactly one line, but you give it several. You can do two things:</p>

<ol>
<li><p>either, plot the mean for every group:</p>

<pre><code>for m in mean:
    plt.axhline(m)
</code></pre></li>
<li><p>or, calculate the mean of the means, and plot that:</p>

<pre><code>plt.axhline(np.mean(mean))
</code></pre></li>
</ol>"	 So, I tried recreating what I think is your problem, using random data: I think your problem is, that this line: returns the mean for every group: Then, you call Which wants to plot exactly one line, but you give it several. You can do two things: either, plot the mean for every group: or, calculate the mean of the means, and plot that:
How can I plot a comparison of two data sets?	0.99999654	50698527	Plotting two densities with vertical lines and correct legend	rggplot2	50703005.0	"<p>Here are a couple ways to do it. I'm not sure, but I think some of the difficulty comes from having more than one <code>geom_vline</code> and trying to hard-code values in the <code>aes</code>. You're building three scales here: fill for the density curves, and color and linetype for the vertical lines. But you're aiming (correct me if I'm misreading) for two legends.</p>

<p>The easiest way to deal with getting the proper legends is to make a small data frame for the means, rather than individual values for each mean. You can do this easily with <code>dplyr</code> to calculate means for each type.</p>



<pre class=""lang-r prettyprint-override""><code>library(tidyverse)

set.seed(1234)
data &lt;- data.frame(value = rnorm(n = 10000, mean = 50, sd = 20),
                   type  = sample(letters[1:2], size = 10000, replace = TRUE))

data$value[data$type == ""b""] &lt;- data$value[data$type == ""b""] + 50

means &lt;- group_by(data, type) %&gt;% 
  summarise(mean = mean(value))

means
#&gt; # A tibble: 2 x 2
#&gt;   type   mean
#&gt;   &lt;fct&gt; &lt;dbl&gt;
#&gt; 1 a      50.3
#&gt; 2 b      99.9
</code></pre>

<p>Then when you plot, you can make a single <code>geom_vline</code> call, assigning the <code>means</code> data frame and allowing the aesthetics you want—color and linetype—to be scaled based on this data. The trick then is reconciling the names and labels: if you don't set the same legend name and labels for both the color and linetype scales, you'll have two legends for the lines. Set them the same, and you get a single legend for the mean lines.</p>

<pre class=""lang-r prettyprint-override""><code>ggplot(data, aes(x = value)) +
  geom_density(aes(fill = type), alpha = 0.3) +
  geom_vline(aes(xintercept = mean, color = type, linetype = type), data = means) +
  scale_color_manual(values = c(""red"", ""darkblue""), labels = c(""Mean.A"", ""Mean.B""), name = NULL) +
  scale_linetype_discrete(labels = c(""Mean.A"", ""Mean.B""), name = NULL) +
  scale_fill_manual(values = c(a = ""green"", b = ""blue""), name = ""Density"") 
</code></pre>

<p><img src=""https://i.imgur.com/HUk5SGb.png"" alt=""""></p>

<p>The second way is to just add a step to creating the means data frame where you label the types the way you want later, i.e. ""Mean.A"" instead of just ""a"". Then you don't need to adjust labels, and you can skip the linetype scale—unless you want to change linetypes manually—and then just remove the name for that legend for both color and linetype in your <code>labs</code>.</p>

<pre class=""lang-r prettyprint-override""><code>means2 &lt;- group_by(data, type) %&gt;% 
  summarise(mean = mean(value)) %&gt;%
  mutate(type = paste(""Mean"", str_to_upper(type), sep = "".""))

means2
#&gt; # A tibble: 2 x 2
#&gt;   type    mean
#&gt;   &lt;chr&gt;  &lt;dbl&gt;
#&gt; 1 Mean.A  50.3
#&gt; 2 Mean.B  99.9

ggplot(data, aes(x = value)) +
  geom_density(aes(fill = type), alpha = 0.3) +
  geom_vline(aes(xintercept = mean, color = type, linetype = type), data = means2) +
  scale_color_manual(values = c(Mean.A = ""red"", Mean.B = ""darkblue"")) +
  scale_fill_manual(values = c(a = ""green"", b = ""blue""), name = ""Density"") +
  labs(color = NULL, linetype = NULL)
</code></pre>

<p><img src=""https://i.imgur.com/FtBQwOF.png"" alt=""""></p>

<p>Created on 2018-06-05 by the <a href=""http://reprex.tidyverse.org"" rel=""nofollow noreferrer"">reprex package</a> (v0.2.0).</p>"	" Here are a couple ways to do it. I'm not sure, but I think some of the difficulty comes from having more than one and trying to hard-code values in the . You're building three scales here: fill for the density curves, and color and linetype for the vertical lines. But you're aiming (correct me if I'm misreading) for two legends. The easiest way to deal with getting the proper legends is to make a small data frame for the means, rather than individual values for each mean. You can do this easily with to calculate means for each type. Then when you plot, you can make a single call, assigning the data frame and allowing the aesthetics you want—color and linetype—to be scaled based on this data. The trick then is reconciling the names and labels: if you don't set the same legend name and labels for both the color and linetype scales, you'll have two legends for the lines. Set them the same, and you get a single legend for the mean lines. The second way is to just add a step to creating the means data frame where you label the types the way you want later, i.e. ""Mean.A"" instead of just ""a"". Then you don't need to adjust labels, and you can skip the linetype scale—unless you want to change linetypes manually—and then just remove the name for that legend for both color and linetype in your . Created on 2018-06-05 by the reprex package (v0.2.0)."
How can I plot a comparison of two data sets?	0.9999964	36227233	Plot multiple datasets with ggplot	rplotggplot2	36227283.0	"<p>Here's a template for plotting two data frame in the same figure:</p>

<pre><code>A = data.frame(x = rnorm(10),y=rnorm(10))
B = data.frame(x = rnorm(10),y=rnorm(10))
ggplot(A,aes(x,y)) +geom_point() +geom_point(data=B,colour='red') + xlim(0, 10) 
</code></pre>

<p>or equivalently: </p>

<pre><code>qplot(x,y,data=A)  +geom_point(data=B,colour='red') + xlim(0, 10) 
</code></pre>

<p>If you want to plot to figures side by side, see <code>?par</code> and look for the descriptions of 'mfcol' and 'mfrow'</p>

<p>In addition to ggsave, see <code>?pdf</code>. </p>"	 Here's a template for plotting two data frame in the same figure: or equivalently: If you want to plot to figures side by side, see and look for the descriptions of 'mfcol' and 'mfrow' In addition to ggsave, see .
How can I plot a comparison of two data sets?	0.9999964	16748577	matplotlib: combine different figures and put them in a single subplot sharing a common legend	pythonmatplotlib	16750010.0	"<p>Does this solve your problem?</p>

<pre><code>x  = [ 1, 2, 3, 5, 10, 100, 1000 ]
y1 = [ 1, 0.822, 0.763, 0.715, 0.680, 0.648, 0.645 ]
y2 = [ 1, 0.859, 0.812, 0.774, 0.746, 0.721, 0.718 ]

import matplotlib.pyplot as plt
from matplotlib.transforms import BlendedGenericTransform
# mode 01 from one case
fig1 = plt.figure()
ax1 = fig1.add_subplot(111)
line1, = ax1.plot( x, y1, label='mode 01' )
# mode 01 from other case
fig2 = plt.figure()
ax2 = fig2.add_subplot(111)
line2, = ax2.plot( x, y2, label='mode 01' )

# Create new figure and two subplots, sharing both axes
fig3, (ax3, ax4) = plt.subplots(1,2,sharey=True, sharex=True,figsize=(10,5))

# Plot data from fig1 and fig2
line3, = ax3.plot(line1.get_data()[0], line1.get_data()[1])
line4, = ax4.plot(line2.get_data()[0], line2.get_data()[1])
# If possible (easy access to plotting data) use
# ax3.plot(x, y1)
# ax4.lpot(x, y2)

ax3.set_ylabel('y-axis')
ax3.grid(True)
ax4.grid(True)

# Add legend
fig3.legend((line3, line4),
            ('label 3', 'label 4'),
            loc = 'upper center',
            bbox_to_anchor = [0.5, -0.05],
            bbox_transform = BlendedGenericTransform(fig3.transFigure, ax3.transAxes))
# Make space for the legend beneath the subplots
plt.subplots_adjust(bottom = 0.2)
# Show only fig3
fig3.show()
</code></pre>

<p>This gives output as seen below
<img src=""https://i.stack.imgur.com/KHcnD.png"" alt=""enter image description here""></p>

<h1>Edit</h1>

<p>Looking at the code in your uploaded zip-file, I'd say most of the requested functionality is achieved?</p>

<p>I see you have changed the function creating the plots, making the solution to your problem radically different, as you are no longer trying to ""merge"" two subplots from different figures. Your solution is basically the same as the one I presented above, in the sense that both are creating both <code>Axes</code> instances as subplots on the same figure (giving the desired layout), and <em>then</em> plotting, rather than <em>plotting, then extract/move the axes</em>, as your question was concerning originally.</p>

<p>As I suspected, the easiest and most trivial solution is to make the individual <code>Axes</code> subplots of the same figure instead of having them tied to separate figures, as moving one <code>Axes</code> instance from one <code>Figure</code> to another is not easily accomplished (if at all possible), as specified in a comment. The ""original"" problem still seems to be very hard to accomplish, as simply adding an <code>Axes</code> instance to the <code>Figure</code>'s <code>_axstack</code> makes it hard to customize to the desired layout.</p>

<p>One modification to the <code>ax.legend(...</code> of your current code, to make the legend centered horizontally, with the top just below the axes:</p>

<pre><code># Add this line
from matplotlib.transforms import BlendedGenericTransform

# Edit the function call to use the BlendedGenericTransform
ax.legend(loc='upper center',
          ncol=7,
          labelspacing=-0.7,
          columnspacing=0.75,
          fontsize=8,
          handlelength=2.6,
          markerscale=0.75,
          bbox_to_anchor=(0.5, -0.05),
          bbox_transform=BlendedGenericTransform(fig.transFigure, ax.transAxes))
</code></pre>

<p>Here, the <code>bbox_to_anchor</code> argument should be customized to fit within the boundaries of our figure.</p>

<p>The <a href=""http://matplotlib.org/devel/transformations.html?highlight=blendedgenerictransform#matplotlib.transforms.BlendedGenericTransform"" rel=""noreferrer""><code>BlendedGenericTransform</code></a> allows the transforms of the x-axis and y-axis to be different, which can be very useful in many situations.</p>"	" Does this solve your problem? This gives output as seen below Edit Looking at the code in your uploaded zip-file, I'd say most of the requested functionality is achieved? I see you have changed the function creating the plots, making the solution to your problem radically different, as you are no longer trying to ""merge"" two subplots from different figures. Your solution is basically the same as the one I presented above, in the sense that both are creating both instances as subplots on the same figure (giving the desired layout), and then plotting, rather than plotting, then extract/move the axes , as your question was concerning originally. As I suspected, the easiest and most trivial solution is to make the individual subplots of the same figure instead of having them tied to separate figures, as moving one instance from one to another is not easily accomplished (if at all possible), as specified in a comment. The ""original"" problem still seems to be very hard to accomplish, as simply adding an instance to the 's makes it hard to customize to the desired layout. One modification to the of your current code, to make the legend centered horizontally, with the top just below the axes: Here, the argument should be customized to fit within the boundaries of our figure. The allows the transforms of the x-axis and y-axis to be different, which can be very useful in many situations."
How can I plot a comparison of two data sets?	0.9999964	2399836	real time plotting on iPhone using core plot?	iphoneioscore-plot	2402899.0	"<p>Yes, you can do this reasonably easily.  For each received data point, append it to an array of values to display.  As these data points come in, call <code>-reloadData</code> on the Core Plot graph (or just the particular plot) to redraw the graph, passing in the array you just added a value to in response to the <code>-numbersForPlot:field:recordIndexRange:</code> delegate method.</p>

<p>If you need to adjust the plot range to track your data points (for a moving ticker), recalculate the new CPPlotRange for the X axis and set the plot space's <code>xRange</code> property to that.</p>

<p>Use the <a href=""https://github.com/core-plot/core-plot/tree/master/examples/CPTTestApp-iPhone"" rel=""nofollow noreferrer"">CPTestApp-iPhone</a>, <a href=""https://github.com/core-plot/core-plot/tree/master/examples/AAPLot"" rel=""nofollow noreferrer"">AAPLot</a>, or <a href=""https://github.com/core-plot/core-plot/tree/master/examples/StockPlot"" rel=""nofollow noreferrer"">StockPlot</a> examples as templates for how to set up the line chart overall, and modify from that starting point.</p>

<p>I do something similar to this on the Mac in a scientific application:
<a href=""https://i.stack.imgur.com/4iEsM.jpg"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/4iEsM.jpg"" alt=""alt text""></a><br>
<sub>(source: <a href=""http://www.sunsetlakesoftware.com/sites/default/files/SensingInAirAgain.jpg"" rel=""nofollow noreferrer"">sunsetlakesoftware.com</a>)</sub>  </p>"	 Yes, you can do this reasonably easily.  For each received data point, append it to an array of values to display.  As these data points come in, call on the Core Plot graph (or just the particular plot) to redraw the graph, passing in the array you just added a value to in response to the delegate method. If you need to adjust the plot range to track your data points (for a moving ticker), recalculate the new CPPlotRange for the X axis and set the plot space's property to that. Use the CPTestApp-iPhone , AAPLot , or StockPlot examples as templates for how to set up the line chart overall, and modify from that starting point. I do something similar to this on the Mac in a scientific application: (source: sunsetlakesoftware.com )
How can I create a chart without coding?	0.9999968	36205526	Tooltip bug with dynamic google charts	javascriptsvgdynamicchartstimeline	36206232.0	"<p>So I found the solution , </p>

<pre><code>container = document.getElementById('' + youridentifier + '');
chart = new google.visualization.Timeline(container);
chart.draw(dataSet, options);
</code></pre>

<p>Every time you ""redraw"" the google chart you have to create a new visualization  object .</p>"	" So I found the solution , Every time you ""redraw"" the google chart you have to create a new visualization  object ."
How can I create a chart without coding?	0.9999968	14931497	Flex columnset not displayed properly	actionscript-3flexflex4.5parsleyflex-charts	16396428.0	"<p>After a lot of effort i come to the solution. Here is the code for that.</p>

<pre><code>public function getColumnSeries():Array
{
    var series:Array = new Array();

    var set1:ColumnSet =new ColumnSet();
    set1.type=""stacked"";

    var set2:ColumnSet=new ColumnSet();
    set2.type=""stacked"";

    var columnSeries:ColumnSeries;


    columnSeries=new ColumnSeries();
    //columnSeries.xField=xFieldLabel;
    columnSeries.yField=""quarter1_profit_count"";
    columnSeries.displayName=""quarter1_title"";                  
    series.push(columnSeries);

    columnSeries=new ColumnSeries();
    //columnSeries.xField=xFieldLabel;
    columnSeries.yField=""quarter2_profit_count"";
    columnSeries.displayName=""quarter2_title"";
    series.push(columnSeries);

    columnSeries=new ColumnSeries();
    //columnSeries.xField=xFieldLabel;
    columnSeries.yField=""quarter3_profit_count"";
    columnSeries.displayName=""quarter3_title"";
    series.push(columnSeries);

    columnSeries=new ColumnSeries();
    //columnSeries.xField=xFieldLabel;
    columnSeries.yField=""quarter4_profit_count"";
    columnSeries.displayName=""quarter4_title"";
    series.push(columnSeries);

    set1.series=series;

    //similarly for set2

    series=new Array();

    //add columnseries to series 

    set2.series=series;

    var temp:Array=new Array();
    temp.push(set1);
    temp.push(set2);

    return temp;  
}   
</code></pre>

<p>Also along with this make sure that you calculate max and min values for the y axis otherwise it will not render propery. This was also one of the reason why my chart was not getting displayed in the way i wanted.</p>

<p>Here is the updated markup </p>

<pre><code> &lt;mx:ColumnChart id=""columnChart"" 
            width=""100%"" height=""100%""
            dataProvider=""{myPM.myData}"" 
            showDataTips=""true""                         
            click=""handleChartClick(event)""
            backgroundElements=""{backgroundGrids}""                                  
            dataTipFunction=""{myPM.formatColumnChartToolTipData}""   
            type=""clustered""                            
            series={myPM.series}
            &gt;

                &lt;mx:horizontalAxis&gt;
                    &lt;mx:CategoryAxis id=""hAxis"" 
                             categoryField=""{myPM.xFieldLabel}""
                             title=""{myPM.xAxisDisplayLabel}""/&gt;
                &lt;/mx:horizontalAxis&gt;                                

                &lt;mx:verticalAxis&gt;
                    &lt;mx:LinearAxis id=""vAxis"" 
                               title=""{myPM.yAxisDisplayLabel}""/&gt;
                &lt;/mx:verticalAxis&gt;

    &lt;/mx:ColumnChart&gt;
</code></pre>"	 After a lot of effort i come to the solution. Here is the code for that. Also along with this make sure that you calculate max and min values for the y axis otherwise it will not render propery. This was also one of the reason why my chart was not getting displayed in the way i wanted. Here is the updated markup
How can I create a chart without coding?	0.99999666	33878237	Highcharts wrong size on window maximize	javascriptjqueryhtmltwitter-bootstrap-3highcharts	37167017.0	"<p>I spent a long time looking at this, and finally have a solution.</p>

<p>In my example above, I was using the charts within a bootstrap 3 carousel. When a panel is not shown, the div holding it gets its CSS 'display' set to 'none'. Highcharts freaks out when this is the case, and doesn't format itself correctly. As a solution, I bound a handler to watch the slide event which is fired prior to the transition (slide.bs.carousel for Bootstrap), which fires a JQuery <code>$(window).resize()</code> event. This triggers the chart to format itself correctly, as it is after the CSS 'display' property has been reverted from 'none' to 'normal', but before the transition animation shows the chart itself.</p>

<p>Point of Order: some other plugins seem to dislike it when you fire a window resize() in this method (DataTable confirmed so far), and distort their content. If this happens to you, please be sure to use an 'if' clause to mask the function fire depending on the content that is about to be shown.</p>

<p>Sample Code:</p>

<pre><code>Carousel.$Wrapper.on('slide.bs.carousel', function (evt) { onSlide(evt) });
</code></pre>"	 I spent a long time looking at this, and finally have a solution. In my example above, I was using the charts within a bootstrap 3 carousel. When a panel is not shown, the div holding it gets its CSS 'display' set to 'none'. Highcharts freaks out when this is the case, and doesn't format itself correctly. As a solution, I bound a handler to watch the slide event which is fired prior to the transition (slide.bs.carousel for Bootstrap), which fires a JQuery event. This triggers the chart to format itself correctly, as it is after the CSS 'display' property has been reverted from 'none' to 'normal', but before the transition animation shows the chart itself. Point of Order: some other plugins seem to dislike it when you fire a window resize() in this method (DataTable confirmed so far), and distort their content. If this happens to you, please be sure to use an 'if' clause to mask the function fire depending on the content that is about to be shown. Sample Code:
How can I create a chart without coding?	0.99999666	36733701	shiny ggplot with interactive y does not plot correctly	rggplot2shinyinteractive	36750477.0	"<p>Thanks to <strong>aosmith</strong>'s answer, I was able to fix the problem and got the chart to display correctly. It turns out that the correct codes to ggplot should be: </p>

<p>""ggplot(brand_sales,aes_string(x=""Brands"",y=input$Year,fill=""Brands""))+xlab(""Brands"")+ylab(""Sales     Volume"")+geom_bar(stat=""identity"")""</p>

<p>The key is to surround the X and Fill variables with quotes as this is the right way to name columns in aes_string. </p>

<p>Thanks again <strong>aosmith</strong> and <strong>MrFlink</strong> for your inputs!</p>"	" Thanks to aosmith 's answer, I was able to fix the problem and got the chart to display correctly. It turns out that the correct codes to ggplot should be: ""ggplot(brand_sales,aes_string(x=""Brands"",y=input$Year,fill=""Brands""))+xlab(""Brands"")+ylab(""Sales     Volume"")+geom_bar(stat=""identity"")"" The key is to surround the X and Fill variables with quotes as this is the right way to name columns in aes_string. Thanks again aosmith and MrFlink for your inputs!"
How can I create a chart without coding?	0.99999654	50652530	Coldfusion Charting Multiple Series from QoQ	coldfusioncfloopcfchart	50662394.0	"<blockquote>
  <p><code>&lt;cfloop query=""HISTORY_CHART"" group=""TERRITORY_DESC""&gt;</code></p>
</blockquote>

<p>I'm guessing the ""group"" isn't working as expected because the query data isn't sorted correctly.</p>

<p>What the <a href=""https://helpx.adobe.com/coldfusion/cfml-reference/coldfusion-tags/tags-j-l/cfloop-looping-over-a-query.html"" rel=""nofollow noreferrer"">cfloop documentation</a> doesn't emphasize nearly enough is that the ""group"" feature requires query data be sorted <strong>in the same order as the ""group"" statement(s)</strong>. If it's sorted by a different column (say ""Rpt_Mth"") and cfloop is grouped by ""Territory_Desc"", you won't get the expected output.</p>

<p><a href=""https://trycf.com/gist/6eb55a710a41cb7af26929da2622e4ff/acf?theme=monokai"" rel=""nofollow noreferrer"">Sorted vs Unsorted example on TryCF.com</a></p>

<p>Make sure the sql query sorts by the same column used in the <em>group</em>, ""Territory_Desc"". Then the chart should generate correctly. </p>

<pre><code>&lt;cfquery ...&gt;
  SELECT Adherence_Pct,Rpt_Mth,Territory_Desc 
  FROM   TableName 
  ORDER BY Territory_Desc 
&lt;/cfquery&gt;
</code></pre>"	" I'm guessing the ""group"" isn't working as expected because the query data isn't sorted correctly. What the cfloop documentation doesn't emphasize nearly enough is that the ""group"" feature requires query data be sorted in the same order as the ""group"" statement(s) . If it's sorted by a different column (say ""Rpt_Mth"") and cfloop is grouped by ""Territory_Desc"", you won't get the expected output. Sorted vs Unsorted example on TryCF.com Make sure the sql query sorts by the same column used in the group , ""Territory_Desc"". Then the chart should generate correctly."
When should I use a bar chart versus a pie chart?	0.9999969	10384425	How to display Text on a PieChart?	iphoneobjective-cios5textpie-chart	10384909.0	"<p>You can draw a string with NSString drawInRect during the drawRect method.  For example:</p>

<pre><code>[percentageString drawInRect:CGRectMake(100, 100, 30, 20) 
                    withFont:font 
               lineBreakMode:UILineBreakModeClip 
                   alignment:UITextAlignmentLeft];
</code></pre>

<p><strong>Update</strong></p>

<p>Here is how to find the x, y for placing text:</p>

<pre><code>CGFloat startDegree = 180;                             // start at 180
CGFloat endDegree = degree;                            // end at some value

CGFloat mid = (endDegree + startDegree) / 2;           // find midpoint
CGFloat rad = DEGREES_TO_RADIANS(mid);                 // convert to radians


// center is center of pie chart
// radius is how big the pie chart is
// 30 is extra to draw text outside circle

CGFloat x =  center.x + ((radius + 30) * cos(rad));    
CGFloat y = center.y + ((radius + 30) * sin(rad));

NSLog(@""X Y: %f %f %f"", x, y, degree);

NSString *text = @""Test"";   
[text drawInRect:CGRectMake(x, y, 50, 44) withFont:[UIFont systemFontOfSize:14.0f]];
</code></pre>

<p>I had a sample pie chart so I used that.  It has a slider with degrees.  In the example, I can draw a segment of the pie chart from 180 degrees to 360 degrees.</p>"	 You can draw a string with NSString drawInRect during the drawRect method.  For example: Update Here is how to find the x, y for placing text: I had a sample pie chart so I used that.  It has a slider with degrees.  In the example, I can draw a segment of the pie chart from 180 degrees to 360 degrees.
When should I use a bar chart versus a pie chart?	0.9999968	41197122	Pie chart using Charts library with swift 3	ioschartsswift3core-graphicspie-chart	42234117.0	"<p>The reason all the information isn't showing up is because you are using a parent initialiser when creating the entry point. </p>

<p>Instead of </p>

<pre><code>let dataEntry1 = ChartDataEntry(x: Double(i), y: values[i], data: dataPoints[i] as AnyObject)
</code></pre>

<p>try this instead</p>

<pre><code>let dataEntry1 = PieChartDataEntry(value: Double(i), label: dataPoints[i], data:  dataPoints[i] as AnyObject)
</code></pre>

<p>The PieChartDataEntry is specifically for Pie charts so you should see the month show up in the chart.</p>

<p>Hopefully this gets you on the right track</p>"	 The reason all the information isn't showing up is because you are using a parent initialiser when creating the entry point. Instead of try this instead The PieChartDataEntry is specifically for Pie charts so you should see the month show up in the chart. Hopefully this gets you on the right track
When should I use a bar chart versus a pie chart?	0.9999968	28859220	How to add values to an exisiting TPieSeries via Delphi Xe7	delphiteechartdelphi-xe7	28862879.0	"<p>Access the indexed values through the <code>TPieSeries.PieValues</code> property.
Make an addition with the existing value. You can preinitialize the pie values with zero.</p>

<pre><code>Series1.PieValues[2] := Series1.PieValues[2] + 10;
</code></pre>

<p>A better approach is to accumulate the values before adding them into the chart.</p>"	" Access the indexed values through the property.
Make an addition with the existing value. You can preinitialize the pie values with zero. A better approach is to accumulate the values before adding them into the chart."
When should I use a bar chart versus a pie chart?	0.9999968	50744194	Highcharts, polar without inner axis	highcharts	50745317.0	"<p>In order to adjust the size of the second chart you need to set the <code>pane.size</code> parameter equal to the <code>series.size</code> value of the first chart pie series, just like that:</p>

<pre><code>       this.options = {
          chart: {
            type: 'column',
            polar: true
          },
          series: [{
            data: [29.9, 71.5, 106.4, 129.2, 144.0, 176.0, 135.6, 148.5, 216.4, 194.1, 95.6, 54.4]
          }],
          pane: {
            size: '60%'
          }
        };
</code></pre>

<p>API Reference: <a href=""https://api.highcharts.com/highcharts/pane.size"" rel=""nofollow noreferrer"">https://api.highcharts.com/highcharts/pane.size</a></p>

<p>Live example: <a href=""http://plnkr.co/edit/TZiv6POxjmaemk6cpBJc?p=preview"" rel=""nofollow noreferrer"">http://plnkr.co/edit/TZiv6POxjmaemk6cpBJc?p=preview</a></p>

<p>= = = =</p>

<p><strong>EDIT</strong></p>

<p>After getting more specified information (in comment below), the answer has completely changed.
We don't have such a feature implemented in polar chart type.</p>

<p>However, all is not lost, because you can get this effect by adding some custom code.</p>

<p>First, you need to render circle on the center of your chart, using <code>renderer</code> object on <code>chart.load</code> event:</p>

<pre><code>           events: {
              load: function() {
                var chart = this
                var center = [chart.chartWidth / 2, chart.chartHeight / 2]
                // Render custom circle on the center of the chart
                chart.renderer.circle(center[0], center[1], 45)
                    .attr({
                    fill: '#fff',
                    stroke: '#ddd',
                    'stroke-width': 1,
                    zIndex: 6 // Set Z iIndex smaller than zIndex of yAxis Labels to avoid overlapping
                  })
                    .add()
              }
           }
</code></pre>

<p>Then, you need to adjust yAxis a bit, namely set the <code>Axis.min</code> equal to some negative value, to make the <code>0</code> tick located on the middle of the visible part of plot area.</p>

<pre><code>    yAxis: {
        min: -130
    }
</code></pre>

<p>At the end, you need to hide first <code>yAxis</code> label, using <code>labels.formatter</code> function:</p>

<pre><code>    yAxis: {
        min: -130,
        labels: {
            // Hide first axis label
            formatter: function() {
                return this.isFirst ? '' : this.value 
            }
        }
    }
</code></pre>

<p>Live example: <a href=""https://jsfiddle.net/zps287e1/"" rel=""nofollow noreferrer"">https://jsfiddle.net/zps287e1/</a></p>"	" In order to adjust the size of the second chart you need to set the parameter equal to the value of the first chart pie series, just like that: API Reference: https://api.highcharts.com/highcharts/pane.size Live example: http://plnkr.co/edit/TZiv6POxjmaemk6cpBJc?p=preview = = = = EDIT After getting more specified information (in comment below), the answer has completely changed.
We don't have such a feature implemented in polar chart type. However, all is not lost, because you can get this effect by adding some custom code. First, you need to render circle on the center of your chart, using object on event: Then, you need to adjust yAxis a bit, namely set the equal to some negative value, to make the tick located on the middle of the visible part of plot area. At the end, you need to hide first label, using function: Live example: https://jsfiddle.net/zps287e1/"
When should I use a bar chart versus a pie chart?	0.99999666	28698688	Dynamic highcharts pie chart with drilldown	jqueryhighcharts	28781166.0	"<p>you need to import drilldown js and also your json sample data is incorrect.</p>

<ol>
<li>all the drilldown series data whose id and main data's id should should match.a</li>
<li><p>also drilldown series data should be together as like here ride data should have to give as <em>data</em>.</p>

<pre><code>            var brandsData = [],
                    drilldownSeries = [];


            brandsData = [{
                    name: ""Drive"",
                    y: 1,
                    color: ""#1068C7"",
                    drilldown: ""drive""
                }, {
                    name: ""Ride"",
                    y: 2,
                    color: ""#11A852"",
                    drilldown: ""ride""
                }, {
                    name: ""Swim"",
                    y: 1,
                    color: ""#23ED1C"",
                    drilldown: ""swim""
                }];
            drilldownSeries = [
                {
                    ""name"": ""dfdf"",
                    ""data"": [
                        [""Tiger Team"", 10]
                    ],
                    id: ""swim""
                }, {
                    ""data"": [
                        [""Tiger Team"", 10]
                    ],
                    id: ""drive""
                }, {
                    ""data"": [
                        [""Spider Team"", 3],
                        [""Bird Team"", 1]
                    ],
                    id: ""ride""
                }];
            // Create the chart
            $('#container').highcharts({
                chart: {
                    type: 'pie'
                },
                series: [{
                        name: ""Team"",
                        colorByPoint: true,
                        data: brandsData
                    }],
                drilldown: {
                    series: drilldownSeries
                }
            });
</code></pre></li>
</ol>

<p><a href=""http://jsfiddle.net/7jevddL4/20/"" rel=""nofollow"">pie chart drilldown fiddle</a></p>"	 you need to import drilldown js and also your json sample data is incorrect. all the drilldown series data whose id and main data's id should should match.a also drilldown series data should be together as like here ride data should have to give as data . pie chart drilldown fiddle
What is the easiest way to create a diagram of a network?	0.9999964	34902240	Diagrams boundingRect including the lines' width	haskellgraphicshaskell-diagrams	34929113.0	"<p>Unfortunately there's no way to do this automatically yet. The easiest way would be to <a href=""http://projects.haskell.org/diagrams/haddock/Diagrams-Combinators.html#v:frame"" rel=""nofollow noreferrer""><code>frame</code></a> the diagram before finding the <code>boundingRect</code>. Since you're using the local units you just need to <code>frame</code> half the local width used in the diagram (add half of the line width used for the bounding rectangle if that has a line too).</p>

<p>Here's a simple example:</p>

<pre><code>{-# LANGUAGE GADTs #-}

import Diagrams.Prelude
import Diagrams.Backend.Rasterific.CmdLine

main :: IO ()
main = mainWith $ frame 1 rects

rects :: Diagram B
rects = hsep 1 $ map (dia &lt;&gt;) [br1, br2, br3]
  where
    br1 = boundingRect dia # lwL 0.2 # lc red
    br2 = boundingRect (frame 0.1 dia) # fc dodgerblue # lw none
    br3 = boundingRect (frame 0.2 dia) # lwL 0.2 # lc red

dia :: Diagram B
dia = circle 3 # fc orange # lwL 0.2
</code></pre>

<p><a href=""https://i.stack.imgur.com/4ukiV.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/4ukiV.png"" alt=""bounding rectangles""></a></p>

<p>A more general solution would be to draw the offset curves of each path using the local line width in the <code>Diagram</code> and find the bounding box of that. <a href=""http://projects.haskell.org/diagrams/haddock/Diagrams-TwoD-Offset.html"" rel=""nofollow noreferrer""><code>Diagrams.TwoD.Offset</code></a> can almost do this but I don't think it works for all cases.</p>"	 Unfortunately there's no way to do this automatically yet. The easiest way would be to the diagram before finding the . Since you're using the local units you just need to half the local width used in the diagram (add half of the line width used for the bounding rectangle if that has a line too). Here's a simple example: A more general solution would be to draw the offset curves of each path using the local line width in the and find the bounding box of that. can almost do this but I don't think it works for all cases.
What is the easiest way to create a diagram of a network?	0.99999607	703948	What is the difference between a data flow diagram and a flow chart?	flowchart	703960.0	<p>You should use whatever you like. The diagram is just a tool. Use whatever tool fits you and your problem best. I usually just use boxes and arrows and squiggles and circles and little stick figures and whatever else I think gets the point across to the viewer. In short it doesn't matter if you even use a standard diagraming standard. People are usually pretty good at understanding pictures.</p>	 You should use whatever you like. The diagram is just a tool. Use whatever tool fits you and your problem best. I usually just use boxes and arrows and squiggles and circles and little stick figures and whatever else I think gets the point across to the viewer. In short it doesn't matter if you even use a standard diagraming standard. People are usually pretty good at understanding pictures.
What is the easiest way to create a diagram of a network?	0.9999957	5612357	Determine whether graph is singly connected or not	algorithmgraphconnectivityedge	5612471.0	<p>Good question. If a graph has back edges, that doesn't prevent it from being singly-connected. But it might not be singly-connected for other reasons. For example, if the graph is undirected.</p>	 Good question. If a graph has back edges, that doesn't prevent it from being singly-connected. But it might not be singly-connected for other reasons. For example, if the graph is undirected.
What is the easiest way to create a diagram of a network?	0.9999956	10791367	android: draw outside of closed path instead of inside	androiddrawing	10791607.0	"<p>This can be complicated or very simple.</p>

<p>The complicated way:</p>

<p>Create a path exactly like your polygon, except don't close it. The continue that path to the nearest wall. Draw around the walls. Close and fill. In code, this isn't too fun.</p>

<p>The simple way:</p>

<p>Color the canvas. Draw the polygon.</p>

<p>Good luck.</p>"	 This can be complicated or very simple. The complicated way: Create a path exactly like your polygon, except don't close it. The continue that path to the nearest wall. Draw around the walls. Close and fill. In code, this isn't too fun. The simple way: Color the canvas. Draw the polygon. Good luck.
What is the easiest way to create a diagram of a network?	0.9999956	34977882	Get Quantile values from geom_boxplot()	rggplot2boxplot	34978025.0	"<p>Probably the easiest way is to use an outside of <code>ggplot</code> aggregate, but here's how to do it with <code>ggplot</code>, using the function <code>ggplot_build</code> on a created plot:</p>

<pre><code>library(ggplot2)
p &lt;- ggplot(mtcars, aes(x=factor(gear), y=mpg)) + geom_boxplot() 
ggplot_build(p)$data

[[1]]
  ymin lower middle  upper ymax outliers notchupper notchlower x PANEL group weight ymin_final ymax_final
1 10.4  14.5   15.5 18.400 21.5            17.09102   13.90898 1     1     1      1       10.4       21.5
2 17.8  21.0   22.8 28.075 33.9            26.02695   19.57305 2     1     2      1       17.8       33.9
3 15.0  15.8   19.7 26.000 30.4            26.90729   12.49271 3     1     3      1       15.0       30.4
   xmin  xmax
1 0.625 1.375
2 1.625 2.375
3 2.625 3.375
</code></pre>"	 Probably the easiest way is to use an outside of aggregate, but here's how to do it with , using the function on a created plot:
I need help creating a visualization/diagram/presentation of my data	0.99999726	36205526	Tooltip bug with dynamic google charts	javascriptsvgdynamicchartstimeline	36206232.0	"<p>So I found the solution , </p>

<pre><code>container = document.getElementById('' + youridentifier + '');
chart = new google.visualization.Timeline(container);
chart.draw(dataSet, options);
</code></pre>

<p>Every time you ""redraw"" the google chart you have to create a new visualization  object .</p>"	" So I found the solution , Every time you ""redraw"" the google chart you have to create a new visualization  object ."
I need help creating a visualization/diagram/presentation of my data	0.99999654	15952373	is important the diagram of database in SQL Server?	sql-serverdiagrams	15952693.0	<p>The diagramming features in SQL Server don't help the SQL engine in any way. They are only important if your process (or people) need them. But in my experience, most databases do not have the diagramming components initialized, and diagrams, when needed, are kept external to the database.</p>	 The diagramming features in SQL Server don't help the SQL engine in any way. They are only important if your process (or people) need them. But in my experience, most databases do not have the diagramming components initialized, and diagrams, when needed, are kept external to the database.
I need help creating a visualization/diagram/presentation of my data	0.99999654	36139456	How can decision tree model in Spark (pyspark) be visualized?	pythonapache-sparkvisualizationpysparkdecision-tree	37109535.0	"<p>I have tried to do the following in order to create a visualization :</p>

<ol>
<li>Parse Spark Decision Tree output to a <code>JSON</code> format.</li>
<li>Use the <code>JSON</code> file as an input to a <code>D3.js</code> visualization.</li>
</ol>

<p>For more code you can refer to my prototype at GitHub <a href=""https://github.com/hechemeljed/Decision-Tree-Visualization-Spark"" rel=""noreferrer"">here</a>.</p>"	 I have tried to do the following in order to create a visualization : Parse Spark Decision Tree output to a format. Use the file as an input to a visualization. For more code you can refer to my prototype at GitHub here .
I need help creating a visualization/diagram/presentation of my data	0.9999964	1186770	Tools for creating Class Diagrams	classdiagram	15007518.0	"<p>I use <a href=""http://www.genmymodel.com"">GenMyModel</a>, first released in 2013. It's a real UML modeler, not a drawing tool. Your diagrams are UML-compliant, generate code and can be exported as UML/XMI files. It's web-based and free so it matches your criteria.</p>"	 I use GenMyModel , first released in 2013. It's a real UML modeler, not a drawing tool. Your diagrams are UML-compliant, generate code and can be exported as UML/XMI files. It's web-based and free so it matches your criteria.
I need help creating a visualization/diagram/presentation of my data	0.9999964	34715002	How to validated geography polygon in SQL server 2008?	sql-server-2008validationpolygongeospatialgeography	48818388.0	"<p>This is working for me on SQL Server 2008. After loading the shape as a geometry, use <code>MakeValid()</code> to correct it, then reload into a geography.</p>

<pre><code>declare @gt nvarchar(max)
declare @gm geometry
declare @gmvalid geometry

set @gmvalid = @gm.MakeValid()

  set @gt = @gmvalid.STAsText()

  --select @gt
  if LEFT(@gt,7 ) = 'POLYGON'
  begin
  set @gg = geography::STPolyFromText(@gt, 4326)
  end
  else
  begin
  set @gg = geography::STMPolyFromText(@gt, 4326)
  end
</code></pre>"	 This is working for me on SQL Server 2008. After loading the shape as a geometry, use to correct it, then reload into a geography.
When should I use a scatter plot?	0.99999726	15221988	How to join efficiently multiple rgl plots into one single plot?	rplotggplot2pngrgl	15229481.0	"<p>Here's a solution using the <strong>grid</strong> function<code>grid.raster</code> and <code>xyplot</code> from <strong>lattice</strong>. 
I think that <code>grid.raster</code> has faster
rendering to screen, so it is a good candidate  for performance. I am choosing lattice because it integrate easier the grid function using the panel customization.</p>

<p><img src=""https://i.stack.imgur.com/bES57.png"" alt=""enter image description here""></p>

<p>First I read all the png, using <code>readPNG</code> from <code>png</code> package ( similar to your solution)</p>

<pre><code>ll &lt;- list.files(path='c:/temp',patt='compo[0-9].*',full.names=T)
library(png)
imgs &lt;- lapply(ll,function(x){
       as.raster(readPNG(x))  ## no need to convert to a matrix here!
   })
</code></pre>

<p>Then I prepare data for scatter plot:</p>

<pre><code>x = 1:4   ## here 4 because I use  16 plots
y = 1:4
dat &lt;- expand.grid(x,y)
</code></pre>

<p>Finaly I use <code>xyplot</code> with a custom panel function:</p>

<pre><code>library(lattice)
library(grid)
xyplot(Var2~Var1|rownames(dat),data=dat,layout=c(4,4),
      panel=function(x,y,...){
        lims &lt;- current.panel.limits()
        grid.raster(image =imgs[[panel.number()]],sum(lims$xlim)/2,sum(lims$ylim)/2,
                                      width =diff(lims$xlim),
                                          height=diff(lims$ylim),def='native' )

       })
</code></pre>

<p>PS: it is what I call a <strong>catty</strong> solution.</p>"	" Here's a solution using the grid function and from lattice . 
I think that has faster
rendering to screen, so it is a good candidate  for performance. I am choosing lattice because it integrate easier the grid function using the panel customization. First I read all the png, using from package ( similar to your solution) Then I prepare data for scatter plot: Finaly I use with a custom panel function: PS: it is what I call a catty solution."
When should I use a scatter plot?	0.99999714	42573124	Hexbin plot with calculated colors	pythonmatplotlib	42574789.0	"<p>If I understand what you want correctly, you can use the <code>C</code> parameter which represents the value of each point. These values will be reduced by the function given by <code>reduce_C_function</code> which defaults to <code>np.mean</code>. (This is also documented in the <a href=""http://matplotlib.org/api/pyplot_api.html#matplotlib.pyplot.hexbin"" rel=""nofollow noreferrer"">api</a>.) The value you want for each bin is exactly the mean of all values when you assign 1 to every ""B"" and 0 to every ""A"". So this will give you the desired result:</p>

<pre><code>import pandas as pd
import matplotlib.pyplot as plt

df = pd.DataFrame({""x"": [2,4,5,8,5,4,1,6,8,7],
                   ""y"" : [2,4,1,3,7,8,9,3,6,9],
                   ""z"" : [""A"",""B"",""B"",""A"",""B"",""A"",""A"",""B"",""B"",""A""]})

plt.hexbin(df[""x""], df[""y""], C=df[""z""]==""B"", gridsize=4, cmap=plt.get_cmap(""jet""))
plt.scatter(df[""x""], df[""y""], c=df[""z""]==""B"", cmap=plt.get_cmap(""viridis""))
plt.show()
</code></pre>

<p>Here the scatter plot is only there to verify that the binning is correct. The coloring is yellow for ""B"" and violet for ""A"".
The result looks like:
<a href=""http://matplotlib.org/api/pyplot_api.html#matplotlib.pyplot.hexbin"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/jEeMf.png"" alt=""enter image description here""></a></p>

<p>Reducing the <code>gridsize=2</code> shows that this works also for more than one point per bin:
<a href=""https://github.com/matplotlib/matplotlib/blob/72cea629002438251a8c465f2cab208494567d0d/lib/matplotlib/axes/_axes.py#L4089-L4094"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/TnJDV.png"" alt=""enter image description here""></a></p>"	" If I understand what you want correctly, you can use the parameter which represents the value of each point. These values will be reduced by the function given by which defaults to . (This is also documented in the api .) The value you want for each bin is exactly the mean of all values when you assign 1 to every ""B"" and 0 to every ""A"". So this will give you the desired result: Here the scatter plot is only there to verify that the binning is correct. The coloring is yellow for ""B"" and violet for ""A"".
The result looks like: Reducing the shows that this works also for more than one point per bin:"
When should I use a scatter plot?	0.99999714	38070418	How to plot scatter chart in iReport with DB data?	chartsjasper-reportsireportscatter-plot	38073721.0	"<p>Your first problem is to pass a datasource to the chart, if you are using main datasource, you need to put the chart in the <code>summary</code> band, since your datasource is not ready in <code>title</code> band and is iterating on <code>detail</code> band, hence it will not work correctly (note: if you use your datasource also in detail band it need to be a <a href=""http://jasperreports.sourceforge.net/api/net/sf/jasperreports/engine/JRRewindableDataSource.html"" rel=""nofollow noreferrer"">JRRewindableDataSource</a>).</p>

<p>If you need to use it in other bands then <code>summary</code> band I suggest you make a subreport and included this in desired band passing chart datasource or the connection to the subreport.</p>

<p>The scatter plot is achieved using a <code>&lt;scatterChart&gt;</code> and the <code>&lt;xyDataset&gt;</code>, to set series and x,y data you use the <code>&lt;xySeries&gt;</code> tag</p>

<blockquote>
  <p>In iReport, Right click chart, select <strong>Chart Data</strong>, select <strong>tab Details</strong>
  and <strong>add</strong> XY series</p>
</blockquote>

<pre><code>&lt;xySeries&gt;
    &lt;seriesExpression&gt;&lt;![CDATA[$F{Series}]]&gt;&lt;/seriesExpression&gt;
    &lt;xValueExpression&gt;&lt;![CDATA[$F{X}]]&gt;&lt;/xValueExpression&gt;
    &lt;yValueExpression&gt;&lt;![CDATA[$F{Y}]]&gt;&lt;/yValueExpression&gt;
&lt;/xySeries&gt;
</code></pre>

<p>If you have only 1 series you can pass a dummy variable in <code>seriesExpression</code></p>

<pre><code>&lt;seriesExpression&gt;&lt;![CDATA[""dummy""]]&gt;&lt;/seriesExpression&gt;
</code></pre>

<p><strong>Full jrxml example</strong></p>

<pre><code>&lt;?xml version=""1.0"" encoding=""UTF-8""?&gt;
&lt;jasperReport xmlns=""http://jasperreports.sourceforge.net/jasperreports"" xmlns:xsi=""http://www.w3.org/2001/XMLSchema-instance"" xsi:schemaLocation=""http://jasperreports.sourceforge.net/jasperreports http://jasperreports.sourceforge.net/xsd/jasperreport.xsd"" name=""ScatterPlot"" pageWidth=""595"" pageHeight=""842"" columnWidth=""555"" leftMargin=""20"" rightMargin=""20"" topMargin=""20"" bottomMargin=""20"" uuid=""ebc92eb9-c769-4888-98de-b1d60670725c""&gt;
    &lt;queryString&gt;
        &lt;![CDATA[]]&gt;
    &lt;/queryString&gt;
    &lt;field name=""Series"" class=""java.lang.String""/&gt;
    &lt;field name=""X"" class=""java.lang.Double""/&gt;
    &lt;field name=""Y"" class=""java.lang.Double""/&gt;
    &lt;columnHeader&gt;
        &lt;band height=""20""&gt;
            &lt;staticText&gt;
                &lt;reportElement x=""100"" y=""0"" width=""100"" height=""20"" uuid=""978a0093-4e67-40e3-baee-8340ccc23b8f""/&gt;
                &lt;box topPadding=""2"" leftPadding=""2"" bottomPadding=""2"" rightPadding=""2""&gt;
                    &lt;pen lineWidth=""0.5""/&gt;
                    &lt;topPen lineWidth=""0.5""/&gt;
                    &lt;leftPen lineWidth=""0.5""/&gt;
                    &lt;bottomPen lineWidth=""0.5""/&gt;
                    &lt;rightPen lineWidth=""0.5""/&gt;
                &lt;/box&gt;
                &lt;textElement textAlignment=""Center"" verticalAlignment=""Middle""&gt;
                    &lt;font isBold=""true""/&gt;
                &lt;/textElement&gt;
                &lt;text&gt;&lt;![CDATA[X]]&gt;&lt;/text&gt;
            &lt;/staticText&gt;
            &lt;staticText&gt;
                &lt;reportElement x=""0"" y=""0"" width=""100"" height=""20"" uuid=""b97c9f78-ad74-4d9f-af46-ee3fc3e5351f""/&gt;
                &lt;box topPadding=""2"" leftPadding=""2"" bottomPadding=""2"" rightPadding=""2""&gt;
                    &lt;pen lineWidth=""0.5""/&gt;
                    &lt;topPen lineWidth=""0.5""/&gt;
                    &lt;leftPen lineWidth=""0.5""/&gt;
                    &lt;bottomPen lineWidth=""0.5""/&gt;
                    &lt;rightPen lineWidth=""0.5""/&gt;
                &lt;/box&gt;
                &lt;textElement verticalAlignment=""Middle""&gt;
                    &lt;font isBold=""true""/&gt;
                &lt;/textElement&gt;
                &lt;text&gt;&lt;![CDATA[Series]]&gt;&lt;/text&gt;
            &lt;/staticText&gt;
            &lt;staticText&gt;
                &lt;reportElement x=""200"" y=""0"" width=""100"" height=""20"" uuid=""e50dab9b-c8f7-4cc0-a8f7-3ca4438c746b""/&gt;
                &lt;box topPadding=""2"" leftPadding=""2"" bottomPadding=""2"" rightPadding=""2""&gt;
                    &lt;pen lineWidth=""0.5""/&gt;
                    &lt;topPen lineWidth=""0.5""/&gt;
                    &lt;leftPen lineWidth=""0.5""/&gt;
                    &lt;bottomPen lineWidth=""0.5""/&gt;
                    &lt;rightPen lineWidth=""0.5""/&gt;
                &lt;/box&gt;
                &lt;textElement textAlignment=""Center"" verticalAlignment=""Middle""&gt;
                    &lt;font isBold=""true""/&gt;
                &lt;/textElement&gt;
                &lt;text&gt;&lt;![CDATA[Y]]&gt;&lt;/text&gt;
            &lt;/staticText&gt;
        &lt;/band&gt;
    &lt;/columnHeader&gt;
    &lt;detail&gt;
        &lt;band height=""20""&gt;
            &lt;textField pattern=""###0.00""&gt;
                &lt;reportElement x=""100"" y=""0"" width=""100"" height=""20"" uuid=""8d365885-a6f8-40be-8ad0-012e45a37543""/&gt;
                &lt;box topPadding=""2"" leftPadding=""2"" bottomPadding=""2"" rightPadding=""2""&gt;
                    &lt;pen lineWidth=""0.5""/&gt;
                    &lt;topPen lineWidth=""0.5""/&gt;
                    &lt;leftPen lineWidth=""0.5""/&gt;
                    &lt;bottomPen lineWidth=""0.5""/&gt;
                    &lt;rightPen lineWidth=""0.5""/&gt;
                &lt;/box&gt;
                &lt;textElement textAlignment=""Right"" verticalAlignment=""Middle""/&gt;
                &lt;textFieldExpression&gt;&lt;![CDATA[$F{X}]]&gt;&lt;/textFieldExpression&gt;
            &lt;/textField&gt;
            &lt;textField&gt;
                &lt;reportElement x=""0"" y=""0"" width=""100"" height=""20"" uuid=""f08b3a38-8130-4609-b70d-b10b9d8d648b""/&gt;
                &lt;box topPadding=""2"" leftPadding=""2"" bottomPadding=""2"" rightPadding=""2""&gt;
                    &lt;pen lineWidth=""0.5""/&gt;
                    &lt;topPen lineWidth=""0.5""/&gt;
                    &lt;leftPen lineWidth=""0.5""/&gt;
                    &lt;bottomPen lineWidth=""0.5""/&gt;
                    &lt;rightPen lineWidth=""0.5""/&gt;
                &lt;/box&gt;
                &lt;textElement verticalAlignment=""Middle""/&gt;
                &lt;textFieldExpression&gt;&lt;![CDATA[$F{Series}]]&gt;&lt;/textFieldExpression&gt;
            &lt;/textField&gt;
            &lt;textField pattern=""###0.00""&gt;
                &lt;reportElement x=""200"" y=""0"" width=""100"" height=""20"" uuid=""83638866-5bd1-4ee4-ac1a-455c406f3621""/&gt;
                &lt;box topPadding=""2"" leftPadding=""2"" bottomPadding=""2"" rightPadding=""2""&gt;
                    &lt;pen lineWidth=""0.5""/&gt;
                    &lt;topPen lineWidth=""0.5""/&gt;
                    &lt;leftPen lineWidth=""0.5""/&gt;
                    &lt;bottomPen lineWidth=""0.5""/&gt;
                    &lt;rightPen lineWidth=""0.5""/&gt;
                &lt;/box&gt;
                &lt;textElement textAlignment=""Right"" verticalAlignment=""Middle""/&gt;
                &lt;textFieldExpression&gt;&lt;![CDATA[$F{Y}]]&gt;&lt;/textFieldExpression&gt;
            &lt;/textField&gt;
        &lt;/band&gt;
    &lt;/detail&gt;
    &lt;summary&gt;
        &lt;band height=""257"" splitType=""Stretch""&gt;
            &lt;scatterChart&gt;
                &lt;chart&gt;
                    &lt;reportElement x=""4"" y=""16"" width=""280"" height=""237"" uuid=""b9968e83-13aa-48fc-acf5-3d646f45f28d""/&gt;
                    &lt;chartTitle/&gt;
                    &lt;chartSubtitle/&gt;
                    &lt;chartLegend/&gt;
                &lt;/chart&gt;
                &lt;xyDataset&gt;
                    &lt;xySeries&gt;
                        &lt;seriesExpression&gt;&lt;![CDATA[$F{Series}]]&gt;&lt;/seriesExpression&gt;
                        &lt;xValueExpression&gt;&lt;![CDATA[$F{X}]]&gt;&lt;/xValueExpression&gt;
                        &lt;yValueExpression&gt;&lt;![CDATA[$F{Y}]]&gt;&lt;/yValueExpression&gt;
                    &lt;/xySeries&gt;
                &lt;/xyDataset&gt;
                &lt;scatterPlot isShowLines=""false"" isShowShapes=""true""&gt;
                    &lt;plot/&gt;
                    &lt;xAxisFormat&gt;
                        &lt;axisFormat/&gt;
                    &lt;/xAxisFormat&gt;
                    &lt;yAxisFormat&gt;
                        &lt;axisFormat/&gt;
                    &lt;/yAxisFormat&gt;
                &lt;/scatterPlot&gt;
            &lt;/scatterChart&gt;
        &lt;/band&gt;
    &lt;/summary&gt;
&lt;/jasperReport&gt;
</code></pre>

<p><strong>csv data example</strong></p>

<pre><code>+--------+-----+-----+
| Series |  X  |  Y  |
+--------+-----+-----+
| A      | 1.2 | 0.3 |
| A      | 0.5 | 0.2 |
| B      | 0.7 | 0.6 |
| B      | 0.1 | 0.5 |
+--------+-----+-----+
</code></pre>

<p><strong>Result</strong></p>

<p><a href=""https://i.stack.imgur.com/khcrj.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/khcrj.png"" alt=""outcome""></a></p>

<p>To configure your chart use the properties settings on chart, if you need special configuration that you can not achieve with the properties you can implement a <a href=""http://jasperreports.sourceforge.net/api/net/sf/jasperreports/engine/JRAbstractChartCustomizer.html"" rel=""nofollow noreferrer"">ChartCustomizer</a></p>

<p>see this for example</p>

<p><a href=""https://stackoverflow.com/questions/35649022/how-to-put-benchmark-line-on-barchart/35649403#35649403"">How to put benchmark line on barchart?</a></p>"	 Your first problem is to pass a datasource to the chart, if you are using main datasource, you need to put the chart in the band, since your datasource is not ready in band and is iterating on band, hence it will not work correctly (note: if you use your datasource also in detail band it need to be a JRRewindableDataSource ). If you need to use it in other bands then band I suggest you make a subreport and included this in desired band passing chart datasource or the connection to the subreport. The scatter plot is achieved using a and the , to set series and x,y data you use the tag In iReport, Right click chart, select Chart Data , select tab Details and add XY series If you have only 1 series you can pass a dummy variable in Full jrxml example csv data example Result To configure your chart use the properties settings on chart, if you need special configuration that you can not achieve with the properties you can implement a ChartCustomizer see this for example How to put benchmark line on barchart?
When should I use a scatter plot?	0.999997	56190049	How to color the point of a scatter plot separately?	pythonmatplotlibplot3d	56191078.0	"<p>I have three differences from what you have done</p>

<ol>
<li>the function is simpler, so that we can check visually the correctness of the scatter plot</li>
<li>I have used <code>ax.scatter3D</code> in place of <code>ax.scatter</code></li>
<li>the 3D matrix with the function values has to be flattened *<code>t.flatten()</code>)</li>
</ol>

<p>and here the code and the plot</p>

<pre><code>In [31]: from mpl_toolkits.mplot3d import Axes3D 
    ...: import matplotlib.pyplot as plt 
    ...: from matplotlib import cm 
    ...: from matplotlib.ticker import LinearLocator, FormatStrFormatter 
    ...: import numpy as np 
    ...: import math as mt 
    ...:  
    ...: fig = plt.figure() 
    ...: ax = fig.gca(projection='3d') 
    ...:  
    ...: # Make data. 
    ...: X = np.linspace(-5, 5, 6) 
    ...: Y = np.linspace(-5, 5, 6) 
    ...: Z = np.linspace(-5, 5, 6) 
    ...: X, Y, Z = np.meshgrid(X, Y, Z) 
    ...: # Plot the surface. 
    ...: t = Z 
    ...: ax.scatter3D(X, Y, Z, c=t.flatten())        
</code></pre>

<p><a href=""https://i.stack.imgur.com/IS5et.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/IS5et.png"" alt=""scatter plot""></a></p>

<p>Note that, to put in evidence the layers, I have rotated the default view and also that Matplotlib draws the points using a sort of <a href=""https://en.wikipedia.org/wiki/Aerial_perspective"" rel=""nofollow noreferrer"">aerial perspective</a>.</p>"	 I have three differences from what you have done the function is simpler, so that we can check visually the correctness of the scatter plot I have used in place of the 3D matrix with the function values has to be flattened * ) and here the code and the plot Note that, to put in evidence the layers, I have rotated the default view and also that Matplotlib draws the points using a sort of aerial perspective .
When should I use a scatter plot?	0.9999969	35063104	pandas scatterplots: how to plot data on a secondary y axis?	pythonpandasmatplotlib	35064477.0	"<p>This seems to be an issue (bug?) with the Pandas code. It has been reported in their GitHub page <a href=""https://github.com/pydata/pandas/issues/9909"" rel=""nofollow"">here</a>. From the explanation they give there, what is happening is that the <code>secondary_y</code> keyword only works for line plots, and not for scatter plots as you are trying here.</p>

<p>The workaround suggested in the link is to use a line plot, but changing the style to dots (not sure if that is enough for your needs). In your case, this would be something like:</p>

<pre><code>ax=df.plot(kind='line', x='vf', y='hf_ratio', xlim=[2e-06,6e-06],
    ylim=[1,10], color='DarkBlue', style='.', markersize=5, label='a')

df.plot(kind='line', x='vf', y='hfall', secondary_y=True,
    color='Red', style='.', markersize=5, label='hfall', ax=ax);
</code></pre>"	 This seems to be an issue (bug?) with the Pandas code. It has been reported in their GitHub page here . From the explanation they give there, what is happening is that the keyword only works for line plots, and not for scatter plots as you are trying here. The workaround suggested in the link is to use a line plot, but changing the style to dots (not sure if that is enough for your needs). In your case, this would be something like:
Data visualization tips	0.9999968	44294541	Why do i get HTTP400 error when i am plotting graphs in python?	pythonmatplotlibseaborn	44294713.0	"<p><code>sns.load_dataset</code> requires a string as argument which evaluates to one of the available datasets at <a href=""https://github.com/mwaskom/seaborn-data"" rel=""nofollow noreferrer""><code>https://github.com/mwaskom/seaborn-data</code></a>. </p>

<p>E.g. <code>sns.load_dataset(""tips"")</code> would load the <em>tips.csv</em> file.</p>

<p>Also see <a href=""https://stackoverflow.com/questions/30336324/seaborn-load-dataset"">Seaborn load_dataset</a></p>

<p>Supplying some other data or a string which does not have its corresponding file will of course not work.</p>"	 requires a string as argument which evaluates to one of the available datasets at . E.g. would load the tips.csv file. Also see Seaborn load_dataset Supplying some other data or a string which does not have its corresponding file will of course not work.
Data visualization tips	0.9999958	7688275	save yaxis legends as a separate grob?	rggplot2	15642634.0	"<p>This question has been sitting long enough, that it is time to document an answer for posterity.</p>

<p>The short answer is that highly-customized data visualizations cannot be done using function wrappers from the 'lattice' and 'ggplot2' packages.  The purpose of a function wrapper is to take some of the decisions out of your hands, so you will always be limited to the decisions originally envisioned by the function coder.  I highly recommend everyone learn the 'lattice' or 'ggplot2' packages, but these packages are more useful for data exploration than for being creative with data visualizations.</p>

<p><strong>This answer is for those who want to create a customized visual.</strong>  The following process may take half a day, but that is significantly less time than it would take to hack the 'lattice' or 'ggplot2' packages into the shape you want.  This isn't a criticism of either of those packages; it's just a byproduct of their purpose.  When you need a creative visual for a publication or client, 4 or 5 hours of your day is nothing compared to the payoff.</p>

<p>The work to make a customized visual is pretty simple with the 'grid' package, but that doesn't mean the math behind it is always simple.  Most of the work in this example is actually the math and not the graphic.</p>

<p><strong>Preface</strong>: There are some things you should know before you being working with the base 'grid' package for your visuals.  The first is that 'grid' works off the idea of viewports.  These are plotting spaces that allow you to reference from within that space, ignoring the rest of the graphic.  This is important, because it allows you to make graphics without having to scale your work into fractions of the entire space.  It's a lot like the layout options in the base plotting functions, except that they can overlap, be rotated, and made transparent.</p>

<p>Units are another thing to know.  The viewports each have a variety of units that you can use to indicate positions and sizes.  You can see the whole list in the 'grid' documentation, but there are only a few that I use very often: npc, native, strwidth, and lines.  Npc units start at (0,0) in the bottom left and go to c(1,1) in the upper right.  Native units use an 'xscale' and 'yscale' to create what is essentially a plotting space for data.  Strwidth units tell you how wide a certain string of text would be once printed on the graphic.  Lines units tell you how tall a line of text would be once printed on the graphic.  Since multiple types of units are always available, you should get in the habit of always either explicitly defining a number with a 'unit' function or specifying the 'default.units' argument from within your drawing functions.</p>

<p>Finally, you have the ability to specify justifications for all your objects' locations.  This is HUGE.  It means you can specify the location of a shape and then say how you want that shape horizontally and vertically justified (center, left, right, bottom, top).  You can line up things perfectly this way by referencing the location of other objects.</p>

<hr>

<p><strong>This is what we are making</strong>:  This isn't a perfect graphic, since I'm having to guess what the OP wants, but it is enough to get us on our way to a perfect graphic.</p>

<p><img src=""https://i.stack.imgur.com/Op7l1.png"" alt=""demo graph""></p>

<hr>

<p><strong>Step 1</strong>: Load up some libraries to work with.  When you want to do highly-customized visuals, use the 'grid' package.  It's the base set of functions that wrappers like 'lattice' and 'ggplot2' are calling.  When you want to work with dates, use the 'lubridate' package, because IT MAKES YOUR LIFE BETTER.  This last one is a personal preference: when I'm going to doing any sort of data summary work, I like to use the 'plyr' package.  It allows me to quickly shape my data into aggregate forms.</p>

<pre><code>library(grid)
library(lubridate)
library(plyr)
</code></pre>

<p><strong>Sample data generation</strong>: This isn't necessary if you already have your data, but for this example, I'm creating a set of sample data.  You can play around with it by changing the user settings for the data generation.  The script is flexible and will adapt to the data generated.  Feel free to add more websites and play around with the lambda values.</p>

<pre><code>    set.seed(1)

#############################################
# User settings for the data generation.    #
#############################################

# Set number of hours to generate data for.
time_Periods &lt;- 100

# Set starting datetime in m/d/yyyy hh:mm format.
start_Datetime &lt;- ""2/24/2013 00:00""

# Specify a list of websites along with a
# Poisson lambda to represent the average
# number of hits in a given time period.
df_Websites &lt;- read.table(text=""
url lambda
http://www.asitenoonereallyvisits.com 1
http://www.asitesomepeoplevisit.com 10
http://www.asitesomemorepeoplevisit.com 20
http://www.asiteevenmorepeoplevisit.com 40
http://www.asiteeveryonevisits.com 80
"", header=TRUE, sep="" "")

#############################################
# Generate the data.                        #
#############################################

# Initialize lists to hold hit data and
# website names.
hits &lt;- list()
websites &lt;- list()

# For each time period and for each website,
# flip a coin to see if any visitors come.  If
# visitors come, use a Poisson distribution to
# see how many come.
# Also initialize the list of website names.
for (i in 1:nrow(df_Websites)){
    hits[[i]] &lt;- rbinom(time_Periods, 1, 0.5) * rpois(time_Periods, df_Websites$lambda[i])
    websites[[i]] &lt;- rep(df_Websites$url[i], time_Periods)
}

# Initialize list of time periods.
datetimes &lt;- mdy_hm(start_Datetime) + hours(1:time_Periods)

# Tie the data into a data frame and erase rows with no hits.
# This is what the real data is more likely to look like
# after import and cleaning.
df_Hits &lt;- data.frame(datetime=rep(datetimes, nrow(df_Websites)), hits=unlist(hits), website=unlist(websites))
df_Hits &lt;- df_Hits[df_Hits$hits &gt; 0,]

# Clean up data-generation variables.
rm(list=ls()[ls()!=""df_Hits""])
</code></pre>

<p><strong>Step 2</strong>: Now, we need to decide how we want our graphic to work.  It's useful to separate things like sizes and colors into a different section of your code, so you can quickly make changes.  Here, I've chosen some basic settings that should produce a decent graphic.  You'll notice that a few of the size settings are using the 'unit' function.  This is one of the amazing things about the 'grid' package.  You can use various units to describe space on your graphic.  For instance, <code>unit(1, ""lines"")</code> is the height of one line of text.  This makes laying out a graphic significantly easier.</p>

<pre><code>#############################################
# User settings for the graphic.            #
#############################################

# Specify the window width and height and
# pixels per inch.
device_Width=12
device_Height=4.5
pixels_Per_Inch &lt;- 100

# Specify the bin width (in hours) of the
# upper histogram.
bin_Width &lt;- 2

# Specify a padding size for separating text
# from other plot elements.
padding &lt;- unit(1, ""strwidth"", ""W"")

# Specify the bin cut-off values for the hit
# counts and the corresponding colors.  The
# cutoff should be the maximum value to be
# contained in the bin.
bin_Settings &lt;- read.table(text=""
cutoff color
10 'darkblue'
20 'deepskyblue'
40 'purple'
80 'magenta'
160 'red'
"", header=TRUE, sep="" "")

# Specify the size of the histogram plots 
# in 'grid' units.  Override only if necessary.
# histogram_Size &lt;- unit(6, ""lines"")
histogram_Size &lt;- unit(nrow(bin_Settings) + 1, ""lines"")

# Set the background color for distinguishing
# between rows of data.
row_Background &lt;- ""gray90""

# Set the color for the date lines.
date_Color &lt;- ""gray40""

# Set the color for marker lines on histograms.
marker_Color &lt;- ""gray80""

# Set the fontsize for labels.
label_Size &lt;- 10
</code></pre>

<p><strong>Step 3</strong>: It's time to make the graphic.  I have limited space for explanations in an SO answer, so I will summarize and then leave the code comments to explain the details.  In a nutshell, I'm calculating how big everything will be and then making the plots one at a time.  For each plot, I format my data first, so I can specify the viewport appropriately.  Then I lay down labels that need to be behind the data, and then I plot the data.  At the end, I ""pop"" the viewport to finalize it.</p>

<pre><code>    #############################################
# Make the graphic.                         #
#############################################

# Make sure bin cutoffs are in increasing order.
# This way, we can make assumptions later.
bin_Settings &lt;- bin_Settings[order(bin_Settings$cutoff),]

# Initialize plot window.
# Make sure you always specify the pixels per
# inch, so you have an appropriately scaled
# graphic for output.
windows(
    width=device_Width,
    height=device_Height,
    xpinch=pixels_Per_Inch,
    ypinch=pixels_Per_Inch)
grid.newpage()

# Push an initial viewport, so we can set the
# font size to use in calculating label widths.
pushViewport(viewport(gp=gpar(fontsize=label_Size)))

# Find the list of websites in the data.
unique_Urls &lt;- as.character(unique(df_Hits$website))

# Calculate the width of the website
# urls once printed on the screen.
label_Width &lt;- list()
for (i in 1:length(unique_Urls)){
    label_Width[[i]] &lt;- convertWidth(unit(1, ""strwidth"", unique_Urls[i]), ""npc"")
}
# Use the maximum url width plus two padding.
x_Label_Margin &lt;- unit(max(unlist(label_Width)), ""npc"") + padding * 2

# Calculate a height for the date labels plus two padding.
y_Label_Margin &lt;- unit(1, ""strwidth"", ""99/99/9999"") + padding * 2

# Calculate size of main plot after making
# room for histogram and label margins.
main_Width &lt;- unit(1, ""npc"") - histogram_Size - x_Label_Margin
main_Height &lt;- unit(1, ""npc"") - histogram_Size - y_Label_Margin

# Calculate x values, using the minimum datetime
# as zero, and counting the hours between each
# datetime and the minimum.
x_Values &lt;- as.integer((df_Hits$datetime - min(df_Hits$datetime)))/60^2

# Initialize main plotting area
pushViewport(viewport(
    x=x_Label_Margin,
    y=y_Label_Margin,
    width=main_Width,
    height=main_Height,
    xscale=c(-1, max(x_Values) + 1),
    yscale=c(0, length(unique_Urls) + 1),
    just=c(""left"", ""bottom""),
    gp=gpar(fontsize=label_Size)))

# Put grey background behind every other website
# to make data easier to read, and write urls as
# y-labels.
for (i in 1:length(unique_Urls)){
    if (i%%2==0){
        grid.rect(
            x=unit(-1, ""npc""),
            y=i,
            width=unit(2, ""npc""),
            height=1,
            default.units=""native"",
            just=c(""left"", ""center""),
            gp=gpar(col=row_Background, fill=row_Background))
    }

    grid.text(
        unique_Urls[i],
        x=unit(0, ""npc"") - padding,
        y=i,
        default.units=""native"",
        just=c(""right"", ""center""))
}

# Find the hour offset of the minimum date value.
time_Offset &lt;- as.integer(format(min(df_Hits$datetime), ""%H""))

# Find the dates in the data.
x_Labels &lt;- unique(format(df_Hits$datetime, ""%m/%d/%Y""))

# Find where the days begin in the data.
midnight_Locations &lt;- (0:max(x_Values))[(0:max(x_Values)+time_Offset)%%24==0]

# Write the appropriate date labels on the x-axis
# where the days begin.
grid.text(
    x_Labels,
    x=midnight_Locations,
    y=unit(0, ""npc"") - padding,
    default.units=""native"",
    just=c(""right"", ""center""),
    rot=90)

# Draw lines to vertically mark when days begin.
grid.polyline(
    x=c(midnight_Locations, midnight_Locations),
    y=unit(c(rep(0, length(midnight_Locations)), rep(1, length(midnight_Locations))), ""npc""),
    default.units=""native"",
    id=rep(midnight_Locations, 2),
    gp=gpar(lty=2, col=date_Color))

# Initialize bin assignment variable.
bin_Assignment &lt;- 1

# Calculate which bin each hit value belongs in.
for (i in 1:nrow(bin_Settings)){
    bin_Assignment &lt;- bin_Assignment + ifelse(df_Hits$hits&gt;bin_Settings$cutoff[i], 1, 0)
}

# Draw points, coloring according to the bin settings.
grid.points(
    x=x_Values,
    y=match(df_Hits$website, unique_Urls),
    pch=19,
    size=unit(1, ""native""),
    gp=gpar(col=as.character(bin_Settings$color[bin_Assignment]), alpha=0.5))

# Finalize the main plotting area.
popViewport()

# Create the bins for the upper histogram.
bins &lt;- ddply(
    data.frame(df_Hits, bin_Assignment, mid=floor(x_Values/bin_Width)*bin_Width+bin_Width/2),
    .(bin_Assignment, mid),
    summarize,
    freq=length(hits))

# Initialize upper histogram area
pushViewport(viewport(
    x=x_Label_Margin,
    y=y_Label_Margin + main_Height,
    width=main_Width,
    height=histogram_Size,
    xscale=c(-1, max(x_Values) + 1),
    yscale=c(0, max(bins$freq) * 1.05),
    just=c(""left"", ""bottom""),
    gp=gpar(fontsize=label_Size)))


# Calculate where to put four value markers.
marker_Interval &lt;- floor(max(bins$freq)/4)
digits &lt;- nchar(marker_Interval)
marker_Interval &lt;- round(marker_Interval, -digits+1)

# Draw horizontal lines to mark values.
grid.polyline(
    x=unit(c(rep(0,4), rep(1,4)), ""npc""),
    y=c(1:4 * marker_Interval, 1:4 * marker_Interval),
    default.units=""native"",
    id=rep(1:4, 2),
    gp=gpar(lty=2, col=marker_Color))

# Write value labels for each marker.
grid.text(
    1:4 * marker_Interval,
    x=unit(0, ""npc"") - padding,
    y=1:4 * marker_Interval,
    default.units=""native"",
    just=c(""right"", ""center""))

# Finalize upper histogram area, so we
# can turn it back on but with clipping.
popViewport()

# Initialize upper histogram area again,
# but with clipping turned on.
pushViewport(viewport(
    x=x_Label_Margin,
    y=y_Label_Margin + main_Height,
    width=main_Width,
    height=histogram_Size,
    xscale=c(-1, max(x_Values) + 1),
    yscale=c(0, max(bins$freq) * 1.05),
    just=c(""left"", ""bottom""),
    gp=gpar(fontsize=label_Size),
    clip=""on""))

# Draw bars for each bin.
for (i in 1:nrow(bin_Settings)){
    active_Bin &lt;- bins[bins$bin_Assignment==i,]
    if (nrow(active_Bin)&gt;0){
        for (j in 1:nrow(active_Bin)){
            grid.rect(
                x=active_Bin$mid[j],
                y=0,
                width=bin_Width,
                height=active_Bin$freq[j],
                default.units=""native"",
                just=c(""center"",""bottom""),
                gp=gpar(col=as.character(bin_Settings$color[i]), fill=as.character(bin_Settings$color[i]), alpha=1/nrow(bin_Settings)))
        }
    }
}

# Draw x-axis.
grid.lines(x=unit(c(0, 1), ""npc""), y=0, default.units=""native"")

# Finalize upper histogram area.
popViewport()

# Calculate the frequencies for each website and bin.
freq_Data &lt;- ddply(
    data.frame(df_Hits, bin_Assignment),
    .(website, bin_Assignment),
    summarize,
    freq=length(hits))

# Create the line data for the side histogram.
line_Data &lt;- matrix(0, nrow=length(unique_Urls)+2, ncol=nrow(bin_Settings))
for (i in 1:nrow(freq_Data)){
    line_Data[match(freq_Data$website[i], unique_Urls)+1,freq_Data$bin_Assignment[i]] &lt;- freq_Data$freq[i]
}


# Initialize side histogram area
pushViewport(viewport(
    x=x_Label_Margin + main_Width,
    y=y_Label_Margin,
    width=histogram_Size,
    height=main_Height,
    xscale=c(0, max(line_Data) * 1.05),
    yscale=c(0, length(unique_Urls) + 1),
    just=c(""left"", ""bottom""),
    gp=gpar(fontsize=label_Size)))

# Calculate where to put four value markers.
marker_Interval &lt;- floor(max(line_Data)/4)
digits &lt;- nchar(marker_Interval)
marker_Interval &lt;- round(marker_Interval, -digits+1)

# Draw vertical lines to mark values.
grid.polyline(
    x=c(1:4 * marker_Interval, 1:4 * marker_Interval),
    y=unit(c(rep(0,4), rep(1,4)), ""npc""),
    default.units=""native"",
    id=rep(1:4, 2),
    gp=gpar(lty=2, col=marker_Color))

# Write value labels for each marker.
grid.text(
    1:4 * marker_Interval,
    x=1:4 * marker_Interval,
    y=unit(0, ""npc"") - padding,
    default.units=""native"",
    just=c(""center"", ""top""))

# Draw lines for each bin setting.
grid.polyline(
    x=array(line_Data),
    y=rep(0:(length(unique_Urls)+1), nrow(bin_Settings)),
    default.units=""native"",
    id=array(t(matrix(1:nrow(bin_Settings), nrow=nrow(bin_Settings), ncol=length(unique_Urls)+2))),
    gp=gpar(col=as.character(bin_Settings$color)))

# Draw vertical line for the y-axis.
grid.lines(x=0, y=c(0, length(unique_Urls)+1), default.units=""native"")

# Finalize side histogram area.
popViewport()

# Draw legend.
# Draw box behind legend headers.
grid.rect(
    x=0,
    y=1,
    width=unit(1, ""strwidth"", names(bin_Settings)[1]) + unit(1, ""strwidth"", names(bin_Settings)[2]) + 3 * padding,
    height=unit(1, ""lines""),
    default.units=""npc"",
    just=c(""left"",""top""),
    gp=gpar(col=row_Background, fill=row_Background))

# Draw legend headers from bin_Settings variable.
grid.text(
    names(bin_Settings)[1],
    x=padding,
    y=1,
    default.units=""npc"",
    just=c(""left"",""top""))

grid.text(
    names(bin_Settings)[2],
    x=unit(1, ""strwidth"", names(bin_Settings)[1]) + 2 * padding,
    y=1,
    default.units=""npc"",
    just=c(""left"",""top""))

# For each row in the bin_Settings variable,
# write the cutoff values and the color associated.
# Write the color name in the color it specifies.
for (i in 1:nrow(bin_Settings)){
    grid.text(
        bin_Settings$cutoff[i],
        x=unit(1, ""strwidth"", names(bin_Settings)[1]) + padding,
        y=unit(1, ""npc"") - i * unit(1, ""lines""),
        default.units=""npc"",
        just=c(""right"",""top""))

    grid.text(
        bin_Settings$color[i],
        x=unit(1, ""strwidth"", names(bin_Settings)[1]) + 2 * padding,
        y=unit(1, ""npc"") - i * unit(1, ""lines""),
        default.units=""npc"",
        just=c(""left"",""top""),
        gp=gpar(col=as.character(bin_Settings$color[i])))
}
</code></pre>"	" This question has been sitting long enough, that it is time to document an answer for posterity. The short answer is that highly-customized data visualizations cannot be done using function wrappers from the 'lattice' and 'ggplot2' packages.  The purpose of a function wrapper is to take some of the decisions out of your hands, so you will always be limited to the decisions originally envisioned by the function coder.  I highly recommend everyone learn the 'lattice' or 'ggplot2' packages, but these packages are more useful for data exploration than for being creative with data visualizations. This answer is for those who want to create a customized visual. The following process may take half a day, but that is significantly less time than it would take to hack the 'lattice' or 'ggplot2' packages into the shape you want.  This isn't a criticism of either of those packages; it's just a byproduct of their purpose.  When you need a creative visual for a publication or client, 4 or 5 hours of your day is nothing compared to the payoff. The work to make a customized visual is pretty simple with the 'grid' package, but that doesn't mean the math behind it is always simple.  Most of the work in this example is actually the math and not the graphic. Preface : There are some things you should know before you being working with the base 'grid' package for your visuals.  The first is that 'grid' works off the idea of viewports.  These are plotting spaces that allow you to reference from within that space, ignoring the rest of the graphic.  This is important, because it allows you to make graphics without having to scale your work into fractions of the entire space.  It's a lot like the layout options in the base plotting functions, except that they can overlap, be rotated, and made transparent. Units are another thing to know.  The viewports each have a variety of units that you can use to indicate positions and sizes.  You can see the whole list in the 'grid' documentation, but there are only a few that I use very often: npc, native, strwidth, and lines.  Npc units start at (0,0) in the bottom left and go to c(1,1) in the upper right.  Native units use an 'xscale' and 'yscale' to create what is essentially a plotting space for data.  Strwidth units tell you how wide a certain string of text would be once printed on the graphic.  Lines units tell you how tall a line of text would be once printed on the graphic.  Since multiple types of units are always available, you should get in the habit of always either explicitly defining a number with a 'unit' function or specifying the 'default.units' argument from within your drawing functions. Finally, you have the ability to specify justifications for all your objects' locations.  This is HUGE.  It means you can specify the location of a shape and then say how you want that shape horizontally and vertically justified (center, left, right, bottom, top).  You can line up things perfectly this way by referencing the location of other objects. This is what we are making :  This isn't a perfect graphic, since I'm having to guess what the OP wants, but it is enough to get us on our way to a perfect graphic. Step 1 : Load up some libraries to work with.  When you want to do highly-customized visuals, use the 'grid' package.  It's the base set of functions that wrappers like 'lattice' and 'ggplot2' are calling.  When you want to work with dates, use the 'lubridate' package, because IT MAKES YOUR LIFE BETTER.  This last one is a personal preference: when I'm going to doing any sort of data summary work, I like to use the 'plyr' package.  It allows me to quickly shape my data into aggregate forms. Sample data generation : This isn't necessary if you already have your data, but for this example, I'm creating a set of sample data.  You can play around with it by changing the user settings for the data generation.  The script is flexible and will adapt to the data generated.  Feel free to add more websites and play around with the lambda values. Step 2 : Now, we need to decide how we want our graphic to work.  It's useful to separate things like sizes and colors into a different section of your code, so you can quickly make changes.  Here, I've chosen some basic settings that should produce a decent graphic.  You'll notice that a few of the size settings are using the 'unit' function.  This is one of the amazing things about the 'grid' package.  You can use various units to describe space on your graphic.  For instance, is the height of one line of text.  This makes laying out a graphic significantly easier. Step 3 : It's time to make the graphic.  I have limited space for explanations in an SO answer, so I will summarize and then leave the code comments to explain the details.  In a nutshell, I'm calculating how big everything will be and then making the plots one at a time.  For each plot, I format my data first, so I can specify the viewport appropriately.  Then I lay down labels that need to be behind the data, and then I plot the data.  At the end, I ""pop"" the viewport to finalize it."
Data visualization tips	0.9999957	13204836	Graphviz: how to insert two new linked nodes and minimize edge crossings?	pythongraph-theorygraphvizpygraphviz	14332805.0	"<p>I think you mingle two different tasks here: the one is <strong>Analysis</strong> of a graph, the other one is <strong>Visualization</strong> of the same.</p>

<p>Graphviz, as the name suggests, is a tool for visualization of graphs. Visualization can take many forms, typically one tries to ""make it look good"" by having those nodes close to each other that are connected, thus reducing the <em>visual</em> edge lengths. One can utilize some spring- or gravitational model to calculate optimal positions for all nodes. Other options include circular- or shell-layouts.</p>

<p>A certain visualization should not be the basis for the analysis of a graph. Graph properties, like average shortest path length or clustering coefficient, are independent of any visualization.</p>

<p>You say you want to ""minimize the number of edge crossings"". The number of edge crossings is a property of your visualization, not of your graph! It probably changes each time you let graphviz calculate the layout, even if the graph is unchanged. Who says that 2d is the only possible representation of your graph? Add just one dimension, and you won't have any edge crossing.</p>

<p>I'd recommend to concentrate on graph analysis. I don't know if you're aware of <a href=""http://networkx.github.com/"" rel=""nofollow"">NetworkX</a>. They have dozens of <a href=""http://networkx.github.com/documentation/latest/reference/algorithms.html"" rel=""nofollow"">Algorithms</a> to analyze your graph. Maybe the  <em>clustering</em> and <em>clique</em> sections are of interest to you.</p>"	" I think you mingle two different tasks here: the one is Analysis of a graph, the other one is Visualization of the same. Graphviz, as the name suggests, is a tool for visualization of graphs. Visualization can take many forms, typically one tries to ""make it look good"" by having those nodes close to each other that are connected, thus reducing the visual edge lengths. One can utilize some spring- or gravitational model to calculate optimal positions for all nodes. Other options include circular- or shell-layouts. A certain visualization should not be the basis for the analysis of a graph. Graph properties, like average shortest path length or clustering coefficient, are independent of any visualization. You say you want to ""minimize the number of edge crossings"". The number of edge crossings is a property of your visualization, not of your graph! It probably changes each time you let graphviz calculate the layout, even if the graph is unchanged. Who says that 2d is the only possible representation of your graph? Add just one dimension, and you won't have any edge crossing. I'd recommend to concentrate on graph analysis. I don't know if you're aware of NetworkX . They have dozens of Algorithms to analyze your graph. Maybe the clustering and clique sections are of interest to you."
Data visualization tips	0.9999957	35099455	Only plot part of a 3d figure using matplotlib	pythonmatplotlibplot	35101731.0	"<p>Nice conical intersections you have there:)</p>

<p>What you're trying to do should be achieved by setting the <code>Z</code> data you want to ignore to <code>NaN</code>. Using graphene's tight binding band structure as an example:</p>

<pre><code>import numpy as np
import matplotlib.pyplot as plt
from mpl_toolkits.mplot3d import Axes3D

# generate dummy data (graphene tight binding band structure)
kvec = np.linspace(-np.pi,np.pi,101)
kx,ky = np.meshgrid(kvec,kvec)
E = np.sqrt(1+4*np.cos(3*kx/2)*np.cos(np.sqrt(3)/2*ky) + 4*np.cos(np.sqrt(3)/2*ky)**2)

# plot full dataset
fig = plt.figure()
ax = fig.add_subplot(111, projection='3d')
ax.plot_surface(kx,ky,E,cmap='viridis',vmin=-E.max(),vmax=E.max(),rstride=1,cstride=1)
ax.plot_surface(kx,ky,-E,cmap='viridis',vmin=-E.max(),vmax=E.max(),rstride=1,cstride=1)



# focus on Dirac cones
Elim = 1  #threshold
E[E&gt;Elim] = np.nan

fig = plt.figure()
ax = fig.add_subplot(111, projection='3d')
#ax.plot_surface(kx2,ky2,E2,cmap='viridis',vmin=-Elim,vmax=Elim)
#ax.plot_surface(kx2,ky2,-E2,cmap='viridis',vmin=-Elim,vmax=Elim)
ax.plot_surface(kx,ky,E,cmap='viridis',rstride=1,cstride=1,vmin=-Elim,vmax=Elim)
ax.plot_surface(kx,ky,-E,cmap='viridis',rstride=1,cstride=1,vmin=-Elim,vmax=Elim)

plt.show()
</code></pre>

<p>The results look like this:</p>

<p><a href=""https://i.stack.imgur.com/mpfJh.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/mpfJhm.png"" alt=""graphene full band structure""></a><a href=""https://i.stack.imgur.com/PyYUi.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/PyYUim.png"" alt=""graphene Dirac cones""></a></p>

<p>Unfortunately, there are problems with the rendering of the second case: the apparent depth order of the data is messed up in the latter case: cones in the background are rendered in front of the front ones (this is much clearer in an interactive plot). The problem is that there are more holes than actual data, and the data is not connected, which confuses the renderer of <code>plot_surface</code>. Matplotlib has a 2d renderer, so 3d visualization is a bit of a hack. This means that for complex overlapping surfaces you'll more often than not get rendering artifacts (in particular, two simply connected surfaces are either fully behind or fully in front of one another).</p>

<p>We can get around the rendering bug by doing a bit more work: keeping the data in a single surface by <em>not</em> using <code>nan</code>s, but instead colouring the the surface to be invisible where it doesn't interest us. Since the surface we're plotting now includes the entire original surface, we have to set the <code>zlim</code> manually in order to focus on our region of interest. For the above example:</p>

<pre class=""lang-py prettyprint-override""><code>from matplotlib.cm import get_cmap

# create a color mapping manually
Elim = 1  #threshold
cmap = get_cmap('viridis')
colors_top = cmap((E + Elim)/2/Elim) # listed colormap that maps E from [-Elim, Elim] to [0.0, 1.0] for color mapping
colors_bott = cmap((-E + Elim)/2/Elim) # same for -E branch
colors_top[E &gt; Elim, -1] = 0 # set outlying faces to be invisible (100% transparent)
colors_bott[-E &lt; -Elim, -1] = 0

# in nature you would instead have something like this:
#zmin,zmax = -1,1 # where to cut the _single_ input surface (x,y,z)
#cmap = get_cmap('viridis')
#colors = cmap((z - zmin)/(zmax - zmin))
#colors[(z &lt; zmin) | (z &gt; zmax), -1] = 0
# then plot_surface(x, y, z, facecolors=colors, ...)

# or for your specific case where you have X, Y, Z and C:
#colors = get_cmap('viridis')(C)
#colors[(z &lt; zmin) | (z &gt; zmax), -1] = 0
# then plot_surface(x, y, z, facecolors=colors, ...)

fig = plt.figure()
ax = fig.add_subplot(111, projection='3d')
# pass the mapped colours as the facecolors keyword arg
s1 = ax.plot_surface(kx, ky, E, facecolors=colors_top, rstride=1, cstride=1)
s2 = ax.plot_surface(kx, ky, -E, facecolors=colors_bott, rstride=1, cstride=1)
# but now we need to manually hide the invisible part of the surface:
ax.set_zlim(-Elim, Elim)

plt.show()
</code></pre>

<p>Here's the output:
<a href=""https://i.stack.imgur.com/WcS3n.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/WcS3n.png"" alt=""updated version, no rendering artifact""></a></p>

<p>Note that it looks a bit different from the earlier figures because 3 years have passed in between and the current version of matplotlib (3.0.2) has very different (and much prettier) default styles. In particular, edges are now transparent in surface plots. But the main point is that the rendering bug is gone, which is evident if you start rotating the surface around in an interactive plot.</p>"	 Nice conical intersections you have there:) What you're trying to do should be achieved by setting the data you want to ignore to . Using graphene's tight binding band structure as an example: The results look like this: Unfortunately, there are problems with the rendering of the second case: the apparent depth order of the data is messed up in the latter case: cones in the background are rendered in front of the front ones (this is much clearer in an interactive plot). The problem is that there are more holes than actual data, and the data is not connected, which confuses the renderer of . Matplotlib has a 2d renderer, so 3d visualization is a bit of a hack. This means that for complex overlapping surfaces you'll more often than not get rendering artifacts (in particular, two simply connected surfaces are either fully behind or fully in front of one another). We can get around the rendering bug by doing a bit more work: keeping the data in a single surface by not using s, but instead colouring the the surface to be invisible where it doesn't interest us. Since the surface we're plotting now includes the entire original surface, we have to set the manually in order to focus on our region of interest. For the above example: Here's the output: Note that it looks a bit different from the earlier figures because 3 years have passed in between and the current version of matplotlib (3.0.2) has very different (and much prettier) default styles. In particular, edges are now transparent in surface plots. But the main point is that the rendering bug is gone, which is evident if you start rotating the surface around in an interactive plot.
Data visualization tips	0.99999547	36205526	Tooltip bug with dynamic google charts	javascriptsvgdynamicchartstimeline	36206232.0	"<p>So I found the solution , </p>

<pre><code>container = document.getElementById('' + youridentifier + '');
chart = new google.visualization.Timeline(container);
chart.draw(dataSet, options);
</code></pre>

<p>Every time you ""redraw"" the google chart you have to create a new visualization  object .</p>"	" So I found the solution , Every time you ""redraw"" the google chart you have to create a new visualization  object ."
How do I make a network diagram in d3?	0.9999969	36066080	Optimize pendulum animation (javascript)	javascriptanimationd3.jssvgplotly	36072487.0	"<p>I'm the author of <a href=""http://maurizzzio.github.io/function-plot/"" rel=""nofollow"">function plot</a> which is built on top of d3, luckily d3 has methods to perform mappings in <a href=""https://github.com/d3/d3-scale"" rel=""nofollow"">d3-scale</a> so assuming that you have a canvas of <code>width x height</code> dimensions which should be mapped linearly to the rectangle <code>[xMin, yMin] x [xMax, yMax]</code> in 2D euclidean space you'd need to create two linear scales</p>

<pre><code>var xScale = d3.scale.linear()
  .domain([xMin, xMax])
  .range([0, width])

var yScale = d3.scale.linear()
  .domain([yMin, yMax])
  .range([height, 0])
</code></pre>

<p>Note that in SVG the y axis is flipped and because of that the <code>yScale</code> range's flipped too, then any 2D euclidean point is transformed to SVG coordinates as follows</p>

<pre><code>var xCanvas = xScale(point.x)
var yCanvas = yScale(point.y)
</code></pre>

<p>The inverse transformation is given by</p>

<pre><code>var xLogical = xScale.invert(point.x)
var xLogical = yScale.invert(point.y)
</code></pre>

<p>A possible solution I wrote to your problem using the above is</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""false"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>var instance = functionPlot({
  target: '#demo',
  disableZoom: true,
  data: [{
    fn: 'sin(10*(-cos(x) + y^2/2-1))',
    fnType: 'implicit'
  }]
})
var xScale = instance.meta.xScale
var yScale = instance.meta.yScale
var canvas = instance.canvas

var circle = canvas.append('circle')
  .attr(""r"", 5)
  .style(""fill"", ""purple"")

var start = Date.now()

function animate() {
  
  // move the point along the circle of radius 1
  var t = (Date.now() - start) * 0.003
  var xLogical = Math.cos(t)
  var yLogical = Math.sin(t)
  var xCanvas = xScale(xLogical)
  var yCanvas = yScale(yLogical)
  circle
    .attr('cx', xCanvas)
    .attr('cy', yCanvas)
  
  requestAnimationFrame(animate)
}

animate()</code></pre>
<pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;script src=""https://cdnjs.cloudflare.com/ajax/libs/d3/3.4.11/d3.min.js""&gt;&lt;/script&gt;
&lt;script src=""https://maurizzzio.github.io/function-plot/js/function-plot.js""&gt;&lt;/script&gt;
&lt;div id=""demo""&gt;&lt;/div&gt;</code></pre>
</div>
</div>
</p>

<p><a href=""https://github.com/maurizzzio/function-plot/issues/59"" rel=""nofollow"">Issue in function plot's GitHub</a></p>"	 I'm the author of function plot which is built on top of d3, luckily d3 has methods to perform mappings in d3-scale so assuming that you have a canvas of dimensions which should be mapped linearly to the rectangle in 2D euclidean space you'd need to create two linear scales Note that in SVG the y axis is flipped and because of that the range's flipped too, then any 2D euclidean point is transformed to SVG coordinates as follows The inverse transformation is given by A possible solution I wrote to your problem using the above is Issue in function plot's GitHub
How do I make a network diagram in d3?	0.99999666	25674303	"Group values into an ""others bucket"""	excelcharts	33965985.0	"<p>Add a column that differentiates 'Active' from 'Non-active'. In the sample I had to create <em>overall</em> B and C were the most active so I populated D2 down with:  </p>

<pre><code>=IF(OR(B2=""B"",B2=""C""),""Active"",""Non-active"")  
</code></pre>

<p>Adjust the formula if that distinction is made on a month by month basis. Create a Stacked Column PivotChart and in the PivotTable move the 'Active' together as necessary. Select each of the <code>Non-active</code> series (here only two for illustration) in the chart and apply the same colour fill to all.  </p>

<p><a href=""https://i.stack.imgur.com/BnFvl.jpg"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/BnFvl.jpg"" alt=""SO25674303 example""></a></p>"	 Add a column that differentiates 'Active' from 'Non-active'. In the sample I had to create overall B and C were the most active so I populated D2 down with: Adjust the formula if that distinction is made on a month by month basis. Create a Stacked Column PivotChart and in the PivotTable move the 'Active' together as necessary. Select each of the series (here only two for illustration) in the chart and apply the same colour fill to all.
How do I make a network diagram in d3?	0.99999666	15141204	WPF C# DynamicDataDisplay - Changing the DateTimeAxis Color	c#wpfchartsdynamic-data-display	19841218.0	"<p>Curiously, I've happened to be trying to do the same thing.  It turns out those colours are hard-coded in <code>MayorDateTimeLabelProvider.cs</code> (I've noted the lines in comments below).  If you're using the compiled DLL then there is no way to change the values.  Personally, D3 is so immature that I keep my own build of it and make changes to extend it as needed (such as in this case!).  </p>

<pre><code>public override UIElement[] CreateLabels(ITicksInfo&lt;DateTime&gt; ticksInfo)
{
    object info = ticksInfo.Info;
    var ticks = ticksInfo.Ticks;
    UIElement[] res = new UIElement[ticks.Length - 1];
    int labelsNum = 3;

    if (info is DifferenceIn)
    {
        DifferenceIn diff = (DifferenceIn)info;
        DateFormat = GetDateFormat(diff);
    }
    else if (info is MayorLabelsInfo)
    {
        MayorLabelsInfo mInfo = (MayorLabelsInfo)info;
        DifferenceIn diff = (DifferenceIn)mInfo.Info;
        DateFormat = GetDateFormat(diff);
        labelsNum = mInfo.MayorLabelsCount + 1;

        //DebugVerify.Is(labelsNum &lt; 100);
    }

    DebugVerify.Is(ticks.Length &lt; 10);

    LabelTickInfo&lt;DateTime&gt; tickInfo = new LabelTickInfo&lt;DateTime&gt;();
    for (int i = 0; i &lt; ticks.Length - 1; i++)
    {
        tickInfo.Info = info;
        tickInfo.Tick = ticks[i];

        string tickText = GetString(tickInfo);

        Grid grid = new Grid
        {
            Background = Brushes.Beige // **** HARD CODED HERE
        };
        Rectangle rect = new Rectangle
        {
            Stroke = Brushes.Peru,     // **** AND HERE
            StrokeThickness = 2
        };
        Grid.SetColumn(rect, 0);
        Grid.SetColumnSpan(rect, labelsNum);

        for (int j = 0; j &lt; labelsNum; j++)
        {
            grid.ColumnDefinitions.Add(new ColumnDefinition());
        }

        grid.Children.Add(rect);

        for (int j = 0; j &lt; labelsNum; j++)
        {
            var tb = new TextBlock
            {
                Text = tickText,
                HorizontalAlignment = HorizontalAlignment.Center,
                Margin = new Thickness(0, 3, 0, 3)
            };
            Grid.SetColumn(tb, j);
            grid.Children.Add(tb);
        }

        ApplyCustomView(tickInfo, grid);

        res[i] = grid;
    }

    return res;
}
</code></pre>"	 Curiously, I've happened to be trying to do the same thing.  It turns out those colours are hard-coded in (I've noted the lines in comments below).  If you're using the compiled DLL then there is no way to change the values.  Personally, D3 is so immature that I keep my own build of it and make changes to extend it as needed (such as in this case!).
How do I make a network diagram in d3?	0.99999654	34930763	What is the logic behind d3.js nice() ticks	javascriptpythond3.jschartspycairo	34931208.0	"<p>D3 is open source, so you can <a href=""https://github.com/d3/d3-scale/blob/master/src/nice.js"" rel=""nofollow noreferrer"">look up the implementation</a>. It basically boils down to rounding the extreme values:</p>

<pre><code>domain[i0] = nice.floor(x0);
domain[i1] = nice.ceil(x1);
</code></pre>"	 D3 is open source, so you can look up the implementation . It basically boils down to rounding the extreme values:
How do I make a network diagram in d3?	0.99999654	50517322	D3 donut chart function only works the first time it's called	javascriptfunctiond3.jscharts	50519065.0	"<p>The problem is that each time the function is called, you append a new SVG element with this line:</p>

<pre><code>var donutChart = d3.select(id).append('svg')
</code></pre>

<p>as this selects the first element it finds with the ID and appends a new SVG element regardless.</p>

<p>Second problem occurs when you try to append arcs with this line</p>

<pre><code>var arc_g = d3.select('svg g').selectAll('arc')
</code></pre>

<p>as again, 'select' will just find the first match in the DOM, which is your original SVG > G element, and select the arcs it can find there</p>

<p>Thirdly, the <code>.selectAll('arc')</code> won't find anything, as the existing elements are either 'path' or have class 'slice', so you need the selectAll to match either of those.</p>

<p>To rectify the problems:</p>

<pre><code>//append the SVG on the first call, with a dummy data, and each subsequent call will use the existing element in the DOM
var donutChart = d3.select(id).selectAll('svg')
      .data([null])

donutChart = donutChart.enter().append('svg')
      .merge(donutChart)
      .attr('width', width)
      .attr('height', height)

var g = donutChart.append('g')
      .attr('transform', 'translate(' + (width - radius) + ',' + (height - radius) + ')');

    var pie = d3.pie()
      .sort(null)
      .value(function(piedata) { return piedata.value; });

//selectAll on class '.slice'
    var arc_g = g.selectAll('.slice')
        .data(pie(piedata))

//create new g and path elements on enter (ie if new), and then update d and color after a merge()
    arc_g = arc_g.enter()
        .append('g')
        .attr('class', 'slice')
        .append('path')
        .merge(arc_g)
        .attr(""d"",arc)
        .attr('fill', function(d, range) {
           return colors(range);
        })
</code></pre>

<p>For more info on merge, refer to: <a href=""https://github.com/d3/d3-selection#selection_merge"" rel=""nofollow noreferrer"">https://github.com/d3/d3-selection#selection_merge</a></p>"	 The problem is that each time the function is called, you append a new SVG element with this line: as this selects the first element it finds with the ID and appends a new SVG element regardless. Second problem occurs when you try to append arcs with this line as again, 'select' will just find the first match in the DOM, which is your original SVG > G element, and select the arcs it can find there Thirdly, the won't find anything, as the existing elements are either 'path' or have class 'slice', so you need the selectAll to match either of those. To rectify the problems: For more info on merge, refer to: https://github.com/d3/d3-selection#selection_merge
How do I plot 2 datasets?	0.9999968	56098735	I am not able to plot mean line over my bar graph which I made using unstack method	pandasmatplotlibplotbar-chartmean	56099015.0	"<p>So, I tried recreating what I think is your problem, using random data:</p>

<pre><code>import numpy as np
import pandas as pd
import matplotlib.pyplot as plt


np.random.seed(123)
df = pd.DataFrame(
    {
        'a':np.random.randint(0,10,100),
        'b':np.random.randint(0,10,100),
        'c':np.random.randint(0,10,100),}
)

df.groupby('a').sum().unstack().plot(kind='bar')
</code></pre>

<p><a href=""https://i.stack.imgur.com/5d8M6.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/5d8M6.png"" alt=""barplot""></a></p>

<p>I think your problem is, that this line:</p>

<pre><code>mean = df.groupby('a').sum().mean()
</code></pre>

<p>returns the mean for every group:</p>

<pre><code>b    48.7
c    42.1
dtype: float64
</code></pre>

<p>Then, you call</p>

<pre><code>plt.axhline(mean)
</code></pre>

<p>Which wants to plot exactly one line, but you give it several. You can do two things:</p>

<ol>
<li><p>either, plot the mean for every group:</p>

<pre><code>for m in mean:
    plt.axhline(m)
</code></pre></li>
<li><p>or, calculate the mean of the means, and plot that:</p>

<pre><code>plt.axhline(np.mean(mean))
</code></pre></li>
</ol>"	 So, I tried recreating what I think is your problem, using random data: I think your problem is, that this line: returns the mean for every group: Then, you call Which wants to plot exactly one line, but you give it several. You can do two things: either, plot the mean for every group: or, calculate the mean of the means, and plot that:
How do I plot 2 datasets?	0.9999968	37442101	"ggplot2: Add label on barplot if position = ""fill"""	rggplot2labelgeom-bar	37466261.0	"<p>To avoid creating the position values yourself, you can use <code>position = ""stack""</code> in <code>geom_text</code> as in <a href=""https://stackoverflow.com/questions/6644997/showing-data-values-on-stacked-bar-chart-in-ggplot2"">this question</a>.  As you noted in the comments, the dataset must be ordered by the <code>fill</code> variable to get the stacks in the correct order to match the bar stacks.</p>

<pre><code>ggplot(x0, aes(grp, weight = n)) +
    geom_bar(aes(fill = out), position = ""fill"") +
    facet_grid(.~treat) +
    scale_y_continuous(labels=percent) +
    geom_text(aes(label = p2, y=p), position = ""stack"")
</code></pre>

<p><a href=""https://i.stack.imgur.com/9EG0y.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/9EG0y.png"" alt=""enter image description here""></a></p>

<p>You may end up needing to remove the labels below a certain size to remove the overlap seen in the plot above.  Something like <code>geom_text(aes(label = ifelse(p &lt; .05, NA, p2), y = p), position = ""stack"")</code> would remove labels for the very small values.</p>"	 To avoid creating the position values yourself, you can use in as in this question .  As you noted in the comments, the dataset must be ordered by the variable to get the stacks in the correct order to match the bar stacks. You may end up needing to remove the labels below a certain size to remove the overlap seen in the plot above.  Something like would remove labels for the very small values.
How do I plot 2 datasets?	0.99999666	28811386	How to subset a longtable in R and create boxplots with ggplot	rplotggplot2subsetplyr	28811703.0	"<p>As you'd like to produce boxplots for each group and year in the same graph, I think your dataset is ready for that and you can do the following:</p>

<pre><code>p &lt;- ggplot(tmp.data, aes(factor(year), fill=group, value)) 
p + geom_boxplot()
</code></pre>

<p><img src=""https://i.stack.imgur.com/P0kvw.png"" alt=""enter image description here""></p>"	 As you'd like to produce boxplots for each group and year in the same graph, I think your dataset is ready for that and you can do the following:
How do I plot 2 datasets?	0.99999654	53510291	Matplotlib histogram bar width	pythonmatplotlib	53515919.0	<p>The bins are actually the same size (numeric value) for each set but your x axis is logarithmic so it looks like the <em>width</em> is different. Try to plot a single dataset in a linear x axis (not logarithmic) and you will see that the widths of the bars are the same.</p>	 The bins are actually the same size (numeric value) for each set but your x axis is logarithmic so it looks like the width is different. Try to plot a single dataset in a linear x axis (not logarithmic) and you will see that the widths of the bars are the same.
How do I plot 2 datasets?	0.99999654	51078151	ggplot2 - how to fill nested polygons with colour?	rggplot2nestedfillpolygons	51117013.0	"<p>If you do this with <code>sf</code>, you can use <code>st_area</code> to get the area of each polygon (area doesn't make a ton of sense with unprojected toy data, but will make sense with the actual shapes), then order polygons based on area. That way, <code>ggplot</code> will create polygons in order by ID. <strong>To use <code>geom_sf</code>, you need the <a href=""https://github.com/tidyverse/ggplot2"" rel=""nofollow noreferrer"">github dev version of <code>ggplot2</code></a></strong>, though it's being added to the next CRAN release, <a href=""https://www.tidyverse.org/articles/2018/05/ggplot2-2-3-0/"" rel=""nofollow noreferrer"">slated for next month (July 2018)</a>.</p>

<p>First create a simple features collection from the data. In this case, I had to use <code>summarise(do_union = F)</code> to make each series of points into a polygon in the proper order (<a href=""https://stackoverflow.com/q/50908771/5325862"">per this recent question</a>), then calculate the area of each.</p>



<pre class=""lang-r prettyprint-override""><code>library(tidyverse)
library(sf)
#&gt; Linking to GEOS 3.6.1, GDAL 2.1.3, proj.4 4.9.3

shape_df &lt;- data.frame(
  lon = c(0, 1, 1, 0, 0, 0, 1, 1, 0, 0, 1, 2, 2, 0.8, 1, 1, 2, 2, 1, 1),
  lat = c(0, 0, 1, 1.5, 0, 1, 1, 2, 2, 1, 1, 1, 2, 2, 1, 0, 0, 1, 1, 0),
  var = c(1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 3 ,3 ,3 ,3 ,3, 4 ,4 ,4, 4, 4)
)

shape_areas &lt;- shape_df %&gt;%
  st_as_sf(coords = c(""lon"", ""lat"")) %&gt;%
  group_by(var) %&gt;%
  summarise(do_union = F) %&gt;%
  st_cast(""POLYGON"") %&gt;%
  st_cast(""MULTIPOLYGON"") %&gt;%
  mutate(area = st_area(geometry)) %&gt;% 
  mutate(var = as.factor(var)) 

shape_areas
#&gt; Simple feature collection with 4 features and 3 fields
#&gt; geometry type:  MULTIPOLYGON
#&gt; dimension:      XY
#&gt; bbox:           xmin: 0 ymin: 0 xmax: 2 ymax: 2
#&gt; epsg (SRID):    NA
#&gt; proj4string:    NA
#&gt;   var do_union area                       geometry
#&gt; 1   1    FALSE 1.25 MULTIPOLYGON (((0 0, 1 0, 1...
#&gt; 2   2    FALSE 1.00 MULTIPOLYGON (((0 1, 1 1, 1...
#&gt; 3   3    FALSE 1.10 MULTIPOLYGON (((1 1, 2 1, 2...
#&gt; 4   4    FALSE 1.00 MULTIPOLYGON (((1 0, 2 0, 2...
</code></pre>

<p>If I plot at this point, the area has no bearing on the order of plotting; it just orders by <code>var</code>, numerically:</p>

<pre class=""lang-r prettyprint-override""><code>shape_areas %&gt;%
  ggplot() +
    geom_sf(aes(fill = var), alpha = 0.9)
</code></pre>

<p><img src=""https://i.imgur.com/RFwuJD2.png"" alt=""""></p>

<p>But if I use <code>forcats::fct_reorder</code> to reorder <code>var</code> as a factor by decreasing area, polygons will be plotting in order with the largest polygons at the bottom, and smaller polygons layering on top. <strong>Edit:</strong> as @SeGa pointed out below, this was originally putting larger shapes on top. Use <code>-area</code> or <code>desc(area)</code> to order descending.</p>

<pre class=""lang-r prettyprint-override""><code>shape_areas %&gt;%
  mutate(var = var %&gt;% fct_reorder(-area)) %&gt;%
  ggplot() +
  geom_sf(aes(fill = var), alpha = 0.9)
</code></pre>

<p><img src=""https://i.imgur.com/VTtECvm.png"" alt=""""></p>

<p>Created on 2018-06-30 by the <a href=""http://reprex.tidyverse.org"" rel=""nofollow noreferrer"">reprex package</a> (v0.2.0).</p>"	 If you do this with , you can use to get the area of each polygon (area doesn't make a ton of sense with unprojected toy data, but will make sense with the actual shapes), then order polygons based on area. That way, will create polygons in order by ID. To use , you need the github dev version of , though it's being added to the next CRAN release, slated for next month (July 2018) . First create a simple features collection from the data. In this case, I had to use to make each series of points into a polygon in the proper order ( per this recent question ), then calculate the area of each. If I plot at this point, the area has no bearing on the order of plotting; it just orders by , numerically: But if I use to reorder as a factor by decreasing area, polygons will be plotting in order with the largest polygons at the bottom, and smaller polygons layering on top. Edit: as @SeGa pointed out below, this was originally putting larger shapes on top. Use or to order descending. Created on 2018-06-30 by the reprex package (v0.2.0).
How can I animate a bar chart in Python?	0.99999714	50579783	Plotly Dash - how to set automated colors rather than having blue for everything	pythonplotlyplotly-dash	50580439.0	"<p>You can pass a list of colors, with a different color for each Bar.</p>

<pre><code>trace1 = go.Bar(
    x=pv2.index, 
    y=pv2[('amount','FY17')], 
    name='Revenue',
    marker=dict(
        color=['rgba(204,204,204,1)', 
               'rgba(222,45,38,0.8)',
               ...])
)
</code></pre>

<p>See <a href=""https://plot.ly/python/bar-charts/"" rel=""nofollow noreferrer"">https://plot.ly/python/bar-charts/</a> chapter: Customizing Individual Bar Colors</p>

<p>This might also help: <a href=""https://community.plot.ly/t/different-colors-for-bars-in-barchart-by-their-value/6527/2"" rel=""nofollow noreferrer"">Different colors for bars in barchart by their value</a></p>"	 You can pass a list of colors, with a different color for each Bar. See https://plot.ly/python/bar-charts/ chapter: Customizing Individual Bar Colors This might also help: Different colors for bars in barchart by their value
How can I animate a bar chart in Python?	0.999997	50982227	Recharts Event not working when bar chart bar value is 0	reactjsrecharts	50982773.0	"<p>You can add an onClick attribute on the <a href=""http://recharts.org/#/en-US/api/BarChart"" rel=""nofollow noreferrer"">BarChart</a> component and check <code>data.activePayload[0]</code> to see which bar chart has been clicked.</p>

<pre><code>&lt;BarChart
  width={500}
  height={500}
  layout=""vertical""
  data={data}
  onClick={(data) =&gt; {
    // do your history.push based on data.activePayload[0]
    if (data &amp;&amp; data.activePayload &amp;&amp; data.activePayload.length &gt; 0) {
      return history.push(`/${data.activePayload[0].x.y.id}`);
    }
  }}
&gt;
  &lt;XAxis type=""number"" /&gt;
  &lt;YAxis dataKey=""title"" type=""category"" /&gt;
  &lt;Bar
    dataKey=""score""
    fill={Color}
    label={&lt;CustomLabel /&gt;}
  /&gt;
&lt;/BarChart&gt;
</code></pre>"	 You can add an onClick attribute on the BarChart component and check to see which bar chart has been clicked.
How can I animate a bar chart in Python?	0.999997	14961892	setting python command line position	pythoncommand-linepositioningvpython	15006247.0	"<p>Python doesn't ""own"" the console it's running in.</p>

<p>For a Windows-specific answer you could look into the Win32 APIs that control window focus, size, and position. See this question for more information: <a href=""https://stackoverflow.com/questions/2335721/how-can-i-get-the-window-focused-on-windows-and-re-size-it"">How can I get the window focused on Windows and re-size it?</a></p>"	" Python doesn't ""own"" the console it's running in. For a Windows-specific answer you could look into the Win32 APIs that control window focus, size, and position. See this question for more information: How can I get the window focused on Windows and re-size it?"
How can I animate a bar chart in Python?	0.9999969	36205526	Tooltip bug with dynamic google charts	javascriptsvgdynamicchartstimeline	36206232.0	"<p>So I found the solution , </p>

<pre><code>container = document.getElementById('' + youridentifier + '');
chart = new google.visualization.Timeline(container);
chart.draw(dataSet, options);
</code></pre>

<p>Every time you ""redraw"" the google chart you have to create a new visualization  object .</p>"	" So I found the solution , Every time you ""redraw"" the google chart you have to create a new visualization  object ."
How can I animate a bar chart in Python?	0.9999969	53654389	Make a grouped Bar chart of two percentage variables in r	rgroupingbar-chartpercentage	53666888.0	"<p>Thanks to all for the help I eventually worked it out, this problem may be applicable only to myself but just incase someone else has the same problem here is how I did it:</p>

<p>The data frame needed to be reorganised to allow for easier plotting</p>

<pre><code>     DFP.A &lt;- table(DF3$Date,DF3$P.A)
    DFLP.A &lt;- table(DF3$Date,DF3$L.PA)
    dfa&lt;-as.data.frame(DFP.A)
    dfb&lt;-as.data.frame(DFLP.A)

#This gives the frequencies of upper and lower infected leaves on each date in two different data frames
# i then rename the columns mostly to make it easier for myself
    DFP.A
    DFLP.A
    colnames(dfa)[which(names(dfa) == ""Var1"")] &lt;- ""Date""
    colnames(dfa)[which(names(dfa) == ""Var2"")] &lt;- ""infected""
    colnames(dfa)[which(names(dfa) == ""Freq"")] &lt;- ""Upper_infected""

# i remove the Unifected ones from the data frames (those that have a 0)
  dfa&lt;-dfa[dfa$infected!=""0"",]
    dfa &lt;- subset(dfa, select = - infected)

    colnames(dfb)[which(names(dfb) == ""Var1"")] &lt;- ""Date""
    colnames(dfb)[which(names(dfb) == ""Var2"")] &lt;- ""infected""
    colnames(dfb)[which(names(dfb) == ""Freq"")] &lt;- ""Lower_infected""
    dfb&lt;-dfb[dfb$infected!=""0"",]
    dfb &lt;- subset(dfb, select = - infected)

    dfc&lt;- merge(dfa,dfb, by = ""Date"")


    # melt the dataframe to make it more easily graphed

    library(reshape)
    dfd &lt;- melt(dfc, id=c(""Date""))

    # now attempt the graphs finally 

    ggplot(dfd, aes(factor(Date), value, fill = variable )) + 
      geom_bar(stat=""identity"", position = ""dodge"") + 
      scale_fill_brewer(palette = ""Set1"")
</code></pre>

<p><a href=""https://i.stack.imgur.com/hrxEe.png"" rel=""nofollow noreferrer"">The final grouped bar chart</a></p>"	 Thanks to all for the help I eventually worked it out, this problem may be applicable only to myself but just incase someone else has the same problem here is how I did it: The data frame needed to be reorganised to allow for easier plotting The final grouped bar chart
I know how to create a line chart with matplotlib, but how do I do it in R?	0.9999976	3555551	Why does pip install matplotlib version 0.91.1 when PyPi shows version 1.0.0?	pythonmatplotlibpippypi	3556318.0	"<p>I've experienced the same problem. I have no idea why it happens, but I do have a fix; use the -f option in pip to tell it where to find the matplotlib sources. (This works in requirements.txt as well).</p>

<pre><code>pip install -f http://downloads.sourceforge.net/project/matplotlib/matplotlib/matplotlib-1.0/matplotlib-1.0.0.tar.gz matplotlib
</code></pre>"	 I've experienced the same problem. I have no idea why it happens, but I do have a fix; use the -f option in pip to tell it where to find the matplotlib sources. (This works in requirements.txt as well).
I know how to create a line chart with matplotlib, but how do I do it in R?	0.9999976	54442601	How to plot a tuple with character	pythonpython-3.xmatplotlibtuples	54452640.0	"<p>I may suggest to look into <code>pandas</code>. You can get a nice table out of your data by creating two separate dataframes first and then concatenate them on the same index.</p>

<pre><code>import pandas as pd

L1 = [(10955, 'A'), (10954, 'A'), (10953, 'A'), (10952, 'AB'), 
      (10951, 'AB'), (10950, 'AB'), (10949, 'AB'), (10948, 'ABC')]
L2 = [(10956, 'AB'), (10955, 'AB'), (10954, 'A'), (10953, 'ABC'), 
      (10952, 'DEF'), (10951, 'ABC'), (10950, 'AB'), (10949, 'ABC'), 
      (10948, 'ABC'), (10947, 'ABCD')]

s1 = pd.DataFrame(L1, columns=[""index"", ""L1""]).set_index(""index"")
s2 = pd.DataFrame(L2, columns=[""index"", ""L2""]).set_index(""index"")

df = pd.concat((s1, s2), join=""outer"", axis=1).fillna("""")

print(df)
</code></pre>

<p>This will result in </p>

<pre><code>        L1    L2
index
10947       ABCD
10948  ABC   ABC
10949   AB   ABC
10950   AB    AB
10951   AB   ABC
10952   AB   DEF
10953    A   ABC
10954    A     A
10955    A    AB
10956         AB
</code></pre>

<p>in the console.</p>

<p>You could then also save the table to html and open it in a webbrowser</p>

<pre><code>df.to_html('out.html')
import webbrowser, os
webbrowser.open('file://' + os.path.realpath(""out.html""))
</code></pre>

<p><a href=""https://i.stack.imgur.com/Hp7TH.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/Hp7TH.png"" alt=""enter image description here""></a></p>

<p>If using jupyter, the standard output of pandas dataframe looks very nice by itself.</p>

<p><a href=""https://i.stack.imgur.com/l66ec.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/l66ec.png"" alt=""enter image description here""></a></p>

<p>Using matplotlib (because the question asks for it) one can plot the values from a dataframe inside of an axes, like this</p>

<pre><code>import numpy as np
import matplotlib.pyplot as plt

fig, ax = plt.subplots()

for ind, data in np.ndenumerate(df.values):
    ax.annotate(data, xy=ind[::-1])

ax.set(xticks=range(len(df.columns)), yticks =range(len(df)),
       xticklabels=df.columns, yticklabels=df.index)
ax.set(xlim=(-1, len(df.columns)+1),
       ylim=(-1, len(df)), 
       aspect=.6)
plt.show()
</code></pre>

<p><a href=""https://i.stack.imgur.com/MzFN5.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/MzFN5.png"" alt=""enter image description here""></a></p>

<p>Also, matplotlib provides tables</p>

<pre><code>import matplotlib.pyplot as plt

fig, ax = plt.subplots()
ax.table(cellText=df.values, rowLabels=df.index, colLabels=df.columns, loc='center')
ax.axis(""off"")
plt.show()
</code></pre>

<p><a href=""https://i.stack.imgur.com/pXs7j.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/pXs7j.png"" alt=""enter image description here""></a></p>"	 I may suggest to look into . You can get a nice table out of your data by creating two separate dataframes first and then concatenate them on the same index. This will result in in the console. You could then also save the table to html and open it in a webbrowser If using jupyter, the standard output of pandas dataframe looks very nice by itself. Using matplotlib (because the question asks for it) one can plot the values from a dataframe inside of an axes, like this Also, matplotlib provides tables
I know how to create a line chart with matplotlib, but how do I do it in R?	0.9999976	15245934	Bulls eye plot of image	pythonmatplotlib	15294377.0	"<p>I don't think that there is a specific <code>bullseye</code> method in <code>matplotlib</code>, but comparing what the matlab function does and the right plot in this <a href=""https://stackoverflow.com/a/10838501/1860757"">answer</a>, I think that you should be able to get what you want playing a bit with the radius coordinates. E.g. (borrowing from the aforesaid answer)</p>

<pre><code>import numpy as np
import matplotlib.pyplot as plt

theta, r = np.mgrid[0:2*np.pi:20j, 0.2:1:10j]
z = np.random.random(theta.size).reshape(theta.shape)

fig, ax = plt.subplots(ncols=1, subplot_kw=dict(projection='polar'))

ax.pcolormesh(theta, r, z)
ax.set_yticklabels([])
ax.set_ylim([0, 1])

plt.show()
</code></pre>

<p>plots <img src=""https://i.stack.imgur.com/ZWQIo.png"" alt=""this""></p>

<p>I don't understand exactly what you mean with the question about the colors. <code>ax.pcolormesh</code> accept either a <a href=""http://matplotlib.org/examples/pylab_examples/show_colormaps.html"" rel=""nofollow noreferrer"">colormap</a> or a matplotlib <a href=""http://matplotlib.org/api/colors_api.html"" rel=""nofollow noreferrer"">color</a>. If you want specific colors you can play with those two parameters and/or create your own colormap.</p>"	 I don't think that there is a specific method in , but comparing what the matlab function does and the right plot in this answer , I think that you should be able to get what you want playing a bit with the radius coordinates. E.g. (borrowing from the aforesaid answer) plots I don't understand exactly what you mean with the question about the colors. accept either a colormap or a matplotlib color . If you want specific colors you can play with those two parameters and/or create your own colormap.
I know how to create a line chart with matplotlib, but how do I do it in R?	0.9999976	36098468	How to plot bar graph in python	pythonmatplotlibmatplotlib-basemapmatplotlib-widget	36098676.0	"<p>Try this using matplotlib:</p>

<pre><code>import matplotlib.pyplot as plt
data = {0: 0, 1: 19.091883092036781, 2: 35.317606562921746, 3: 22.122563913375465, 4: 37.961028320110699, 5: 36.541670802198659}
bar_width = 0.8
plt.bar([x for x in data], [data[x] for x in data], bar_width)
plt.xticks([x + bar_width/2 for x in data], (' ', 'AT','BT','CT','DT','ET'))  
</code></pre>

<p><a href=""https://i.stack.imgur.com/XZNm0.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/XZNm0.png"" alt=""enter image description here""></a></p>"	 Try this using matplotlib:
I know how to create a line chart with matplotlib, but how do I do it in R?	0.9999975	9829175	Pip install Matplotlib error with virtualenv	pythonmatplotlibpipvirtualenv	9843560.0	"<p>Building Matplotlib requires <code>libpng</code> (and <code>freetype</code>, as well) which isn't a python library, so <code>pip</code> doesn't handle installing it (or <code>freetype</code>).  </p>

<p>You'll need to install something along the lines of <code>libpng-devel</code> and <code>freetype-devel</code> (or whatever the equivalent is for your OS).</p>

<p>See the <a href=""http://matplotlib.sourceforge.net/users/installing.html#build-requirements"">building requirements/instructions</a> for matplotlib.</p>"	 Building Matplotlib requires (and , as well) which isn't a python library, so doesn't handle installing it (or ). You'll need to install something along the lines of and (or whatever the equivalent is for your OS). See the building requirements/instructions for matplotlib.
What is the easiest way to create a heat map of the US?	0.999997	37529116	How to plot a heat map with irregular data in ordinates in ggplot?	rggplot2heatmap	37530156.0	"<p>You can use <code>akima</code> to interpolate the function into a form suitable for heat map plots.</p>

<pre><code>library(akima)
library(ggplot2) 
my.df.interp &lt;- interp(x = my.df$theta, y = my.df$x, z = my.df$y, nx = 30, ny = 30) 
my.df.interp.xyz &lt;- as.data.frame(interp2xyz(my.df.interp))
names(my.df.interp.xyz) &lt;- c(""theta"", ""x"", ""y"")

ggplot(my.df.interp.xyz, aes(x = theta, y = x, fill = y)) + geom_tile() + 
scale_fill_gradient(low = ""blue"", high = ""red"")
</code></pre>

<p><a href=""https://i.stack.imgur.com/3cBH4.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/3cBH4.png"" alt=""enter image description here""></a></p>

<p>If you wish to use a different resolution you can change the <code>nx</code> and <code>ny</code> arguments to <code>interp</code>.</p>

<p>Another way to do it with just <code>ggplot2</code> is to use <code>stat_summary_2d</code>.</p>

<pre><code>library(ggplot2)
ggplot(my.df, aes(x = theta, y = x, z = y)) + stat_summary_2d(binwidth = 0.3) + 
scale_fill_gradient(low = ""blue"", high = ""red"")
</code></pre>

<p><a href=""https://i.stack.imgur.com/FeYAd.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/FeYAd.png"" alt=""enter image description here""></a></p>"	 You can use to interpolate the function into a form suitable for heat map plots. If you wish to use a different resolution you can change the and arguments to . Another way to do it with just is to use .
What is the easiest way to create a heat map of the US?	0.9999968	36342635	Plotting 2D heat map	c#chartsheatmap	36392680.0	"<p>You have a choice of at least three ways to create a chart with colored rectangles that make up a heat map.</p>

<p>Here is one  <a href=""https://stackoverflow.com/questions/26461579/displaying-heatmap-in-datagridview-from-listlistt-in-c-sharp/26482670?s=3|1.8616#26482670"">example</a>
that uses/abuses a <code>DataGridView</code>. While I would not suggest this, the post contains a useful function that creates nice color lists to use in your task.</p>

<p>Then there is the option to draw the chart using GDI+ methods, namely <code>Graphics.FillRectangle</code>.  This not hard at all but once you want to get those nice extras a Chart control offers, like scaling, axes, tooltips etc the work adds up.. See below!</p>

<p>So let's have a look at option three: Using the <code>Chart</code> control from the <code>DataVisualization</code> namespace.</p>

<p>Let's first assume that you have created a list of colors:</p>

<pre><code>List&lt;Color&gt; colorList = new List&lt;Color&gt;();
</code></pre>

<p>And that you have managed to project your data onto a 2D array of int indices that point into the color list:</p>

<pre><code>int[,] coloredData = null;
</code></pre>

<p>Next you have to pick a <code>ChartType</code> for your <code>Series S1</code> There really is only one I can think of that will help:</p>

<pre><code>S1.ChartType = SeriesChartType.Point;
</code></pre>

<p>Points are displayed by <code>Markers</code>. We want the <code>DataPoints</code> not really displayed as one of the standard <a href=""https://msdn.microsoft.com/en-us/library/system.windows.forms.datavisualization.charting.markerstyle(v=vs.110).aspx"" rel=""nofollow noreferrer"">MarkerTypes</a>.</p>

<p><code>Square</code> would be ok, if we wanted to display squares; but for rectangles it will not work well: Even if we let them overlap there will still be points at the borders that have a different size because they don't fully overlap..</p>

<p>So we use a <strong>custom</strong> marker by setting the <code>MarkerImage</code> of each point to a <strong>bitmap</strong> of a suitable size and color.</p>

<p>Here is a loop that adds the <code>DataPoints</code> to our <code>Series</code> and sets each to have a <code>MarkerImage</code>:</p>

<pre><code>for (int x = 1; x &lt; coloredData.GetLength(0); x++)
    for (int y = 1; y &lt; coloredData.GetLength(1); y++)
    {
        int pt = S1.Points.AddXY(x, y);
        S1.Points[pt].MarkerImage = ""NI"" +  coloredData[x,y];

    }
</code></pre>

<p>This takes some explaining: To set a <code>MarkerImage</code> that is not at a path on the disk, it has to reside in the <code>Chart's Images</code> collection. This means is needs to be of type <code>NamedImage</code>. Any image will do, but it has to have a unique name string added to identify it in the <code>NamedImagesCollection</code> . I chose the names to be 'NI1', 'NI2'..</p>

<p>Obviously we need to create all those images; here is a function to do that:</p>

<pre><code>void createMarkers(Chart chart, int count)
{
    // rough calculation:
    int sw = chart.ClientSize.Width / coloredData.GetLength(0);
    int sh = chart.ClientSize.Height / coloredData.GetLength(1);

    // clean up previous images:
    foreach(NamedImage ni in chart1.Images) ni.Dispose();
    chart.Images.Clear();

    // now create count images:
    for (int i = 0; i &lt; count; i++)
    {
        Bitmap bmp = new Bitmap(sw, sh);
        using (Graphics G = Graphics.FromImage(bmp))
            G.Clear(colorList[i]);
        chart.Images.Add(new NamedImage(""NI"" + i, bmp));
    }
}
</code></pre>

<p>We want all markers to have at least roughly the right size; so whenever that size changes we set it again:</p>

<pre><code>void setMarkerSize(Chart chart)
{
    int sx = chart1.ClientSize.Width / coloredData.GetLength(0);
    int sy = chart1.ClientSize.Height / coloredData.GetLength(1);
    chart1.Series[""S1""].MarkerSize = (int)Math.Max(sx, sy);
}
</code></pre>

<p>This doesn't care much about details like the <code>InnerPlotPosition</code>, i.e. the actual area to draw to; so here is some room for refinement..!</p>

<p>We call this when we set up the chart but also upon <strong>resizing</strong>:</p>

<pre><code>private void chart1_Resize(object sender, EventArgs e)
{
    setMarkerSize(chart1);
    createMarkers(chart1, 100);
}
</code></pre>

<p>Let's have a look at the result using some cheap testdata:</p>

<p><a href=""https://i.stack.imgur.com/hMY3w.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/hMY3w.png"" alt=""enter image description here""></a><a href=""https://i.stack.imgur.com/bHklF.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/bHklF.png"" alt=""enter image description here""></a></p>

<p>As you can see resizing works ok..</p>

<p>Here is the full code that set up my example:</p>

<pre><code>private void button6_Click(object sender, EventArgs e)
{
    List&lt;Color&gt; stopColors = new List&lt;Color&gt;()
    { Color.Blue, Color.Cyan, Color.YellowGreen, Color.Orange, Color.Red };
    colorList = interpolateColors(stopColors, 100);

    coloredData = getCData(32, 24);
    // basic setup..
    chart1.ChartAreas.Clear();
    ChartArea CA = chart1.ChartAreas.Add(""CA"");
    chart1.Series.Clear();
    Series S1 = chart1.Series.Add(""S1"");
    chart1.Legends.Clear();
    // we choose a charttype that lets us add points freely:
    S1.ChartType = SeriesChartType.Point;

    Size sz = chart1.ClientSize;

    // we need to make the markers large enough to fill the area completely:
    setMarkerSize(chart1);
    createMarkers(chart1, 100);

    // now we fill in the datapoints
    for (int x = 1; x &lt; coloredData.GetLength(0); x++)
        for (int y = 1; y &lt; coloredData.GetLength(1); y++)
        {
            int pt = S1.Points.AddXY(x, y);
            //  S1.Points[pt].Color = coloredData[x, y];

            S1.Points[pt].MarkerImage = ""NI"" +  coloredData[x,y];
        }
}
</code></pre>

<p>A few notes on limitations:</p>

<ul>
<li><p>The point will always sit on top of any gridlines. If you really needs those you will have to draw them on top in one of the the <code>Paint</code> events.</p></li>
<li><p>The labels as shown are referring to the integers indices of the data array. If you want to show the original data, one way would be to add <code>CustomLabels</code> to the axes.. See <a href=""https://stackoverflow.com/questions/36294015/convert-seconds-to-hhhmmss-in-a-chart/36329469?s=1|0.0000#36329469"">here for an example</a>!</p></li>
</ul>

<p>This should give you an idea of what you can do with a <code>Chart</code> control; to complete your confusion here is how to draw those rectangles in GDI+ using the same colors and data:</p>

<pre><code>Bitmap getChartImg(float[,] data, Size sz, Padding pad) 
{
    Bitmap bmp = new Bitmap(sz.Width , sz.Height);
    using (Graphics G = Graphics.FromImage(bmp))
    {
        float w = 1f * (sz.Width - pad.Left - pad.Right) / coloredData.GetLength(0);
        float h = 1f * (sz.Height - pad.Top - pad.Bottom) / coloredData.GetLength(1);
        for (int x = 0; x &lt; coloredData.GetLength(0); x++)
            for (int y = 0; y &lt; coloredData.GetLength(1); y++)
            {
                using (SolidBrush brush = new SolidBrush(colorList[coloredData[x,y]]))
                    G.FillRectangle(brush, pad.Left + x * w, y * h - pad.Bottom, w, h);
            }

    }
    return bmp;
}
</code></pre>

<p>The resulting Bitmap looks familiar:</p>

<p><a href=""https://i.stack.imgur.com/RTZF1.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/RTZF1.png"" alt=""enter image description here""></a></p>

<p>That was simple; but to add all the extras into the space reserved by the padding will not be so easy..</p>"	 You have a choice of at least three ways to create a chart with colored rectangles that make up a heat map. Here is one example that uses/abuses a . While I would not suggest this, the post contains a useful function that creates nice color lists to use in your task. Then there is the option to draw the chart using GDI+ methods, namely .  This not hard at all but once you want to get those nice extras a Chart control offers, like scaling, axes, tooltips etc the work adds up.. See below! So let's have a look at option three: Using the control from the namespace. Let's first assume that you have created a list of colors: And that you have managed to project your data onto a 2D array of int indices that point into the color list: Next you have to pick a for your There really is only one I can think of that will help: Points are displayed by . We want the not really displayed as one of the standard MarkerTypes . would be ok, if we wanted to display squares; but for rectangles it will not work well: Even if we let them overlap there will still be points at the borders that have a different size because they don't fully overlap.. So we use a custom marker by setting the of each point to a bitmap of a suitable size and color. Here is a loop that adds the to our and sets each to have a : This takes some explaining: To set a that is not at a path on the disk, it has to reside in the collection. This means is needs to be of type . Any image will do, but it has to have a unique name string added to identify it in the . I chose the names to be 'NI1', 'NI2'.. Obviously we need to create all those images; here is a function to do that: We want all markers to have at least roughly the right size; so whenever that size changes we set it again: This doesn't care much about details like the , i.e. the actual area to draw to; so here is some room for refinement..! We call this when we set up the chart but also upon resizing : Let's have a look at the result using some cheap testdata: As you can see resizing works ok.. Here is the full code that set up my example: A few notes on limitations: The point will always sit on top of any gridlines. If you really needs those you will have to draw them on top in one of the the events. The labels as shown are referring to the integers indices of the data array. If you want to show the original data, one way would be to add to the axes.. See here for an example ! This should give you an idea of what you can do with a control; to complete your confusion here is how to draw those rectangles in GDI+ using the same colors and data: The resulting Bitmap looks familiar: That was simple; but to add all the extras into the space reserved by the padding will not be so easy..
What is the easiest way to create a heat map of the US?	0.99999666	56304426	Create TopoJson/GeoJson map of US South East	d3.jshighchartspowerbigeojsontopojson	56328447.0	"<p>The simplest solution is to create a chart with some basic map of the USA with states and use <code>remove</code> methods for unwanted points.</p>

<pre><code>chart: {
    map: 'countries/us/us-all',
    animation: false,
    events: {
        load: function() {
            var points = this.series[0].points;

            points.forEach(function(p) {
                if (!p.value) {
                    p.remove();

                }
            });

            this.mapZoom(0.56, 7251, -5218);
        }
    }
}
</code></pre>

<p><strong>Live demo:</strong> <a href=""http://jsfiddle.net/BlackLabel/v69nsryz/"" rel=""nofollow noreferrer"">http://jsfiddle.net/BlackLabel/v69nsryz/</a></p>

<p><strong>API Reference:</strong> <a href=""https://api.highcharts.com/class-reference/Highcharts.Chart#mapZoom"" rel=""nofollow noreferrer"">https://api.highcharts.com/class-reference/Highcharts.Chart#mapZoom</a></p>

<hr>

<p>You can also search the Highmaps map collection or create a custom map.</p>

<p><strong>Map collection:</strong> <a href=""https://code.highcharts.com/mapdata/"" rel=""nofollow noreferrer"">https://code.highcharts.com/mapdata/</a></p>

<p><strong>Docs:</strong> <a href=""https://www.highcharts.com/docs/maps/custom-maps"" rel=""nofollow noreferrer"">https://www.highcharts.com/docs/maps/custom-maps</a></p>"	 The simplest solution is to create a chart with some basic map of the USA with states and use methods for unwanted points. Live demo: http://jsfiddle.net/BlackLabel/v69nsryz/ API Reference: https://api.highcharts.com/class-reference/Highcharts.Chart#mapZoom You can also search the Highmaps map collection or create a custom map. Map collection: https://code.highcharts.com/mapdata/ Docs: https://www.highcharts.com/docs/maps/custom-maps
What is the easiest way to create a heat map of the US?	0.9999957	56098762	How to get the last row of Google DataTable in javascript?	javascriptphparraysgoogle-visualization	56099008.0	"<p>You want to use <code>.getValue(rowIndex, columnIndex)</code> (see <a href=""https://developers.google.com/chart/interactive/docs/reference#DataTable"" rel=""nofollow noreferrer"">docs</a>). </p>

<p>This way you can also easily pick and choose what you want, e.g. you might decide you want to use only the temperature, or the humidity values for example, not just the entire row.</p>

<pre><code>let rowIndex = data.getNumberOfRows() - 1; //gets the row index of last row
let lastTime = data.getValue(rowIndex, 0); //gets the first column
let lastTemp = data.getValue(rowIndex, 1); //gets second column
let lastHum = data.getValue(rowIndex,2); //gets third column

console.log(`[${lastTime}, ${lastTemp}, ${lastHum}]`);
</code></pre>"	 You want to use (see docs ). This way you can also easily pick and choose what you want, e.g. you might decide you want to use only the temperature, or the humidity values for example, not just the entire row.
What is the easiest way to create a heat map of the US?	0.9999956	34939093	Create a checkerboard plot with unbalanced rows and colums	pythonmatplotlib	34939213.0	"<p>You can use seaborn library or matplotlib to generate heatmap. Firstly, convert it to pandas dataframe to handle missing values.</p>

<pre><code>import pandas as pd
df = pd.DataFrame([[1,4,5],[34,70,1,5], [43,89,4,11],[22,76,4]])
%matplotlib inline
from matplotlib import pyplot as plt
import seaborn as sns
sns.heatmap(df)
plt.show()
</code></pre>

<p>Result looks something like this.
<a href=""https://i.stack.imgur.com/fqpel.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/fqpel.png"" alt=""enter image description here""></a></p>"	 You can use seaborn library or matplotlib to generate heatmap. Firstly, convert it to pandas dataframe to handle missing values. Result looks something like this.
How can I animate a choropleth in Tableau?  In PowerBI?  In D3?	0.99999654	36066080	Optimize pendulum animation (javascript)	javascriptanimationd3.jssvgplotly	36072487.0	"<p>I'm the author of <a href=""http://maurizzzio.github.io/function-plot/"" rel=""nofollow"">function plot</a> which is built on top of d3, luckily d3 has methods to perform mappings in <a href=""https://github.com/d3/d3-scale"" rel=""nofollow"">d3-scale</a> so assuming that you have a canvas of <code>width x height</code> dimensions which should be mapped linearly to the rectangle <code>[xMin, yMin] x [xMax, yMax]</code> in 2D euclidean space you'd need to create two linear scales</p>

<pre><code>var xScale = d3.scale.linear()
  .domain([xMin, xMax])
  .range([0, width])

var yScale = d3.scale.linear()
  .domain([yMin, yMax])
  .range([height, 0])
</code></pre>

<p>Note that in SVG the y axis is flipped and because of that the <code>yScale</code> range's flipped too, then any 2D euclidean point is transformed to SVG coordinates as follows</p>

<pre><code>var xCanvas = xScale(point.x)
var yCanvas = yScale(point.y)
</code></pre>

<p>The inverse transformation is given by</p>

<pre><code>var xLogical = xScale.invert(point.x)
var xLogical = yScale.invert(point.y)
</code></pre>

<p>A possible solution I wrote to your problem using the above is</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""false"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>var instance = functionPlot({
  target: '#demo',
  disableZoom: true,
  data: [{
    fn: 'sin(10*(-cos(x) + y^2/2-1))',
    fnType: 'implicit'
  }]
})
var xScale = instance.meta.xScale
var yScale = instance.meta.yScale
var canvas = instance.canvas

var circle = canvas.append('circle')
  .attr(""r"", 5)
  .style(""fill"", ""purple"")

var start = Date.now()

function animate() {
  
  // move the point along the circle of radius 1
  var t = (Date.now() - start) * 0.003
  var xLogical = Math.cos(t)
  var yLogical = Math.sin(t)
  var xCanvas = xScale(xLogical)
  var yCanvas = yScale(yLogical)
  circle
    .attr('cx', xCanvas)
    .attr('cy', yCanvas)
  
  requestAnimationFrame(animate)
}

animate()</code></pre>
<pre class=""snippet-code-html lang-html prettyprint-override""><code>&lt;script src=""https://cdnjs.cloudflare.com/ajax/libs/d3/3.4.11/d3.min.js""&gt;&lt;/script&gt;
&lt;script src=""https://maurizzzio.github.io/function-plot/js/function-plot.js""&gt;&lt;/script&gt;
&lt;div id=""demo""&gt;&lt;/div&gt;</code></pre>
</div>
</div>
</p>

<p><a href=""https://github.com/maurizzzio/function-plot/issues/59"" rel=""nofollow"">Issue in function plot's GitHub</a></p>"	 I'm the author of function plot which is built on top of d3, luckily d3 has methods to perform mappings in d3-scale so assuming that you have a canvas of dimensions which should be mapped linearly to the rectangle in 2D euclidean space you'd need to create two linear scales Note that in SVG the y axis is flipped and because of that the range's flipped too, then any 2D euclidean point is transformed to SVG coordinates as follows The inverse transformation is given by A possible solution I wrote to your problem using the above is Issue in function plot's GitHub
How can I animate a choropleth in Tableau?  In PowerBI?  In D3?	0.9999964	15141204	WPF C# DynamicDataDisplay - Changing the DateTimeAxis Color	c#wpfchartsdynamic-data-display	19841218.0	"<p>Curiously, I've happened to be trying to do the same thing.  It turns out those colours are hard-coded in <code>MayorDateTimeLabelProvider.cs</code> (I've noted the lines in comments below).  If you're using the compiled DLL then there is no way to change the values.  Personally, D3 is so immature that I keep my own build of it and make changes to extend it as needed (such as in this case!).  </p>

<pre><code>public override UIElement[] CreateLabels(ITicksInfo&lt;DateTime&gt; ticksInfo)
{
    object info = ticksInfo.Info;
    var ticks = ticksInfo.Ticks;
    UIElement[] res = new UIElement[ticks.Length - 1];
    int labelsNum = 3;

    if (info is DifferenceIn)
    {
        DifferenceIn diff = (DifferenceIn)info;
        DateFormat = GetDateFormat(diff);
    }
    else if (info is MayorLabelsInfo)
    {
        MayorLabelsInfo mInfo = (MayorLabelsInfo)info;
        DifferenceIn diff = (DifferenceIn)mInfo.Info;
        DateFormat = GetDateFormat(diff);
        labelsNum = mInfo.MayorLabelsCount + 1;

        //DebugVerify.Is(labelsNum &lt; 100);
    }

    DebugVerify.Is(ticks.Length &lt; 10);

    LabelTickInfo&lt;DateTime&gt; tickInfo = new LabelTickInfo&lt;DateTime&gt;();
    for (int i = 0; i &lt; ticks.Length - 1; i++)
    {
        tickInfo.Info = info;
        tickInfo.Tick = ticks[i];

        string tickText = GetString(tickInfo);

        Grid grid = new Grid
        {
            Background = Brushes.Beige // **** HARD CODED HERE
        };
        Rectangle rect = new Rectangle
        {
            Stroke = Brushes.Peru,     // **** AND HERE
            StrokeThickness = 2
        };
        Grid.SetColumn(rect, 0);
        Grid.SetColumnSpan(rect, labelsNum);

        for (int j = 0; j &lt; labelsNum; j++)
        {
            grid.ColumnDefinitions.Add(new ColumnDefinition());
        }

        grid.Children.Add(rect);

        for (int j = 0; j &lt; labelsNum; j++)
        {
            var tb = new TextBlock
            {
                Text = tickText,
                HorizontalAlignment = HorizontalAlignment.Center,
                Margin = new Thickness(0, 3, 0, 3)
            };
            Grid.SetColumn(tb, j);
            grid.Children.Add(tb);
        }

        ApplyCustomView(tickInfo, grid);

        res[i] = grid;
    }

    return res;
}
</code></pre>"	 Curiously, I've happened to be trying to do the same thing.  It turns out those colours are hard-coded in (I've noted the lines in comments below).  If you're using the compiled DLL then there is no way to change the values.  Personally, D3 is so immature that I keep my own build of it and make changes to extend it as needed (such as in this case!).
How can I animate a choropleth in Tableau?  In PowerBI?  In D3?	0.9999963	34930763	What is the logic behind d3.js nice() ticks	javascriptpythond3.jschartspycairo	34931208.0	"<p>D3 is open source, so you can <a href=""https://github.com/d3/d3-scale/blob/master/src/nice.js"" rel=""nofollow noreferrer"">look up the implementation</a>. It basically boils down to rounding the extreme values:</p>

<pre><code>domain[i0] = nice.floor(x0);
domain[i1] = nice.ceil(x1);
</code></pre>"	 D3 is open source, so you can look up the implementation . It basically boils down to rounding the extreme values:
How can I animate a choropleth in Tableau?  In PowerBI?  In D3?	0.99999595	18595600	UIView emanate rings matching shape of border	iosobjective-cuiviewcore-graphicscore-animation	18616374.0	"<p>I would suggest using one or more CAShapeLayer objects, and animating the scale of the CGPath that is installed in the shape layer.</p>

<p>Shape layers animate changes to their path by default.</p>

<p>You should be able to create a set of shape layers that stroke the ellipse that you want to draw, and change the scale setting of those paths to  get the effect you want.</p>"	 I would suggest using one or more CAShapeLayer objects, and animating the scale of the CGPath that is installed in the shape layer. Shape layers animate changes to their path by default. You should be able to create a set of shape layers that stroke the ellipse that you want to draw, and change the scale setting of those paths to  get the effect you want.
How can I animate a choropleth in Tableau?  In PowerBI?  In D3?	0.9999956	15031154	Filter CSV rows to return a chart	javascriptd3.jsdata-visualization	15031383.0	"<p>I don't know the d3 library very well, but it looks as though the <code>d3.csv</code> call is asynchronous.  Your <code>theBeeyatch</code> variable won't have any meaningful data when the function  returns.  Perhaps this would work:</p>

<pre><code>var theBeeyatch = d3.csv(""data/SalesDUMP.csv"", function(csv) {
    csv = csv.filter(function(row) {
        return row['Year'] == '2012' || row['Month'] == '1';
    });

    var Chart = d3.select(""body"")
        // ...
        .selectAll(""rect"")
        .data(csv)
        // ...
});
</code></pre>

<p>Of course you don't need the <code>theBeeyatch</code> variable here now, but perhaps you need it elsewhere...</p>"	 I don't know the d3 library very well, but it looks as though the call is asynchronous.  Your variable won't have any meaningful data when the function  returns.  Perhaps this would work: Of course you don't need the variable here now, but perhaps you need it elsewhere...
